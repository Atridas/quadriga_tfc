package cat.quadriga.parsers;
import java.io.*;import java.util.*;import cat.quadriga.parsers.code.*;import cat.quadriga.parsers.code.expressions.*;import cat.quadriga.parsers.code.expressions.dataaccess.*;import cat.quadriga.parsers.code.printers.*;import cat.quadriga.parsers.code.proxy.*;import cat.quadriga.parsers.code.statements.*;import cat.quadriga.parsers.code.symbols.*;import cat.quadriga.parsers.code.types.*;
@ ()public class QuadrigaSimple implements {
  static public final class ModifierSet {
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public static final I ;
    public Z isPublic
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isProtected
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isPrivate
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isStatic
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isAbstract
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isFinal
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isNative
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isStrictfp
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isSynchronized
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isTransient
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    public Z isVolatile
    Params
    modifiers: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    static I removeModifier
    Params
    modifiers: I
    mod: I
    Block:
    +- Local Variables:
    +- Code:
       +- >> Proxy Statement: 
          +- return ;
          <<
    
  }
  
  private I ;
  private I getNewId
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Lcat.quadriga.parsers.code.ErrorLog; ;
  private Lcat.quadriga.parsers.code.symbols.SymbolTable; ;
  private Lcat.quadriga.parsers.code.statements.StatementNode; ;
  private #unknown BlockCode.TmpBlockCode # ;
  public QuadrigaSimple
  Params
  fileName: Ljava.lang.String;
  {
    this;
    >> Proxy Statement: 
    +- try 
    +- Block:
    +- +- Local Variables:
    +- +- Code:
    +-    +- St: Proxy Call
    +-       +- Op: >> Proxy Data Access [ ReInit ] << [#unknown#]
    +-       +- Arguments
    +-          +- Op: Constructor [Ljava.io.FileInputStream;]
    +-             +- Ljava.io.FileInputStream;
    +-             +- Arguments
    +-                +- Op: Constructor [Ljava.io.File;]
    +-                   +- Ljava.io.File;
    +-                   +- Arguments
    +-                      +- Op: Local variable access: fileName [Ljava.lang.String;] catch() 
    +- Block:
    +- +- Local Variables:
    +- +- Code:
    +-    +- St: Proxy Call
    +-       +- Op: >> Proxy Data Access [ e.printStackTrace ] << [#unknown#]
    +-       +- Arguments
    <<
  }
  public static main
  Params
  args: [Ljava.lang.String;
  Block:
  +- Local Variables:
  |  +- Symbol Var [ parser ] Type [ Lcat.quadriga.parsers.QuadrigaSimple; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: == [Z]
     |  |     +- Op: Array Length [I]
     |  |     |  +- Op: Local variable access: args [[Ljava.lang.String;]
     |  |     +- Op: Literal [I]
     |  |        +- Integer: 0
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.io.PrintStream -> println
     |  |        |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |  |        |  |     +- java.lang.System -> out
     |  |        |  +- Arguments
     |  |        |     +- Op: Literal [Ljava.lang.String;]
     |  |        |        +- String: "Java Parser Version 1.1:  Reading from standard input . . ."
     |  |        +- St: =
     |  |           +- Op: Local variable access: parser [Lcat.quadriga.parsers.QuadrigaSimple;]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.QuadrigaSimple;]
     |  |              +- Lcat.quadriga.parsers.QuadrigaSimple;
     |  |              +- Arguments
     |  |                 +- Op: Static Field: [Ljava.io.InputStream;]
     |  |                    +- java.lang.System -> in
     |  +- Else Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: == [Z]
     |        |     +- Op: >> Proxy Data Access [ args.length ] << [#unknown#]
     |        |     +- Op: Literal [I]
     |        |        +- Integer: 1
     |        +- If Code:
     |        |  +- Block:
     |        |     +- Local Variables:
     |        |     +- Code:
     |        |        +- St: Call
     |        |        |  +- Op: Method:
     |        |        |  |  +- java.io.PrintStream -> println
     |        |        |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |        |        |  |     +- java.lang.System -> out
     |        |        |  +- Arguments
     |        |        |     +- Op: + [Ljava.lang.String;]
     |        |        |        +- Op: + [Ljava.lang.String;]
     |        |        |        |  +- Op: Literal [Ljava.lang.String;]
     |        |        |        |  |  +- String: "Java Parser Version 1.1:  Reading from file "
     |        |        |        |  +- Op: >> proxy [ [] ] [#unknown#]
     |        |        |        +- Op: Literal [Ljava.lang.String;]
     |        |        |           +- String: " . . ."
     |        |        +- >> Proxy Statement: 
     |        |           +- try 
     |        |           +- Block:
     |        |           +- +- Local Variables:
     |        |           +- +- Code:
     |        |           +-    +- St: =
     |        |           +-       +- Op: >> Proxy Data Access [ parser ] << [#unknown#]
     |        |           +-       +- Op: Constructor [Lcat.quadriga.parsers.QuadrigaSimple;]
     |        |           +-          +- Lcat.quadriga.parsers.QuadrigaSimple;
     |        |           +-          +- Arguments
     |        |           +-             +- Op: Constructor [Ljava.io.FileInputStream;]
     |        |           +-             |  +- Ljava.io.FileInputStream;
     |        |           +-             |  +- Arguments
     |        |           +-             |     +- Op: >> proxy [ [] ] [#unknown#]
     |        |           +-             +- Op: Literal [Ljava.lang.String;]
     |        |           +-                +- String: "UTF-8" catch() 
     |        |           +- Block:
     |        |           +- +- Local Variables:
     |        |           +- +- Code:
     |        |           +-    +- St: Call
     |        |           +-    |  +- Op: Method:
     |        |           +-    |  |  +- java.io.PrintStream -> println
     |        |           +-    |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |        |           +-    |  |     +- java.lang.System -> out
     |        |           +-    |  +- Arguments
     |        |           +-    |     +- Op: + [Ljava.lang.String;]
     |        |           +-    |        +- Op: + [Ljava.lang.String;]
     |        |           +-    |        |  +- Op: Literal [Ljava.lang.String;]
     |        |           +-    |        |  |  +- String: "Java Parser Version 1.1:  File "
     |        |           +-    |        |  +- Op: >> proxy [ [] ] [#unknown#]
     |        |           +-    |        +- Op: Literal [Ljava.lang.String;]
     |        |           +-    |           +- String: " not found."
     |        |           +-    +- >> Proxy Statement: 
     |        |           +-       +- return ;
     |        |           +-       <<
     |        |           <<
     |        +- Else Code:
     |           +- Block:
     |              +- Local Variables:
     |              +- Code:
     |                 +- St: Call
     |                 |  +- Op: Method:
     |                 |  |  +- java.io.PrintStream -> println
     |                 |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |                 |  |     +- java.lang.System -> out
     |                 |  +- Arguments
     |                 |     +- Op: Literal [Ljava.lang.String;]
     |                 |        +- String: "Java Parser Version 1.1:  Usage is one of:"
     |                 +- St: Call
     |                 |  +- Op: Method:
     |                 |  |  +- java.io.PrintStream -> println
     |                 |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |                 |  |     +- java.lang.System -> out
     |                 |  +- Arguments
     |                 |     +- Op: Literal [Ljava.lang.String;]
     |                 |        +- String: "         java JavaParser < inputfile"
     |                 +- St: Call
     |                 |  +- Op: Method:
     |                 |  |  +- java.io.PrintStream -> println
     |                 |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |                 |  |     +- java.lang.System -> out
     |                 |  +- Arguments
     |                 |     +- Op: Literal [Ljava.lang.String;]
     |                 |        +- String: "OR"
     |                 +- St: Call
     |                 |  +- Op: Method:
     |                 |  |  +- java.io.PrintStream -> println
     |                 |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
     |                 |  |     +- java.lang.System -> out
     |                 |  +- Arguments
     |                 |     +- Op: Literal [Ljava.lang.String;]
     |                 |        +- String: "         java JavaParser inputfile"
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- |  +- Symbol Var [ info ] Type [ Ljava.util.List; ]
        +- |  +- Symbol Var [ mp ] Type [ Lcat.quadriga.parsers.code.printers.MegaPrinter; ]
        +- +- Code:
        +-    +- Statements:
        +-    |  +- St: =
        +-    |     +- Op: Local variable access: info [Ljava.util.List;]
        +-    |     +- Op: Proxy Call [#unknown#]
        +-    |        +- Op: >> Proxy Data Access [ parser.CompilationUnit ] << [#unknown#]
        +-    |        +- Arguments
        +-    +- St: Call
        +-    |  +- Op: Method:
        +-    |  |  +- java.io.PrintStream -> println
        +-    |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
        +-    |  |     +- java.lang.System -> out
        +-    |  +- Arguments
        +-    |     +- Op: Literal [Ljava.lang.String;]
        +-    |        +- String: "Java Parser Version 1.1:  Java program parsed successfully."
        +-    +- Statements:
        +-    |  +- St: =
        +-    |     +- Op: Local variable access: mp [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
        +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
        +-    |        +- Op: Method:
        +-    |        |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
        +-    |        +- Arguments
        +-    +- St: Call
        +-    |  +- Op: Method:
        +-    |  |  +- java.io.PrintStream -> println
        +-    |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
        +-    |  |     +- java.lang.System -> out
        +-    |  +- Arguments
        +-    |     +- Op: Call [Ljava.lang.String;]
        +-    |        +- Op: Method:
        +-    |        |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> print
        +-    |        |  +- Op: Local variable access: mp [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
        +-    |        +- Arguments
        +-    |           +- Op: Local variable access: info [Ljava.util.List;]
        +-    +- St: Call
        +-       +- Op: Method:
        +-       |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> printToFile
        +-       |  +- Op: Local variable access: mp [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
        +-       +- Arguments
        +-          +- Op: Local variable access: info [Ljava.util.List;]
        +-          +- Op: Literal [Ljava.lang.String;]
        +-             +- String: "out.java" catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- St: Call
        +-    |  +- Op: Method:
        +-    |  |  +- java.io.PrintStream -> println
        +-    |  |  +- Op: Static Field: [Ljava.io.PrintStream;]
        +-    |  |     +- java.lang.System -> out
        +-    |  +- Arguments
        +-    |     +- Op: Proxy Call [#unknown#]
        +-    |        +- Op: >> Proxy Data Access [ e.getMessage ] << [#unknown#]
        +-    |        +- Arguments
        +-    +- St: Call
        +-       +- Op: Method:
        +-       |  +- java.io.PrintStream -> println
        +-       |  +- Op: Static Field: [Ljava.io.PrintStream;]
        +-       |     +- java.lang.System -> out
        +-       +- Arguments
        +-          +- Op: Literal [Ljava.lang.String;]
        +-             +- String: "Java Parser Version 1.1:  Encountered errors during parse."
        <<
  final public <>Ljava.util.List; CompilationUnit
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_1 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ PackageDeclaration ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Local variable access: out [Ljava.util.List;]
     |  |        +- St: Call
     |  |           +- Op: Method:
     |  |           |  +- java.util.List -> add
     |  |           |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |           +- Arguments
     |  |              +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  |                 +- Op: Method:
     |  |                 |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  |                 +- Arguments
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: No operation
     +- LABEL: label_1
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_1;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ ImportDeclaration ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_1;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ ImportDeclaration ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     <<
     +- LABEL: label_2
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ TypeDeclaration ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-    +- >> Proxy Statement: 
     |     +-       +- switch() {
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +-   St: No operation
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- default:
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break label_2;
     |     +-       +-   <<
     |     +-       +- }
     |     +-       <<Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ TypeDeclaration ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-    +- >> Proxy Statement: 
     |     +-       +- switch() {
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +- case :
     |     +-       +-   St: No operation
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- default:
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break label_2;
     |     +-       +-   <<
     |     +-       +- }
     |     +-       <<
     |     <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Literal [I]
     |  +-         +- Integer: 128
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ STUFF_TO_IGNORE ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Literal [I]
     |        +- Integer: 0
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public PackageDeclaration
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ tokens ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ aux ] Type [ Ljava.lang.String; ]
  |  +- Symbol Var [ i ] Type [ I ]
  +- Code:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ PACKAGE ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |     +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: aux [Ljava.lang.String;]
     |     +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |        +- Op: Call [Ljava.lang.Object;]
     |           +- Op: Method:
     |           |  +- java.util.List -> get
     |           |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |           +- Arguments
     |              +- Op: Literal [I]
     |                 +- Integer: 0
     +- >> Proxy Statement: 
     |  +- for( Statements:
     |  +- +- St: =
     |  +-    +- Op: Local variable access: i [I]
     |  +-    +- Op: Literal [I]
     |  +-       +- Integer: 1; ; Statements:
     |  +- +- St: ++X
     |  +-    +- Op: Local variable access: i [I]) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: aux [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |  +-             +- Op: Call [Ljava.lang.Object;]
     |  +-                +- Op: Method:
     |  +-                |  +- java.util.List -> get
     |  +-                |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +-                +- Arguments
     |  +-                   +- Op: Local variable access: i [I]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: aux [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |  +-             +- Op: Call [Ljava.lang.Object;]
     |  +-                +- Op: Method:
     |  +-                |  +- java.util.List -> get
     |  +-                |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +-                +- Arguments
     |  +-                   +- Op: Local variable access: i [I]
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.addPackage ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: + [Ljava.lang.String;]
                    +- Op: + [Ljava.lang.String;]
                    |  +- Op: Literal [Ljava.lang.String;]
                    |  |  +- String: "package "
                    |  +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
                    +- Op: Literal [Ljava.lang.String;]
                       +- String: ";"
  final public ImportDeclaration
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ stat ] Type [ Z ]
  |  +- Symbol Var [ tokens ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ aux ] Type [ Ljava.lang.String; ]
  |  +- Symbol Var [ i ] Type [ I ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: stat [Z]
     |     +- Op: Literal [Z]
     |        +- Boolean: false
     +- Statements:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ IMPORT ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: stat [Z]
     |  +-   +- Op: Literal [Z]
     |  +-      +- Boolean: true
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: =
     |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |     +- Arguments
     +- St: =
     |  +- Op: Local variable access: aux [Ljava.lang.String;]
     |  +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |     +- Op: Call [Ljava.lang.Object;]
     |        +- Op: Method:
     |        |  +- java.util.List -> get
     |        |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |        +- Arguments
     |           +- Op: Literal [I]
     |              +- Integer: 0
     +- >> Proxy Statement: 
     |  +- for( Statements:
     |  +- +- St: =
     |  +-    +- Op: Local variable access: i [I]
     |  +-    +- Op: Literal [I]
     |  +-       +- Integer: 1; ; Statements:
     |  +- +- St: ++X
     |  +-    +- Op: Local variable access: i [I]) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: aux [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |  +-             +- Op: Call [Ljava.lang.Object;]
     |  +-                +- Op: Method:
     |  +-                |  +- java.util.List -> get
     |  +-                |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +-                +- Arguments
     |  +-                   +- Op: Local variable access: i [I]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: aux [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |  +-             +- Op: Call [Ljava.lang.Object;]
     |  +-                +- Op: Method:
     |  +-                |  +- java.util.List -> get
     |  +-                |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +-                +- Arguments
     |  +-                   +- Op: Local variable access: i [I]
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ STAR ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ symbolTable.addPackage ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-   St: +=
     |  +-   +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-   +- Op: Literal [Ljava.lang.String;]
     |  +-      +- String: ".*"
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   >> Proxy Statement: 
     |  +-   +- try 
     |  +-   +- Block:
     |  +-   +- +- Local Variables:
     |  +-   +- |  +- Symbol Var [ clazz ] Type [ Ljava.lang.Class; ]
     |  +-   +- |  +- Symbol Var [ symbol ] Type [ Lcat.quadriga.parsers.code.symbols.BaseSymbol; ]
     |  +-   +- +- Code:
     |  +-   +-    +- Statements:
     |  +-   +-    |  +- St: =
     |  +-   +-    |     +- Op: Local variable access: clazz [Ljava.lang.Class;]
     |  +-   +-    |     +- Op: Call [Ljava.lang.Class;]
     |  +-   +-    |        +- Op: Method:
     |  +-   +-    |        |  +- java.lang.Class -> forName
     |  +-   +-    |        +- Arguments
     |  +-   +-    |           +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-   +-    +- Statements:
     |  +-   +-    |  +- St: =
     |  +-   +-    |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.TypeSymbol;]
     |  +-   +-    |        +- Lcat.quadriga.parsers.code.symbols.TypeSymbol;
     |  +-   +-    |        +- Arguments
     |  +-   +-    |           +- Op: Call [Lcat.quadriga.parsers.code.types.ClassOrInterfaceTypeRef;]
     |  +-   +-    |              +- Op: Method:
     |  +-   +-    |              |  +- cat.quadriga.parsers.code.types.ClassOrInterfaceTypeRef -> getFromClass
     |  +-   +-    |              +- Arguments
     |  +-   +-    |                 +- Op: Local variable access: clazz [Ljava.lang.Class;]
     |  +-   +-    +- St: Proxy Call
     |  +-   +-       +- Op: >> Proxy Data Access [ symbolTable.addGlobalSymbol ] << [#unknown#]
     |  +-   +-       +- Arguments
     |  +-   +-          +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;] catch() 
     |  +-   +- Block:
     |  +-   +- +- Local Variables:
     |  +-   +- |  +- Symbol Var [ symbol ] Type [ Lcat.quadriga.parsers.code.symbols.BaseSymbol; ]
     |  +-   +- +- Code:
     |  +-   +-    +- Statements:
     |  +-   +-    |  +- St: =
     |  +-   +-    |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.TypeSymbol;]
     |  +-   +-    |        +- Lcat.quadriga.parsers.code.symbols.TypeSymbol;
     |  +-   +-    |        +- Arguments
     |  +-   +-    |           +- Op: Field: [Lcat.quadriga.parsers.code.types.NullType;]
     |  +-   +-    |              +- cat.quadriga.parsers.code.types.NullType -> instance
     |  +-   +-    +- St: Proxy Call
     |  +-   +-       +- Op: >> Proxy Data Access [ symbolTable.addGlobalSymbol ] << [#unknown#]
     |  +-   +-       +- Arguments
     |  +-   +-          +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   <<
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: + [Ljava.lang.String;]
                    +- Op: + [Ljava.lang.String;]
                    |  +- Op: Literal [Ljava.lang.String;]
                    |  |  +- String: "import "
                    |  +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
                    +- Op: Literal [Ljava.lang.String;]
                       +- String: ";"
  final public I Modifiers
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ modifiers ] Type [ I ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: modifiers [I]
     |     +- Op: Literal [I]
     |        +- Integer: 0
     +- LABEL: label_3
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_2 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_3;
     |     +-    |              <<
     |     +-    +- >> Proxy Statement: 
     |     +-       +- switch() {
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PUBLIC ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PUBLIC ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "public"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.STATIC ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "static"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PROTECTED ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PROTECTED ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "protected"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PRIVATE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PRIVATE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "private"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.FINAL ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "final"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ ABSTRACT ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.ABSTRACT ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "abstract"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ SYNCHRONIZED ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.SYNCHRONIZED ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "synchronized"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ NATIVE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.NATIVE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "native"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ TRANSIENT ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.TRANSIENT ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "transient"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ VOLATILE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.VOLATILE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "volatile"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ STRICTFP ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.STRICTFP ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "strictfp"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ Annotation ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- default:
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: - [I]
     |     +-       +-         +- Op: Literal [I]
     |     +-       +-            +- Integer: 1
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- throw ;
     |     +-       +-   <<
     |     +-       +- }
     |     +-       <<Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_2 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_3;
     |     +-    |              <<
     |     +-    +- >> Proxy Statement: 
     |     +-       +- switch() {
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PUBLIC ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PUBLIC ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "public"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.STATIC ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "static"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PROTECTED ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PROTECTED ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "protected"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ PRIVATE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.PRIVATE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "private"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.FINAL ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "final"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ ABSTRACT ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.ABSTRACT ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "abstract"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ SYNCHRONIZED ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.SYNCHRONIZED ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "synchronized"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ NATIVE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.NATIVE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "native"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ TRANSIENT ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.TRANSIENT ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "transient"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ VOLATILE ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.VOLATILE ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "volatile"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ STRICTFP ] << [#unknown#]
     |     +-       +-   St: |=
     |     +-       +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-       +-   +- Op: >> Proxy Data Access [ ModifierSet.STRICTFP ] << [#unknown#]
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-       +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-       +-         +- Arguments
     |     +-       +-            +- Op: Literal [Ljava.lang.String;]
     |     +-       +-               +- String: "strictfp"
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-       +-         +- Op: Method:
     |     +-       +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-       +-         +- Arguments
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- case :
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ Annotation ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- break;
     |     +-       +-   <<
     |     +-       +- default:
     |     +-       +-   St: Proxy Call
     |     +-       +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-       +-   +- Arguments
     |     +-       +-      +- Op: - [I]
     |     +-       +-         +- Op: Literal [I]
     |     +-       +-            +- Integer: 1
     |     +-       +-   >> Proxy Statement: 
     |     +-       +-   +- throw ;
     |     +-       +-   <<
     |     +-       +- }
     |     +-       <<
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public TypeDeclaration
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ modifiers ] Type [ I ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: ";"
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
        +-         +- Op: Method:
        +-         |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
        +-         +- Arguments
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +-   St: =
        +-   +- Op: Local variable access: modifiers [I]
        +-   +- Op: Proxy Call [#unknown#]
        +-      +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
        +-      +- Arguments
        +-         +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- switch() {
        +-   +- case :
        +-   +- case :
        +-   +-   St: Proxy Call
        +-   +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceDeclaration ] << [#unknown#]
        +-   +-   +- Arguments
        +-   +-      +- Op: Local variable access: modifiers [I]
        +-   +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   +-   >> Proxy Statement: 
        +-   +-   +- break;
        +-   +-   <<
        +-   +- case :
        +-   +-   St: Proxy Call
        +-   +-   +- Op: >> Proxy Data Access [ EnumDeclaration ] << [#unknown#]
        +-   +-   +- Arguments
        +-   +-      +- Op: Local variable access: modifiers [I]
        +-   +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   +-   >> Proxy Statement: 
        +-   +-   +- break;
        +-   +-   <<
        +-   +- case :
        +-   +-   St: Proxy Call
        +-   +-   +- Op: >> Proxy Data Access [ AnnotationTypeDeclaration ] << [#unknown#]
        +-   +-   +- Arguments
        +-   +-      +- Op: Local variable access: modifiers [I]
        +-   +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   +-   >> Proxy Statement: 
        +-   +-   +- break;
        +-   +-   <<
        +-   +- default:
        +-   +-   St: Proxy Call
        +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +-   +- Arguments
        +-   +-      +- Op: - [I]
        +-   +-         +- Op: Literal [I]
        +-   +-            +- Integer: 1
        +-   +-   >> Proxy Statement: 
        +-   +-   +- throw ;
        +-   +-   <<
        +-   +- }
        +-   <<
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: - [I]
        +-         +- Op: Literal [I]
        +-            +- Integer: 1
        +-   >> Proxy Statement: 
        +-   +- throw ;
        +-   <<
        +- }
        <<
  final public ClassOrInterfaceDeclaration
  Params
  modifiers: I
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ isInterface ] Type [ Z ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: isInterface [Z]
     |     +- Op: Literal [Z]
     |        +- Boolean: false
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ CLASS ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ INTERFACE ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: isInterface [Z]
     |  +-   +- Op: Literal [Z]
     |  +-      +- Boolean: true
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: ? [Ljava.lang.String;]
     |              +- Op: Local variable access: isInterface [Z]
     |              +- Op: Literal [Ljava.lang.String;]
     |              |  +- String: "interface"
     |              +- Op: Literal [Ljava.lang.String;]
     |                 +- String: "class"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ TypeParameters ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ ExtendsList ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: isInterface [Z]
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ ImplementsList ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: isInterface [Z]
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ ClassOrInterfaceBody ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: isInterface [Z]
           +- Op: Local variable access: out [Ljava.util.List;]
  final public ExtendsList
  Params
  isInterface: Z
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ extendsMoreThanOne ] Type [ Z ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: extendsMoreThanOne [Z]
     |     +- Op: Literal [Z]
     |        +- Boolean: false
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "extends"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_4
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_4;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: extendsMoreThanOne [Z]
     |     +-       +- Op: Literal [Z]
     |     +-          +- Boolean: trueBlock:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_4;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: extendsMoreThanOne [Z]
     |     +-       +- Op: Literal [Z]
     |     +-          +- Boolean: true
     |     <<
     +- If Statement:
        +- Condition:
        |  +- Op: && [Z]
        |     +- Op: >> Proxy Data Access [ extendsMoreThanOne ] << [#unknown#]
        |     +- Op: ! [Z]
        |        +- Op: >> Proxy Data Access [ isInterface ] << [#unknown#]
        +- If Code:
           +- Block:
              +- Local Variables:
              +- Code:
                 +- If Statement:
                    +- Condition:
                    |  +- Op: Literal [Z]
                    |     +- Boolean: true
                    +- If Code:
                       +- >> Proxy Statement: 
                          +- throw ;
                          <<
  final public ImplementsList
  Params
  isInterface: Z
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ IMPLEMENTS ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "implements"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_5
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_5;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_5;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]
     |     <<
     +- If Statement:
        +- Condition:
        |  +- Op: >> Proxy Data Access [ isInterface ] << [#unknown#]
        +- If Code:
           +- Block:
              +- Local Variables:
              +- Code:
                 +- If Statement:
                    +- Condition:
                    |  +- Op: Literal [Z]
                    |     +- Boolean: true
                    +- If Code:
                       +- >> Proxy Statement: 
                          +- throw ;
                          <<
  final public EnumDeclaration
  Params
  modifiers: I
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ ENUM ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "enum"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ ImplementsList ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Literal [Z]
     |  +-      |  +- Boolean: false
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ EnumBody ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public EnumBody
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ EnumConstant ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   LABEL: label_6
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_3 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_6;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-      +-    |        +- Arguments
     |  +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |  +-      +-    |              +- String: ","
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ EnumConstant ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_3 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_6;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-      +-    |        +- Arguments
     |  +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |  +-      +-    |              +- String: ","
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ EnumConstant ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +-   LABEL: label_7
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_7;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceBodyDeclaration ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Literal [Z]
     |  +-      +-          |  +- Boolean: false
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_7;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceBodyDeclaration ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Literal [Z]
     |  +-      +-          |  +- Boolean: false
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: "}"
  final public EnumConstant
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ Arguments ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceBody ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Literal [Z]
        +-      |  +- Boolean: false
        +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: No operation
        +- }
        <<
  final public TypeParameters
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "<"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ TypeParameter ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_8
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_8;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ TypeParameter ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_8;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ TypeParameter ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ">"
  final public TypeParameter
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
        +-         +- Op: Method:
        +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
        +-         +- Arguments
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ TypeBound ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: No operation
        +- }
        <<
  final public TypeBound
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "extends"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_9
        +- >> Proxy Statement: 
           +- while( )
           +- Block:
           +- +- Local Variables:
           +- +- Code:
           +-    +- >> Proxy Statement: 
           +-    |  +- switch() {
           +-    |  +- case :
           +-    |  +-   St: No operation
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break;
           +-    |  +-   <<
           +-    |  +- default:
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break label_9;
           +-    |  +-   <<
           +-    |  +- }
           +-    |  <<
           +-    +- St: Proxy Call
           +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
           +-    |  +- Arguments
           +-    |     +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
           +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
           +-    |        +- Arguments
           +-    |           +- Op: Literal [Ljava.lang.String;]
           +-    |              +- String: "&"
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Proxy Call
           +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
           +-       +- Arguments
           +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
           +- +- Local Variables:
           +- +- Code:
           +-    +- >> Proxy Statement: 
           +-    |  +- switch() {
           +-    |  +- case :
           +-    |  +-   St: No operation
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break;
           +-    |  +-   <<
           +-    |  +- default:
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break label_9;
           +-    |  +-   <<
           +-    |  +- }
           +-    |  <<
           +-    +- St: Proxy Call
           +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
           +-    |  +- Arguments
           +-    |     +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
           +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
           +-    |        +- Arguments
           +-    |           +- Op: Literal [Ljava.lang.String;]
           +-    |              +- String: "&"
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Proxy Call
           +-       +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
           +-       +- Arguments
           +-          +- Op: Local variable access: out [Ljava.util.List;]
           <<
  final public ClassOrInterfaceBody
  Params
  isInterface: Z
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- LABEL: label_10
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_10;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ ClassOrInterfaceBodyDeclaration ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: isInterface [Z]
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-             +- Op: Method:
     |     +-             |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-             +- ArgumentsBlock:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_10;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ ClassOrInterfaceBodyDeclaration ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: isInterface [Z]
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-             +- Op: Method:
     |     +-             |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-             +- Arguments
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "}"
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
              +- Op: Method:
              |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
              +- Arguments
  final public ClassOrInterfaceBodyDeclaration
  Params
  isInterface: Z
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ isNestedInterface ] Type [ Z ]
  |  +- Symbol Var [ modifiers ] Type [ I ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: isNestedInterface [Z]
     |     +- Op: Literal [Z]
     |        +- Boolean: false
     +- Statements:
     +- If Statement:
        +- Condition:
        |  +- Op: Proxy Call [#unknown#]
        |     +- Op: >> Proxy Data Access [ jj_2_6 ] << [#unknown#]
        |     +- Arguments
        |        +- Op: Literal [I]
        |           +- Integer: 2
        +- If Code:
        |  +- Block:
        |     +- Local Variables:
        |     +- Code:
        |        +- St: Proxy Call
        |        |  +- Op: >> Proxy Data Access [ Initializer ] << [#unknown#]
        |        |  +- Arguments
        |        |     +- Op: Local variable access: out [Ljava.util.List;]
        |        +- If Statement:
        |           +- Condition:
        |           |  +- Op: Local variable access: isInterface [Z]
        |           +- If Code:
        |              +- Block:
        |                 +- Local Variables:
        |                 +- Code:
        |                    +- If Statement:
        |                       +- Condition:
        |                       |  +- Op: Literal [Z]
        |                       |     +- Boolean: true
        |                       +- If Code:
        |                          +- >> Proxy Statement: 
        |                             +- throw ;
        |                             <<
        +- Else Code:
           +- Block:
              +- Local Variables:
              +- Code:
                 +- >> Proxy Statement: 
                    +- switch() {
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +- case :
                    +-   St: =
                    +-   +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +- Op: Proxy Call [#unknown#]
                    +-      +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
                    +-      +- Arguments
                    +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   >> Proxy Statement: 
                    +-   +- switch() {
                    +-   +- case :
                    +-   +- case :
                    +-   +-   St: Proxy Call
                    +-   +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceDeclaration ] << [#unknown#]
                    +-   +-   +- Arguments
                    +-   +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-   >> Proxy Statement: 
                    +-   +-   +- break;
                    +-   +-   <<
                    +-   +- case :
                    +-   +-   St: Proxy Call
                    +-   +-   +- Op: >> Proxy Data Access [ EnumDeclaration ] << [#unknown#]
                    +-   +-   +- Arguments
                    +-   +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-   >> Proxy Statement: 
                    +-   +-   +- break;
                    +-   +-   <<
                    +-   +- default:
                    +-   +-   If Statement:
                    +-   +-   +- Condition:
                    +-   +-   |  +- Op: Proxy Call [#unknown#]
                    +-   +-   |     +- Op: >> Proxy Data Access [ jj_2_4 ] << [#unknown#]
                    +-   +-   |     +- Arguments
                    +-   +-   |        +- Op: Literal [I]
                    +-   +-   |           +- Integer: 2147483647
                    +-   +-   +- If Code:
                    +-   +-   |  +- Block:
                    +-   +-   |     +- Local Variables:
                    +-   +-   |     +- Code:
                    +-   +-   |        +- St: Proxy Call
                    +-   +-   |           +- Op: >> Proxy Data Access [ ConstructorDeclaration ] << [#unknown#]
                    +-   +-   |           +- Arguments
                    +-   +-   |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-   +- Else Code:
                    +-   +-      +- If Statement:
                    +-   +-         +- Condition:
                    +-   +-         |  +- Op: Proxy Call [#unknown#]
                    +-   +-         |     +- Op: >> Proxy Data Access [ jj_2_5 ] << [#unknown#]
                    +-   +-         |     +- Arguments
                    +-   +-         |        +- Op: Literal [I]
                    +-   +-         |           +- Integer: 2147483647
                    +-   +-         +- If Code:
                    +-   +-         |  +- Block:
                    +-   +-         |     +- Local Variables:
                    +-   +-         |     +- Code:
                    +-   +-         |        +- St: Proxy Call
                    +-   +-         |           +- Op: >> Proxy Data Access [ FieldDeclaration ] << [#unknown#]
                    +-   +-         |           +- Arguments
                    +-   +-         |              +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +-         |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-         +- Else Code:
                    +-   +-            +- Block:
                    +-   +-               +- Local Variables:
                    +-   +-               +- Code:
                    +-   +-                  +- >> Proxy Statement: 
                    +-   +-                     +- switch() {
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +- case :
                    +-   +-                     +-   St: Proxy Call
                    +-   +-                     +-   +- Op: >> Proxy Data Access [ MethodDeclaration ] << [#unknown#]
                    +-   +-                     +-   +- Arguments
                    +-   +-                     +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +-                     +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-                     +-   >> Proxy Statement: 
                    +-   +-                     +-   +- break;
                    +-   +-                     +-   <<
                    +-   +-                     +- case :
                    +-   +-                     +-   St: Proxy Call
                    +-   +-                     +-   +- Op: >> Proxy Data Access [ AnnotationTypeDeclaration ] << [#unknown#]
                    +-   +-                     +-   +- Arguments
                    +-   +-                     +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
                    +-   +-                     +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                    +-   +-                     +-   >> Proxy Statement: 
                    +-   +-                     +-   +- break;
                    +-   +-                     +-   <<
                    +-   +-                     +- default:
                    +-   +-                     +-   St: Proxy Call
                    +-   +-                     +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                    +-   +-                     +-   +- Arguments
                    +-   +-                     +-      +- Op: - [I]
                    +-   +-                     +-         +- Op: Literal [I]
                    +-   +-                     +-            +- Integer: 1
                    +-   +-                     +-   >> Proxy Statement: 
                    +-   +-                     +-   +- throw ;
                    +-   +-                     +-   <<
                    +-   +-                     +- }
                    +-   +-                     <<
                    +-   +- }
                    +-   <<
                    +-   >> Proxy Statement: 
                    +-   +- break;
                    +-   <<
                    +- case :
                    +-   St: Proxy Call
                    +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                    +-   +- Arguments
                    +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
                    +-   >> Proxy Statement: 
                    +-   +- break;
                    +-   <<
                    +- default:
                    +-   St: Proxy Call
                    +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                    +-   +- Arguments
                    +-      +- Op: - [I]
                    +-         +- Op: Literal [I]
                    +-            +- Integer: 1
                    +-   >> Proxy Statement: 
                    +-   +- throw ;
                    +-   <<
                    +- }
                    <<
  final public FieldDeclaration
  Params
  modifiers: I
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ v ] Type [ Lcat.quadriga.parsers.VarAndInit; ]
  |  +- Symbol Var [ tipus ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: tipus [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: =
     |  +- Op: Local variable access: v [Lcat.quadriga.parsers.VarAndInit;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: modifiers [I]
     |        +- Op: Local variable access: tipus [Lcat.quadriga.parsers.code.types.BaseType;]
     +- LABEL: label_11
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_11;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: v [Lcat.quadriga.parsers.VarAndInit;]
     |     +-       +- Op: Proxy Call [#unknown#]
     |     +-          +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: modifiers [I]
     |     +-             +- Op: Local variable access: tipus [Lcat.quadriga.parsers.code.types.BaseType;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_11;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: v [Lcat.quadriga.parsers.VarAndInit;]
     |     +-       +- Op: Proxy Call [#unknown#]
     |     +-          +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: modifiers [I]
     |     +-             +- Op: Local variable access: tipus [Lcat.quadriga.parsers.code.types.BaseType;]
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public Lcat.quadriga.parsers.VarAndInit; VariableDeclarator
  Params
  modifiers: I
  type: Lcat.quadriga.parsers.code.types.BaseType;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ vai ] Type [ Lcat.quadriga.parsers.VarAndInit; ]
  |  +- Symbol Var [ initialization ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ leftHand ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: vai [Lcat.quadriga.parsers.VarAndInit;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ VariableDeclaratorId ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.VarAndInit
     |  +- Op: Local variable access: modifiers [I]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: >> Proxy Data Access [ localBlock ] << [#unknown#]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     |  +- Symbol Var [ localVar ] Type [ Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol; ]
     |  |     +- Code:
     |  |        +- Statements:
     |  |        |  +- St: =
     |  |        |     +- Op: Local variable access: localVar [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  |        |        +- Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;
     |  |        |        +- Arguments
     |  |        |           +- Op: Local variable access: modifiers [I]
     |  |        |           +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  |        |           |  +- class cat.quadriga.parsers.VarAndInit
     |  |        |           +- Op: >> Proxy Data Access [ Proxy access to member image ] << [#unknown#]
     |  |        |              +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |  |        |                 +- class cat.quadriga.parsers.VarAndInit
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Local variable access: localVar [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ localBlock.addLocalVariable ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Local variable access: localVar [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  |        +- St: =
     |  |           +- Op: Local variable access: leftHand [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.dataaccess.LocalVarAccess;]
     |  |              +- Lcat.quadriga.parsers.code.expressions.dataaccess.LocalVarAccess;
     |  |              +- Arguments
     |  |                 +- Op: Local variable access: localVar [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  |                    +- Arguments
     |  |                       +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |  |                          +- class cat.quadriga.parsers.VarAndInit
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |              +- Op: >> Proxy Data Access [ leftHand ] << [#unknown#]
     |              +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;]
     |                 +- Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;
     |                 +- Arguments
     |                    +- Op: + [Ljava.lang.String;]
     |                    |  +- Op: Literal [Ljava.lang.String;]
     |                    |  |  +- String: "Proxy field: "
     |                    |  +- Op: >> Proxy Data Access [ vai.name ] << [#unknown#]
     |                    +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |                       +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |                       +- Arguments
     |                          +- Op: >> Proxy Data Access [ vai.name ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ initialization ] << [#unknown#]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ VariableInitializer ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ vai.init ] << [#unknown#]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.AssigmentStatementNode;]
     |  +-      +- Lcat.quadriga.parsers.code.statements.AssigmentStatementNode;
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ Proxy access to member ASSIGN ] << [#unknown#]
     |  +-         |  +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         |     +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-         +- Op: >> Proxy Data Access [ leftHand ] << [#unknown#]
     |  +-         +- Op: >> Proxy Data Access [ initialization ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.VarAndInit; VariableDeclaratorId
  Params
  type: Lcat.quadriga.parsers.code.types.BaseType;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ vai ] Type [ Lcat.quadriga.parsers.VarAndInit; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: vai [Lcat.quadriga.parsers.VarAndInit;]
     |     +- Op: Invalid Constructor [Lcat.quadriga.parsers.VarAndInit;]
     |        +- Lcat.quadriga.parsers.VarAndInit;
     |        +- Arguments
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.VarAndInit
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.VarAndInit
     |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     +- LABEL: label_12
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_12;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-       |  +- class cat.quadriga.parsers.VarAndInit
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |     +-          +- Lcat.quadriga.parsers.code.types.ArrayType;
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-                +- class cat.quadriga.parsers.VarAndInitBlock:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_12;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-       |  +- class cat.quadriga.parsers.VarAndInit
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |     +-          +- Lcat.quadriga.parsers.code.types.ArrayType;
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-                +- class cat.quadriga.parsers.VarAndInit
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; VariableInitializer
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: result [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ ArrayInitializer ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: result [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ArrayInitializer
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ aux ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ listOfInits ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: listOfInits [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ VariableInitializer ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   St: Invalid Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: listOfInits [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   LABEL: label_13
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_7 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_13;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ VariableInitializer ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ listOfInits.add ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ aux ] << [#unknown#]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_7 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_13;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ VariableInitializer ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ listOfInits.add ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ aux ] << [#unknown#]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: == [Z]
     |  |     +- Op: Proxy Call [#unknown#]
     |  |     |  +- Op: >> Proxy Data Access [ listOfInits.size ] << [#unknown#]
     |  |     |  +- Arguments
     |  |     +- Op: Literal [I]
     |  |        +- Integer: 0
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- Block:
     |  |           +- Local Variables:
     |  |           +- Code:
     |  |              +- If Statement:
     |  |                 +- Condition:
     |  |                 |  +- Op: Literal [Z]
     |  |                 |     +- Boolean: true
     |  |                 +- If Code:
     |  |                    +- >> Proxy Statement: 
     |  |                       +- return ;
     |  |                       <<
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- Block:
     |              +- Local Variables:
     |              +- Code:
     |                 +- If Statement:
     |                    +- Condition:
     |                    |  +- Op: Literal [Z]
     |                    |     +- Boolean: true
     |                    +- If Code:
     |                       +- >> Proxy Statement: 
     |                          +- return ;
     |                          <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public MethodDeclaration
  Params
  modifiers: I
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ bc ] Type [ Lcat.quadriga.parsers.code.statements.BlockCode; ]
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: other [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.newContext ] << [#unknown#]
     |  +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.ThisSymbol;]
     |        +- Lcat.quadriga.parsers.code.symbols.ThisSymbol;
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ TypeParameters ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ ResultType ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ MethodDeclarator ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ THROWS ] << [#unknown#]
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: "throws"
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ NameList ] << [#unknown#]
     |  +-   +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: bc [Lcat.quadriga.parsers.code.statements.BlockCode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: other [Ljava.util.List;]
     |  +-   Statements:
     |  +-   +- St: =
     |  +-      +- Op: Local variable access: treeString [Ljava.lang.String;]
     |  +-      +- Op: Call [Ljava.lang.String;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.statements.BlockCode -> treeStringRepresentation
     |  +-         |  +- Op: Local variable access: bc [Lcat.quadriga.parsers.code.statements.BlockCode;]
     |  +-         +- Arguments
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> addAll
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Proxy Call [#unknown#]
     |  +-         +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |  +-         |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |  +-         |     +- Op: Method:
     |  +-         |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |  +-         |     +- Arguments
     |  +-         +- Arguments
     |  +-            +- Op: Local variable access: treeString [Ljava.lang.String;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: ";"
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ symbolTable.deleteContext ] << [#unknown#]
        +- Arguments
  final public MethodDeclarator
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ params ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: Local variable access: params [Ljava.util.List;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ FormalParameters ] << [#unknown#]
     |     +- Arguments
     +- >> Proxy Statement: 
     |  +- for( Lcat.quadriga.parsers.ParameterClass; param: ) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  +-             +- Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;
     |  +-             +- Arguments
     |  +-                +- Op: >> Proxy Data Access [ param.modifiers ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  +-             +- Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;
     |  +-             +- Arguments
     |  +-                +- Op: >> Proxy Data Access [ param.modifiers ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "Params"
     +- >> Proxy Statement: 
     |  +- for( Lcat.quadriga.parsers.ParameterClass; param: ) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-    |  +- Arguments
     |  +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-    |        +- Op: Method:
     |  +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-    |        +- Arguments
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-             +- Arguments
     |  +-                +- Op: + [#unknown#]
     |  +-                   +- Op: + [#unknown#]
     |  +-                   |  +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  +-                   |  +- Op: Literal [Ljava.lang.String;]
     |  +-                   |     +- String: ": "
     |  +-                   +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-    |  +- Arguments
     |  +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-    |        +- Op: Method:
     |  +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-    |        +- Arguments
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-             +- Arguments
     |  +-                +- Op: + [#unknown#]
     |  +-                   +- Op: + [#unknown#]
     |  +-                   |  +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  +-                   |  +- Op: Literal [Ljava.lang.String;]
     |  +-                   |     +- String: ": "
     |  +-                   +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  <<
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
              +- Op: Method:
              |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
              +- Arguments
  final public <>Ljava.util.List; FormalParameters
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ params ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ param ] Type [ Lcat.quadriga.parsers.ParameterClass; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: params [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ FormalParameter ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: params [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |  +-   LABEL: label_14
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_14;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ FormalParameter ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    +- St: Call
     |  +-      +-       +- Op: Method:
     |  +-      +-       |  +- java.util.List -> add
     |  +-      +-       |  +- Op: Local variable access: params [Ljava.util.List;]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_14;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ FormalParameter ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    +- St: Call
     |  +-      +-       +- Op: Method:
     |  +-      +-       |  +- java.util.List -> add
     |  +-      +-       |  +- Op: Local variable access: params [Ljava.util.List;]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.ParameterClass; FormalParameter
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ modifiers ] Type [ I ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ param ] Type [ Lcat.quadriga.parsers.ParameterClass; ]
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ vai ] Type [ Lcat.quadriga.parsers.VarAndInit; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: param [Lcat.quadriga.parsers.ParameterClass;]
     |     +- Op: Invalid Constructor [Lcat.quadriga.parsers.ParameterClass;]
     |        +- Lcat.quadriga.parsers.ParameterClass;
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: modifiers [I]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |  +-   +-   St: &=
     |  +-   +-   +- Op: Local variable access: modifiers [I]
     |  +-   +-   +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ Annotation ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: - [I]
     |  +-   +-         +- Op: Literal [I]
     |  +-   +-            +- Integer: 1
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- throw ;
     |  +-   +-   <<
     |  +-   +- }
     |  +-   <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: =
     |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ELLIPSIS ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |  +-      +- Lcat.quadriga.parsers.code.types.ArrayType;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ varargs ] << [#unknown#]
     |  +-   |  +- class cat.quadriga.parsers.ParameterClass
     |  +-   +- Op: Literal [Z]
     |  +-      +- Boolean: true
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: =
     |  +- Op: Local variable access: vai [Lcat.quadriga.parsers.VarAndInit;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ VariableDeclaratorId ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.ParameterClass
     |  +- Op: >> Proxy Data Access [ Proxy access to member image ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |        +- class cat.quadriga.parsers.VarAndInit
     +- St: =
     |  +- Op: >> Proxy Data Access [ cz ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.ParameterClass
     |  +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |     +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |           +- class cat.quadriga.parsers.VarAndInit
     +- St: =
     |  +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.ParameterClass
     |  +- Op: Local variable access: modifiers [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  |  +- class cat.quadriga.parsers.ParameterClass
     |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +- class cat.quadriga.parsers.VarAndInit
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public ConstructorDeclaration
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ bsn ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
  |  +- Symbol Var [ params ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.newContext ] << [#unknown#]
     |  +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.ThisSymbol;]
     |        +- Lcat.quadriga.parsers.code.symbols.ThisSymbol;
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ TypeParameters ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: Local variable access: params [Ljava.util.List;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ FormalParameters ] << [#unknown#]
     |     +- Arguments
     +- >> Proxy Statement: 
     |  +- for( Lcat.quadriga.parsers.ParameterClass; param: ) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  +-             +- Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;
     |  +-             +- Arguments
     |  +-                +- Op: >> Proxy Data Access [ param.modifiers ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ symbolTable.addSymbol ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  +-             +- Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;
     |  +-             +- Arguments
     |  +-                +- Op: >> Proxy Data Access [ param.modifiers ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "Params"
     +- >> Proxy Statement: 
     |  +- for( Lcat.quadriga.parsers.ParameterClass; param: ) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-    |  +- Arguments
     |  +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-    |        +- Op: Method:
     |  +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-    |        +- Arguments
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-             +- Arguments
     |  +-                +- Op: + [#unknown#]
     |  +-                   +- Op: + [#unknown#]
     |  +-                   |  +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  +-                   |  +- Op: Literal [Ljava.lang.String;]
     |  +-                   |     +- String: ": "
     |  +-                   +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-    |  +- Arguments
     |  +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  +-    |        +- Op: Method:
     |  +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  +-    |        +- Arguments
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-             +- Arguments
     |  +-                +- Op: + [#unknown#]
     |  +-                   +- Op: + [#unknown#]
     |  +-                   |  +- Op: >> Proxy Data Access [ param.name ] << [#unknown#]
     |  +-                   |  +- Op: Literal [Ljava.lang.String;]
     |  +-                   |     +- String: ": "
     |  +-                   +- Op: >> Proxy Data Access [ param.type ] << [#unknown#]
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ THROWS ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: "throws"
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ NameList ] << [#unknown#]
     |  +-   +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_8 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |           +- Op: >> Proxy Data Access [ ExplicitConstructorInvocation ] << [#unknown#]
     |  |           +- Arguments
     |  |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: No operation
     +- LABEL: label_15
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_15;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ bsn ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- Statements:
     |     +-    |  +- St: =
     |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +- Op: Proxy Call [#unknown#]
     |     +-    |        +- Op: >> Proxy Data Access [ bsn.treeStringRepresentation ] << [#unknown#]
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Proxy Call [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-             |     +- Op: Method:
     |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-             |     +- Arguments
     |     +-             +- Arguments
     |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]Block:
     |     +- +- Local Variables:
     |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_15;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ bsn ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- Statements:
     |     +-    |  +- St: =
     |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +- Op: Proxy Call [#unknown#]
     |     +-    |        +- Op: >> Proxy Data Access [ bsn.treeStringRepresentation ] << [#unknown#]
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Proxy Call [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-             |     +- Op: Method:
     |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-             |     +- Arguments
     |     +-             +- Arguments
     |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- while( )St: Proxy Call
     |  +- +- Op: >> Proxy Data Access [ out.remove ] << [#unknown#]
     |  +- +- Arguments
     |  +-    +- Op: - [#unknown#]
     |  +-       +- Op: Proxy Call [#unknown#]
     |  +-       |  +- Op: >> Proxy Data Access [ out.size ] << [#unknown#]
     |  +-       |  +- Arguments
     |  +-       +- Op: Literal [I]
     |  +-          +- Integer: 1
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: Proxy Call [#unknown#]
     |  |     |  +- Op: >> Proxy Data Access [ out.get ] << [#unknown#]
     |  |     |  +- Arguments
     |  |     |     +- Op: - [#unknown#]
     |  |     |        +- Op: Proxy Call [#unknown#]
     |  |     |        |  +- Op: >> Proxy Data Access [ out.size ] << [#unknown#]
     |  |     |        |  +- Arguments
     |  |     |        +- Op: Literal [I]
     |  |     |           +- Integer: 1
     |  |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |  |        +- Op: Method:
     |  |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |  |        +- Arguments
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |  |        |        +- Op: Method:
     |  |        |        |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |  |        |        +- Arguments
     |  |        +- St: Proxy Call
     |  |           +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  |           +- Arguments
     |  |              +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |  |                 +- Op: Method:
     |  |                 |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |  |                 +- Arguments
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Proxy Call
     |              +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +- Arguments
     |                 +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |                    +- Op: Method:
     |                    |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |                    +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "}"
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ symbolTable.deleteContext ] << [#unknown#]
        +- Arguments
  final public ExplicitConstructorInvocation
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- LABEL: label_16
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_16;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Field: [Ljava.lang.String;]
     |     +-    |              +- cat.quadriga.parsers.Token -> image
     |     +-    |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-             +- Arguments
     |     +-                +- Op: Literal [Ljava.lang.String;]
     |     +-                   +- String: "."Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_16;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Field: [Ljava.lang.String;]
     |     +-    |              +- cat.quadriga.parsers.Token -> image
     |     +-    |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-             +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-             +- Arguments
     |     +-                +- Op: Literal [Ljava.lang.String;]
     |     +-                   +- String: "."
     |     <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_9 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  |        |        +- Arguments
     |  |        |           +- Op: Literal [Ljava.lang.String;]
     |  |        |              +- String: "this"
     |  |        +- St: Proxy Call
     |  |           +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  |           +- Arguments
     |  |              +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  |                 +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  |                 +- Arguments
     |  |                    +- Op: Literal [Ljava.lang.String;]
     |  |                       +- String: "."
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: No operation
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: "this"
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: "super"
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Arguments ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ";"
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
              +- Op: Method:
              |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
              +- Arguments
  final public Initializer
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |  +-   Block:
     |  +-   +- Local Variables:
     |  +-   +- Code:
     |  +-      +- St: Call
     |  +-      |  +- Op: Method:
     |  +-      |  |  +- java.util.List -> add
     |  +-      |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-      |  +- Arguments
     |  +-      |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-      |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-      |        +- Arguments
     |  +-      |           +- Op: Literal [Ljava.lang.String;]
     |  +-      |              +- String: "static"
     |  +-      +- St: Call
     |  +-         +- Op: Method:
     |  +-         |  +- java.util.List -> add
     |  +-         |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-         +- Arguments
     |  +-            +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-               +- Op: Method:
     |  +-               |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-               +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
        +- Arguments
           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
  final public Lcat.quadriga.parsers.code.types.BaseType; Type
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_10 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |           +- Op: Local variable access: t [Lcat.quadriga.parsers.code.types.BaseType;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ ReferenceType ] << [#unknown#]
     |  |              +- Arguments
     |  |                 +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ PrimitiveType ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Proxy Call [#unknown#]
     |              +- Op: >> Proxy Data Access [ t.getBinaryName ] << [#unknown#]
     |              +- Arguments
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.types.BaseType; ReferenceType
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ PrimitiveType ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   LABEL: label_17
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-      +-    |  +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |  +-      +-    |     +- Lcat.quadriga.parsers.code.types.ArrayType;
     |  +-      +-    |     +- Arguments
     |  +-      +-    |        +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-      +-    +- If Statement:
     |  +-      +-       +- Condition:
     |  +-      +-       |  +- Op: Proxy Call [#unknown#]
     |  +-      +-       |     +- Op: >> Proxy Data Access [ jj_2_11 ] << [#unknown#]
     |  +-      +-       |     +- Arguments
     |  +-      +-       |        +- Op: Literal [I]
     |  +-      +-       |           +- Integer: 2
     |  +-      +-       +- If Code:
     |  +-      +-       |  +- Block:
     |  +-      +-       |     +- Local Variables:
     |  +-      +-       |     +- Code:
     |  +-      +-       |        +- St: No operation
     |  +-      +-       +- Else Code:
     |  +-      +-          +- Block:
     |  +-      +-             +- Local Variables:
     |  +-      +-             +- Code:
     |  +-      +-                +- >> Proxy Statement: 
     |  +-      +-                   +- break label_17;
     |  +-      +-                   <<Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-      +-    |  +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |  +-      +-    |     +- Lcat.quadriga.parsers.code.types.ArrayType;
     |  +-      +-    |     +- Arguments
     |  +-      +-    |        +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-      +-    +- If Statement:
     |  +-      +-       +- Condition:
     |  +-      +-       |  +- Op: Proxy Call [#unknown#]
     |  +-      +-       |     +- Op: >> Proxy Data Access [ jj_2_11 ] << [#unknown#]
     |  +-      +-       |     +- Arguments
     |  +-      +-       |        +- Op: Literal [I]
     |  +-      +-       |           +- Integer: 2
     |  +-      +-       +- If Code:
     |  +-      +-       |  +- Block:
     |  +-      +-       |     +- Local Variables:
     |  +-      +-       |     +- Code:
     |  +-      +-       |        +- St: No operation
     |  +-      +-       +- Else Code:
     |  +-      +-          +- Block:
     |  +-      +-             +- Local Variables:
     |  +-      +-             +- Code:
     |  +-      +-                +- >> Proxy Statement: 
     |  +-      +-                   +- break label_17;
     |  +-      +-                   <<
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-   LABEL: label_18
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_12 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_18;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-       +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-      +-       +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |  +-      +-          +- Lcat.quadriga.parsers.code.types.ArrayType;
     |  +-      +-          +- Arguments
     |  +-      +-             +- Op: >> Proxy Data Access [ type ] << [#unknown#]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_12 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_18;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-       +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-      +-       +- Op: Constructor [Lcat.quadriga.parsers.code.types.ArrayType;]
     |  +-      +-          +- Lcat.quadriga.parsers.code.types.ArrayType;
     |  +-      +-          +- Arguments
     |  +-      +-             +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.types.BaseType; ClassOrInterfaceType
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ first ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ last ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ aux ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ cz ] Type [ Lcat.quadriga.parsers.code.CodeZone; ]
  |  +- Symbol Var [ name ] Type [ Ljava.lang.String; ]
  |  +- Symbol Var [ i ] Type [ I ]
  |  +- Symbol Var [ symbol ] Type [ Lcat.quadriga.parsers.code.symbols.BaseSymbol; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: aux [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: aux [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Field: [Ljava.lang.String;]
     |        +- cat.quadriga.parsers.Token -> image
     |        +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: Local variable access: first [Lcat.quadriga.parsers.Token;]
     |  +- Op: = [Lcat.quadriga.parsers.Token;]
     |     +- Op: Local variable access: last [Lcat.quadriga.parsers.Token;]
     |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_13 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |           +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |  |           +- Arguments
     |  |              +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: No operation
     +- LABEL: label_19
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_14 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_19;
     |     +-    |              <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ aux.add ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ t.image ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ last ] << [#unknown#]
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    +- If Statement:
     |     +-       +- Condition:
     |     +-       |  +- Op: Proxy Call [#unknown#]
     |     +-       |     +- Op: >> Proxy Data Access [ jj_2_15 ] << [#unknown#]
     |     +-       |     +- Arguments
     |     +-       |        +- Op: Literal [I]
     |     +-       |           +- Integer: 2
     |     +-       +- If Code:
     |     +-       |  +- Block:
     |     +-       |     +- Local Variables:
     |     +-       |     +- Code:
     |     +-       |        +- St: Proxy Call
     |     +-       |           +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |     +-       |           +- Arguments
     |     +-       |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-       +- Else Code:
     |     +-          +- Block:
     |     +-             +- Local Variables:
     |     +-             +- Code:
     |     +-                +- St: No operationBlock:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_14 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_19;
     |     +-    |              <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ aux.add ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ t.image ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ last ] << [#unknown#]
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    +- If Statement:
     |     +-       +- Condition:
     |     +-       |  +- Op: Proxy Call [#unknown#]
     |     +-       |     +- Op: >> Proxy Data Access [ jj_2_15 ] << [#unknown#]
     |     +-       |     +- Arguments
     |     +-       |        +- Op: Literal [I]
     |     +-       |           +- Integer: 2
     |     +-       +- If Code:
     |     +-       |  +- Block:
     |     +-       |     +- Local Variables:
     |     +-       |     +- Code:
     |     +-       |        +- St: Proxy Call
     |     +-       |           +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |     +-       |           +- Arguments
     |     +-       |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |     +-       +- Else Code:
     |     +-          +- Block:
     |     +-             +- Local Variables:
     |     +-             +- Code:
     |     +-                +- St: No operation
     |     <<
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: cz [Lcat.quadriga.parsers.code.CodeZone;]
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |        +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |        +- Arguments
     |           +- Op: >> Proxy Data Access [ first.beginLine ] << [#unknown#]
     |           +- Op: >> Proxy Data Access [ last.beginColumn ] << [#unknown#]
     |           +- Op: >> Proxy Data Access [ last.endLine ] << [#unknown#]
     |           +- Op: >> Proxy Data Access [ first.endColumn ] << [#unknown#]
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: name [Ljava.lang.String;]
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ aux.get ] << [#unknown#]
     |        +- Arguments
     |           +- Op: Literal [I]
     |              +- Integer: 0
     +- >> Proxy Statement: 
     |  +- for( Statements:
     |  +- +- St: =
     |  +-    +- Op: Local variable access: i [I]
     |  +-    +- Op: Literal [I]
     |  +-       +- Integer: 1; ; Statements:
     |  +- +- St: ++X
     |  +-    +- Op: Local variable access: i [I]) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: name [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: Proxy Call [#unknown#]
     |  +-             +- Op: >> Proxy Data Access [ aux.get ] << [#unknown#]
     |  +-             +- Arguments
     |  +-                +- Op: Local variable access: i [I]Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: +=
     |  +-       +- Op: Local variable access: name [Ljava.lang.String;]
     |  +-       +- Op: + [Ljava.lang.String;]
     |  +-          +- Op: Literal [Ljava.lang.String;]
     |  +-          |  +- String: "."
     |  +-          +- Op: Proxy Call [#unknown#]
     |  +-             +- Op: >> Proxy Data Access [ aux.get ] << [#unknown#]
     |  +-             +- Arguments
     |  +-                +- Op: Local variable access: i [I]
     |  <<
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ symbolTable.findSymbol ] << [#unknown#]
     |        +- Arguments
     |           +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- If Statement:
     |  |           +- Condition:
     |  |           |  +- Op: instanceof [Z]
     |  |           |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  |           |     +- Op: >> proxy [ Lcat.quadriga.parsers.code.symbols.TypeSymbol; ] [#unknown#]
     |  |           +- If Code:
     |  |           |  +- Block:
     |  |           |     +- Local Variables:
     |  |           |     +- Code:
     |  |           |        +- Block:
     |  |           |           +- Local Variables:
     |  |           |           +- Code:
     |  |           |              +- If Statement:
     |  |           |                 +- Condition:
     |  |           |                 |  +- Op: Literal [Z]
     |  |           |                 |     +- Boolean: true
     |  |           |                 +- If Code:
     |  |           |                    +- >> Proxy Statement: 
     |  |           |                       +- return ;
     |  |           |                       <<
     |  |           +- Else Code:
     |  |              +- Block:
     |  |                 +- Local Variables:
     |  |                 +- Code:
     |  |                    +- St: Proxy Call
     |  |                    |  +- Op: >> Proxy Data Access [ errorLog.insertError ] << [#unknown#]
     |  |                    |  +- Arguments
     |  |                    |     +- Op: + [Ljava.lang.String;]
     |  |                    |     |  +- Op: + [Ljava.lang.String;]
     |  |                    |     |  |  +- Op: Literal [Ljava.lang.String;]
     |  |                    |     |  |  |  +- String: "El simbol \\\""
     |  |                    |     |  |  +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |  |                    |     |  +- Op: Literal [Ljava.lang.String;]
     |  |                    |     |     +- String: "\\\" no és un tipus."
     |  |                    |     +- Op: >> Proxy Data Access [ cz ] << [#unknown#]
     |  |                    +- Block:
     |  |                       +- Local Variables:
     |  |                       +- Code:
     |  |                          +- If Statement:
     |  |                             +- Condition:
     |  |                             |  +- Op: Literal [Z]
     |  |                             |     +- Boolean: true
     |  |                             +- If Code:
     |  |                                +- >> Proxy Statement: 
     |  |                                   +- return ;
     |  |                                   <<
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- try 
     |              +- Block:
     |              +- +- Local Variables:
     |              +- |  +- Symbol Var [ clazz ] Type [ Ljava.lang.Class; ]
     |              +- +- Code:
     |              +-    +- Statements:
     |              +-    |  +- St: =
     |              +-    |     +- Op: Local variable access: clazz [Ljava.lang.Class;]
     |              +-    |     +- Op: Call [Ljava.lang.Class;]
     |              +-    |        +- Op: Method:
     |              +-    |        |  +- java.lang.Class -> forName
     |              +-    |        +- Arguments
     |              +-    |           +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |              +-    +- Block:
     |              +-       +- Local Variables:
     |              +-       +- Code:
     |              +-          +- If Statement:
     |              +-             +- Condition:
     |              +-             |  +- Op: Literal [Z]
     |              +-             |     +- Boolean: true
     |              +-             +- If Code:
     |              +-                +- >> Proxy Statement: 
     |              +-                   +- return ;
     |              +-                   << catch() 
     |              +- Block:
     |              +- +- Local Variables:
     |              +- +- Code:
     |              +-    +- >> Proxy Statement: 
     |              +-       +- try 
     |              +-       +- Block:
     |              +-       +- +- Local Variables:
     |              +-       +- |  +- Symbol Var [ clazz ] Type [ Ljava.lang.Class; ]
     |              +-       +- +- Code:
     |              +-       +-    +- Statements:
     |              +-       +-    |  +- St: =
     |              +-       +-    |     +- Op: Local variable access: clazz [Ljava.lang.Class;]
     |              +-       +-    |     +- Op: Call [Ljava.lang.Class;]
     |              +-       +-    |        +- Op: Method:
     |              +-       +-    |        |  +- java.lang.Class -> forName
     |              +-       +-    |        +- Arguments
     |              +-       +-    |           +- Op: + [Ljava.lang.String;]
     |              +-       +-    |              +- Op: Literal [Ljava.lang.String;]
     |              +-       +-    |              |  +- String: "java.lang."
     |              +-       +-    |              +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |              +-       +-    +- Block:
     |              +-       +-       +- Local Variables:
     |              +-       +-       +- Code:
     |              +-       +-          +- If Statement:
     |              +-       +-             +- Condition:
     |              +-       +-             |  +- Op: Literal [Z]
     |              +-       +-             |     +- Boolean: true
     |              +-       +-             +- If Code:
     |              +-       +-                +- >> Proxy Statement: 
     |              +-       +-                   +- return ;
     |              +-       +-                   << catch() 
     |              +-       +- Block:
     |              +-       +- +- Local Variables:
     |              +-       +- +- Code:
     |              +-       +-    +- St: Proxy Call
     |              +-       +-    |  +- Op: >> Proxy Data Access [ errorLog.insertWarning ] << [#unknown#]
     |              +-       +-    |  +- Arguments
     |              +-       +-    |     +- Op: + [Ljava.lang.String;]
     |              +-       +-    |     |  +- Op: + [Ljava.lang.String;]
     |              +-       +-    |     |  |  +- Op: Literal [Ljava.lang.String;]
     |              +-       +-    |     |  |  |  +- String: "No s'ha trobat la classe \\\""
     |              +-       +-    |     |  |  +- Op: >> Proxy Data Access [ name ] << [#unknown#]
     |              +-       +-    |     |  +- Op: Literal [Ljava.lang.String;]
     |              +-       +-    |     |     +- String: "\\\"."
     |              +-       +-    |     +- Op: >> Proxy Data Access [ cz ] << [#unknown#]
     |              +-       +-    +- Block:
     |              +-       +-       +- Local Variables:
     |              +-       +-       +- Code:
     |              +-       +-          +- If Statement:
     |              +-       +-             +- Condition:
     |              +-       +-             |  +- Op: Literal [Z]
     |              +-       +-             |     +- Boolean: true
     |              +-       +-             +- If Code:
     |              +-       +-                +- >> Proxy Statement: 
     |              +-       +-                   +- return ;
     |              +-       +-                   <<
     |              +-       <<
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public TypeArguments
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "<"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ TypeArgument ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_20
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_20;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ TypeArgument ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_20;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ","
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ TypeArgument ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ">"
  final public TypeArgument
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ ReferenceType ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ HOOK ] << [#unknown#]
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: "?"
        +-   >> Proxy Statement: 
        +-   +- switch() {
        +-   +- case :
        +-   +- case :
        +-   +-   St: Call
        +-   +-   +- Op: Method:
        +-   +-   |  +- java.util.List -> add
        +-   +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +-   +- Arguments
        +-   +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
        +-   +-         +- Op: Method:
        +-   +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
        +-   +-         +- Arguments
        +-   +-   St: Proxy Call
        +-   +-   +- Op: >> Proxy Data Access [ WildcardBounds ] << [#unknown#]
        +-   +-   +- Arguments
        +-   +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   +-   >> Proxy Statement: 
        +-   +-   +- break;
        +-   +-   <<
        +-   +- default:
        +-   +-   St: No operation
        +-   +- }
        +-   <<
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: - [I]
        +-         +- Op: Literal [I]
        +-            +- Integer: 1
        +-   >> Proxy Statement: 
        +-   +- throw ;
        +-   <<
        +- }
        <<
  final public WildcardBounds
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: other [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ ReferenceType ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: other [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ ReferenceType ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: other [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> addAll
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Local variable access: other [Ljava.util.List;]
  final public Lcat.quadriga.parsers.code.types.PrimitiveTypeRef; PrimitiveType
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ BOOLEAN ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ CHAR ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ BYTE ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ SHORT ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ INT ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ LONG ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ FLOAT ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ DOUBLE ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.types.BaseType; ResultType
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ VOID ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-   +- Op: Call [Lcat.quadriga.parsers.code.types.PrimitiveTypeRef;]
     |  +-      +- Op: Method:
     |  +-      |  +- cat.quadriga.parsers.code.types.PrimitiveTypeRef -> getFromName
     |  +-      +- Arguments
     |  +-         +- Op: Field: [Ljava.lang.String;]
     |  +-            +- cat.quadriga.parsers.Token -> image
     |  +-            +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public <>Ljava.util.List; Name
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ tokens ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: tokens [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: tokens [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- LABEL: label_21
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_16 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_21;
     |     +-    |              <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ tokens.add ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: >> Proxy Data Access [ t ] << [#unknown#]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_16 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_21;
     |     +-    |              <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ tokens.add ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public <<>>Ljava.util.List; NameList
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ aux ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ names ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: names [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: =
     |  +- Op: Local variable access: aux [Ljava.util.List;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |     +- Arguments
     +- St: Invalid Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: names [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Local variable access: aux [Ljava.util.List;]
     +- LABEL: label_22
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_22;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    +- St: Invalid Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: names [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: aux [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_22;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    +- St: Invalid Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: names [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: aux [Ljava.util.List;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; Expression
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown AssigmentStatementNode.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ ConditionalExpression ] << [#unknown#]
     |     +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_17 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  |        |        +- Op: Method:
     |  |        |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  |        |        +- Arguments
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: operator [#unknown AssigmentStatementNode.Operator #]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ AssignmentOperator ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  |        |        +- Op: Method:
     |  |        |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  |        |        +- Arguments
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: auxNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: Local variable access: out [Ljava.util.List;]
     |  |        +- St: =
     |  |           +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.AssigmentExpressionNode;]
     |  |              +- Lcat.quadriga.parsers.code.expressions.AssigmentExpressionNode;
     |  |              +- Arguments
     |  |                 +- Op: Local variable access: operator [#unknown AssigmentStatementNode.Operator #]
     |  |                 +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |                 +- Op: Local variable access: auxNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: No operation
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public #unknown AssigmentStatementNode.Operator # AssignmentOperator
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ op ] Type [ #unknown AssigmentStatementNode.Operator # ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member ASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ STARASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member STARASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ SLASHASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member SLASHASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ REMASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member REMASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ PLUSASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member PLUSASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ MINUSASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member MINUSASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ LSHIFTASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LSHIFTASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ RSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member RSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member RUNSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ANDASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member ANDASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ XORASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member XORASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ORASSIGN ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: op [#unknown AssigmentStatementNode.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member ORASSIGN ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.statements.AssigmentStatementNode
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ConditionalExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ aux ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxNode1 ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxNode2 ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: aux [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ ConditionalOrExpression ] << [#unknown#]
     |     +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ HOOK ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: auxNode1 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: aux [Ljava.util.List;]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: auxNode2 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: aux [Ljava.util.List;]
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.TernaryExpressionNode;]
     |  +-      +- Lcat.quadriga.parsers.code.expressions.TernaryExpressionNode;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Local variable access: auxNode1 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Local variable access: auxNode2 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ConditionalOrExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown LogicalOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ ConditionalAndExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_23
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_23;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ SC_OR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member OR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.LogicalOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ConditionalAndExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.LogicalOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.LogicalOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_23;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ SC_OR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member OR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.LogicalOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ConditionalAndExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.LogicalOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.LogicalOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ConditionalAndExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown LogicalOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ InclusiveOrExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_24
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_24;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ SC_AND ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member AND ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.LogicalOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ InclusiveOrExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.LogicalOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.LogicalOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_24;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ SC_AND ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member AND ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.LogicalOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ InclusiveOrExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.LogicalOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.LogicalOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown LogicalOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; InclusiveOrExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ ExclusiveOrExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_25
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_25;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ BIT_OR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_OR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ExclusiveOrExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_25;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ BIT_OR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_OR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ExclusiveOrExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ExclusiveOrExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ AndExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_26
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_26;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ XOR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_XOR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ AndExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_26;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ XOR ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_XOR ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ AndExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; AndExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ EqualityExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_27
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_27;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_AND ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ EqualityExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_27;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +- Op: >> Proxy Data Access [ Proxy access to member BIT_AND ] << [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |        +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ EqualityExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; EqualityExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown BooleanOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ InstanceOfExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_28
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_28;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ EQ ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member EQ ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ NE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member NEQ ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ InstanceOfExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.BooleanOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.BooleanOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_28;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ EQ ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member EQ ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ NE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member NEQ ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ InstanceOfExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.BooleanOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.BooleanOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; InstanceOfExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown BooleanOperation.Operator # ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ RelationalExpression ] << [#unknown#]
     |     +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ INSTANCEOF ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |  +-   +- Op: >> Proxy Data Access [ Proxy access to member INSTANCEOF ] << [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   St: =
     |  +-   +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |  +-      +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-         +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-            +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-            +- Arguments
     |  +-               +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.BooleanOperation;]
     |  +-      +- Lcat.quadriga.parsers.code.expressions.BooleanOperation;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |  +-         +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; RelationalExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown BooleanOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ ShiftExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_29
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_29;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member GT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LE ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ GE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member GE ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ShiftExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.BooleanOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.BooleanOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_29;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member GT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LE ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ GE ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member GE ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.BooleanOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ ShiftExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.BooleanOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.BooleanOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown BooleanOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ShiftExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ AdditiveExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_30
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_18 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 1
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_30;
     |     +-    |              <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LSHIFT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LEFT_SHIFT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   If Statement:
     |     +-    |  +-   +- Condition:
     |     +-    |  +-   |  +- Op: Proxy Call [#unknown#]
     |     +-    |  +-   |     +- Op: >> Proxy Data Access [ jj_2_19 ] << [#unknown#]
     |     +-    |  +-   |     +- Arguments
     |     +-    |  +-   |        +- Op: Literal [I]
     |     +-    |  +-   |           +- Integer: 1
     |     +-    |  +-   +- If Code:
     |     +-    |  +-   |  +- Block:
     |     +-    |  +-   |     +- Local Variables:
     |     +-    |  +-   |     +- Code:
     |     +-    |  +-   |        +- St: Proxy Call
     |     +-    |  +-   |        |  +- Op: >> Proxy Data Access [ RSIGNEDSHIFT ] << [#unknown#]
     |     +-    |  +-   |        |  +- Arguments
     |     +-    |  +-   |        +- St: =
     |     +-    |  +-   |           +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-   |           +- Op: >> Proxy Data Access [ Proxy access to member RIGHT_SHIFT ] << [#unknown#]
     |     +-    |  +-   |              +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-   |                 +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   +- Else Code:
     |     +-    |  +-      +- If Statement:
     |     +-    |  +-         +- Condition:
     |     +-    |  +-         |  +- Op: Proxy Call [#unknown#]
     |     +-    |  +-         |     +- Op: >> Proxy Data Access [ jj_2_20 ] << [#unknown#]
     |     +-    |  +-         |     +- Arguments
     |     +-    |  +-         |        +- Op: Literal [I]
     |     +-    |  +-         |           +- Integer: 1
     |     +-    |  +-         +- If Code:
     |     +-    |  +-         |  +- Block:
     |     +-    |  +-         |     +- Local Variables:
     |     +-    |  +-         |     +- Code:
     |     +-    |  +-         |        +- St: Proxy Call
     |     +-    |  +-         |        |  +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFT ] << [#unknown#]
     |     +-    |  +-         |        |  +- Arguments
     |     +-    |  +-         |        +- St: =
     |     +-    |  +-         |           +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-         |           +- Op: >> Proxy Data Access [ Proxy access to member RIGHT_UNSIGNED_SHIFT ] << [#unknown#]
     |     +-    |  +-         |              +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         |                 +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-         +- Else Code:
     |     +-    |  +-            +- Block:
     |     +-    |  +-               +- Local Variables:
     |     +-    |  +-               +- Code:
     |     +-    |  +-                  +- St: Proxy Call
     |     +-    |  +-                  |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-                  |  +- Arguments
     |     +-    |  +-                  |     +- Op: - [I]
     |     +-    |  +-                  |        +- Op: Literal [I]
     |     +-    |  +-                  |           +- Integer: 1
     |     +-    |  +-                  +- >> Proxy Statement: 
     |     +-    |  +-                     +- throw ;
     |     +-    |  +-                     <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ auxiliarNode ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ AdditiveExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ auxiliarNode ] << [#unknown#]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_18 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 1
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_30;
     |     +-    |              <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ LSHIFT ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member LEFT_SHIFT ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   If Statement:
     |     +-    |  +-   +- Condition:
     |     +-    |  +-   |  +- Op: Proxy Call [#unknown#]
     |     +-    |  +-   |     +- Op: >> Proxy Data Access [ jj_2_19 ] << [#unknown#]
     |     +-    |  +-   |     +- Arguments
     |     +-    |  +-   |        +- Op: Literal [I]
     |     +-    |  +-   |           +- Integer: 1
     |     +-    |  +-   +- If Code:
     |     +-    |  +-   |  +- Block:
     |     +-    |  +-   |     +- Local Variables:
     |     +-    |  +-   |     +- Code:
     |     +-    |  +-   |        +- St: Proxy Call
     |     +-    |  +-   |        |  +- Op: >> Proxy Data Access [ RSIGNEDSHIFT ] << [#unknown#]
     |     +-    |  +-   |        |  +- Arguments
     |     +-    |  +-   |        +- St: =
     |     +-    |  +-   |           +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-   |           +- Op: >> Proxy Data Access [ Proxy access to member RIGHT_SHIFT ] << [#unknown#]
     |     +-    |  +-   |              +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-   |                 +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   +- Else Code:
     |     +-    |  +-      +- If Statement:
     |     +-    |  +-         +- Condition:
     |     +-    |  +-         |  +- Op: Proxy Call [#unknown#]
     |     +-    |  +-         |     +- Op: >> Proxy Data Access [ jj_2_20 ] << [#unknown#]
     |     +-    |  +-         |     +- Arguments
     |     +-    |  +-         |        +- Op: Literal [I]
     |     +-    |  +-         |           +- Integer: 1
     |     +-    |  +-         +- If Code:
     |     +-    |  +-         |  +- Block:
     |     +-    |  +-         |     +- Local Variables:
     |     +-    |  +-         |     +- Code:
     |     +-    |  +-         |        +- St: Proxy Call
     |     +-    |  +-         |        |  +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFT ] << [#unknown#]
     |     +-    |  +-         |        |  +- Arguments
     |     +-    |  +-         |        +- St: =
     |     +-    |  +-         |           +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-    |  +-         |           +- Op: >> Proxy Data Access [ Proxy access to member RIGHT_UNSIGNED_SHIFT ] << [#unknown#]
     |     +-    |  +-         |              +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         |                 +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-         +- Else Code:
     |     +-    |  +-            +- Block:
     |     +-    |  +-               +- Local Variables:
     |     +-    |  +-               +- Code:
     |     +-    |  +-                  +- St: Proxy Call
     |     +-    |  +-                  |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-                  |  +- Arguments
     |     +-    |  +-                  |     +- Op: - [I]
     |     +-    |  +-                  |        +- Op: Literal [I]
     |     +-    |  +-                  |           +- Integer: 1
     |     +-    |  +-                  +- >> Proxy Statement: 
     |     +-    |  +-                     +- throw ;
     |     +-    |  +-                     <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ auxiliarNode ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ AdditiveExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ operator ] << [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |     +-             +- Op: >> Proxy Data Access [ auxiliarNode ] << [#unknown#]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; AdditiveExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ MultiplicativeExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_31
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_31;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ PLUS ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member ADD ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ MINUS ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member SUB ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ MultiplicativeExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_31;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ PLUS ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member ADD ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ MINUS ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member SUB ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ MultiplicativeExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; MultiplicativeExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ auxiliarNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown MathematicOperation.Operator # ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_32
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_32;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ STAR ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member MUL ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ SLASH ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member DIV ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ REM ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member MOD ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_32;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ STAR ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member MUL ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ SLASH ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member DIV ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- case :
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: >> Proxy Data Access [ REM ] << [#unknown#]
     |     +-    |  +-   St: =
     |     +-    |  +-   +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-    |  +-   +- Op: >> Proxy Data Access [ Proxy access to member MOD ] << [#unknown#]
     |     +-    |  +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |     +-    |  +-         +- class cat.quadriga.parsers.code.expressions.MathematicOperation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   St: Proxy Call
     |     +-    |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +-   +- Arguments
     |     +-    |  +-      +- Op: - [I]
     |     +-    |  +-         +- Op: Literal [I]
     |     +-    |  +-            +- Integer: 1
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- throw ;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: =
     |     +-       +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-       +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.MathematicOperation;]
     |     +-          +- Lcat.quadriga.parsers.code.expressions.MathematicOperation;
     |     +-          +- Arguments
     |     +-             +- Op: Local variable access: operator [#unknown MathematicOperation.Operator #]
     |     +-             +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     +-             +- Op: Local variable access: auxiliarNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; UnaryExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown UnaryOperation.Operator # ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ PLUS ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: Literal [Null type]
     |  +-   +-      +- Null
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ MINUS ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: >> Proxy Data Access [ Proxy access to member NEGATE ] << [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: - [I]
     |  +-   +-         +- Op: Literal [I]
     |  +-   +-            +- Integer: 1
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- throw ;
     |  +-   +-   <<
     |  +-   +- }
     |  +-   <<
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   If Statement:
     |  +-   +- Condition:
     |  +-   |  +- Op: != [Z]
     |  +-   |     +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   |     +- Op: Literal [Null type]
     |  +-   |        +- Null
     |  +-   +- If Code:
     |  +-      +- St: =
     |  +-         +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.UnaryOperation;]
     |  +-            +- Lcat.quadriga.parsers.code.expressions.UnaryOperation;
     |  +-            +- Arguments
     |  +-               +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-               +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-               +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ PreIncrementExpression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ PreDecrementExpression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ UnaryExpressionNotPlusMinus ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PreIncrementExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ node ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ INCR ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ PrimaryExpression ] << [#unknown#]
     |     +- Arguments
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PreDecrementExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ node ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ DECR ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ PrimaryExpression ] << [#unknown#]
     |     +- Arguments
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; UnaryExpressionNotPlusMinus
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ operator ] Type [ #unknown UnaryOperation.Operator # ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ TILDE ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: >> Proxy Data Access [ Proxy access to member BIT_COMP ] << [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ BANG ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: >> Proxy Data Access [ Proxy access to member NOT ] << [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: - [I]
     |  +-   +-         +- Op: Literal [I]
     |  +-   +-            +- Integer: 1
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- throw ;
     |  +-   +-   <<
     |  +-   +- }
     |  +-   <<
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.UnaryOperation;]
     |  +-      +- Lcat.quadriga.parsers.code.expressions.UnaryOperation;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-         +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   If Statement:
     |  +-   +- Condition:
     |  +-   |  +- Op: Proxy Call [#unknown#]
     |  +-   |     +- Op: >> Proxy Data Access [ jj_2_21 ] << [#unknown#]
     |  +-   |     +- Arguments
     |  +-   |        +- Op: Literal [I]
     |  +-   |           +- Integer: 2147483647
     |  +-   +- If Code:
     |  +-   |  +- Block:
     |  +-   |     +- Local Variables:
     |  +-   |     +- Code:
     |  +-   |        +- St: =
     |  +-   |           +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   |           +- Op: Proxy Call [#unknown#]
     |  +-   |              +- Op: >> Proxy Data Access [ CastExpression ] << [#unknown#]
     |  +-   |              +- Arguments
     |  +-   +- Else Code:
     |  +-      +- Block:
     |  +-         +- Local Variables:
     |  +-         +- Code:
     |  +-            +- >> Proxy Statement: 
     |  +-               +- switch() {
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +- case :
     |  +-               +-   St: =
     |  +-               +-   +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |  +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-      +- Op: >> Proxy Data Access [ PostfixExpression ] << [#unknown#]
     |  +-               +-      +- Arguments
     |  +-               +-   >> Proxy Statement: 
     |  +-               +-   +- break;
     |  +-               +-   <<
     |  +-               +- default:
     |  +-               +-   St: Proxy Call
     |  +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   +- Arguments
     |  +-               +-      +- Op: - [I]
     |  +-               +-         +- Op: Literal [I]
     |  +-               +-            +- Integer: 1
     |  +-               +-   >> Proxy Statement: 
     |  +-               +-   +- throw ;
     |  +-               +-   <<
     |  +-               +- }
     |  +-               <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public CastLookahead
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- If Statement:
        +- Condition:
        |  +- Op: Proxy Call [#unknown#]
        |     +- Op: >> Proxy Data Access [ jj_2_22 ] << [#unknown#]
        |     +- Arguments
        |        +- Op: Literal [I]
        |           +- Integer: 2
        +- If Code:
        |  +- Block:
        |     +- Local Variables:
        |     +- Code:
        |        +- St: Proxy Call
        |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        |        |  +- Arguments
        |        |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
        |        +- St: Proxy Call
        |           +- Op: >> Proxy Data Access [ PrimitiveType ] << [#unknown#]
        |           +- Arguments
        |              +- Op: Local variable access: out [Ljava.util.List;]
        +- Else Code:
           +- If Statement:
              +- Condition:
              |  +- Op: Proxy Call [#unknown#]
              |     +- Op: >> Proxy Data Access [ jj_2_23 ] << [#unknown#]
              |     +- Arguments
              |        +- Op: Literal [I]
              |           +- Integer: 2147483647
              +- If Code:
              |  +- Block:
              |     +- Local Variables:
              |     +- Code:
              |        +- St: Proxy Call
              |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
              |        |  +- Arguments
              |        |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
              |        +- St: Proxy Call
              |        |  +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
              |        |  +- Arguments
              |        |     +- Op: >> Proxy Data Access [ out ] << [#unknown#]
              |        +- St: Proxy Call
              |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
              |        |  +- Arguments
              |        |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
              |        +- St: Proxy Call
              |           +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
              |           +- Arguments
              |              +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
              +- Else Code:
                 +- Block:
                    +- Local Variables:
                    +- Code:
                       +- >> Proxy Statement: 
                          +- switch() {
                          +- case :
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
                          +-   >> Proxy Statement: 
                          +-   +- switch() {
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ TILDE ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ BANG ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: >> Proxy Data Access [ NEW ] << [#unknown#]
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- case :
                          +-   +- case :
                          +-   +- case :
                          +-   +- case :
                          +-   +- case :
                          +-   +- case :
                          +-   +- case :
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ Literal ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- break;
                          +-   +-   <<
                          +-   +- default:
                          +-   +-   St: Proxy Call
                          +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +-   +- Arguments
                          +-   +-      +- Op: - [I]
                          +-   +-         +- Op: Literal [I]
                          +-   +-            +- Integer: 1
                          +-   +-   >> Proxy Statement: 
                          +-   +-   +- throw ;
                          +-   +-   <<
                          +-   +- }
                          +-   <<
                          +-   >> Proxy Statement: 
                          +-   +- break;
                          +-   <<
                          +- default:
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: - [I]
                          +-         +- Op: Literal [I]
                          +-            +- Integer: 1
                          +-   >> Proxy Statement: 
                          +-   +- throw ;
                          +-   <<
                          +- }
                          <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PostfixExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ operator ] Type [ #unknown UnaryOperation.Operator # ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ PrimaryExpression ] << [#unknown#]
     |     +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ INCR ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: >> Proxy Data Access [ Proxy access to member POST_INC ] << [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ DECR ] << [#unknown#]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-   +-   +- Op: >> Proxy Data Access [ Proxy access to member POST_DEC ] << [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: - [I]
     |  +-   +-         +- Op: Literal [I]
     |  +-   +-            +- Integer: 1
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- throw ;
     |  +-   +-   <<
     |  +-   +- }
     |  +-   <<
     |  +-   St: =
     |  +-   +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.UnaryOperation;]
     |  +-      +- Lcat.quadriga.parsers.code.expressions.UnaryOperation;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: operator [#unknown UnaryOperation.Operator #]
     |  +-         +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; CastExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ finalNode ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_24 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: Local variable access: out [Ljava.util.List;]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  |        +- St: =
     |  |           +- Op: Local variable access: finalNode [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ UnaryExpression ] << [#unknown#]
     |  |              +- Arguments
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ finalNode ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ UnaryExpressionNotPlusMinus ] << [#unknown#]
     |              +-      +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PrimaryExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: result [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ PrimaryPrefix ] << [#unknown#]
     |     +- Arguments
     +- LABEL: label_33
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_25 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_33;
     |     +-    |              <<
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |     +-       +- Op: Proxy Call [#unknown#]
     |     +-          +- Op: >> Proxy Data Access [ PrimarySuffix ] << [#unknown#]
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ result ] << [#unknown#]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- If Statement:
     |     +-    |  +- Condition:
     |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_25 ] << [#unknown#]
     |     +-    |  |     +- Arguments
     |     +-    |  |        +- Op: Literal [I]
     |     +-    |  |           +- Integer: 2
     |     +-    |  +- If Code:
     |     +-    |  |  +- Block:
     |     +-    |  |     +- Local Variables:
     |     +-    |  |     +- Code:
     |     +-    |  |        +- St: No operation
     |     +-    |  +- Else Code:
     |     +-    |     +- Block:
     |     +-    |        +- Local Variables:
     |     +-    |        +- Code:
     |     +-    |           +- >> Proxy Statement: 
     |     +-    |              +- break label_33;
     |     +-    |              <<
     |     +-    +- St: =
     |     +-       +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |     +-       +- Op: Proxy Call [#unknown#]
     |     +-          +- Op: >> Proxy Data Access [ PrimarySuffix ] << [#unknown#]
     |     +-          +- Arguments
     |     +-             +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; MemberSelector
  Params
  in: Lcat.quadriga.parsers.code.expressions.ExpressionNode;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ t2 ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: other [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: other [Ljava.util.List;]
     +- St: =
     |  +- Op: Local variable access: t2 [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PrimaryPrefix
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ t2 ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ tokenList ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: tokenList [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: result [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Literal ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   If Statement:
     |  +-   +- Condition:
     |  +-   |  +- Op: Proxy Call [#unknown#]
     |  +-   |     +- Op: >> Proxy Data Access [ jj_2_26 ] << [#unknown#]
     |  +-   |     +- Arguments
     |  +-   |        +- Op: Literal [I]
     |  +-   |           +- Integer: 2147483647
     |  +-   +- If Code:
     |  +-   |  +- Block:
     |  +-   |     +- Local Variables:
     |  +-   |     +- Code:
     |  +-   |        +- LABEL: label_34
     |  +-   |        |  +- >> Proxy Statement: 
     |  +-   |        |     +- while( )
     |  +-   |        |     +- Block:
     |  +-   |        |     +- +- Local Variables:
     |  +-   |        |     +- +- Code:
     |  +-   |        |     +-    +- >> Proxy Statement: 
     |  +-   |        |     +-    |  +- switch() {
     |  +-   |        |     +-    |  +- case :
     |  +-   |        |     +-    |  +-   St: No operation
     |  +-   |        |     +-    |  +-   >> Proxy Statement: 
     |  +-   |        |     +-    |  +-   +- break;
     |  +-   |        |     +-    |  +-   <<
     |  +-   |        |     +-    |  +- default:
     |  +-   |        |     +-    |  +-   >> Proxy Statement: 
     |  +-   |        |     +-    |  +-   +- break label_34;
     |  +-   |        |     +-    |  +-   <<
     |  +-   |        |     +-    |  +- }
     |  +-   |        |     +-    |  <<
     |  +-   |        |     +-    +- St: =
     |  +-   |        |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  +-   |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   |        |     +-    |     +- Arguments
     |  +-   |        |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-   |        |     +-    +- St: Proxy Call
     |  +-   |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   |        |     +-    |  +- Arguments
     |  +-   |        |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-   |        |     +-    +- St: Call
     |  +-   |        |     +-       +- Op: Method:
     |  +-   |        |     +-       |  +- java.util.List -> add
     |  +-   |        |     +-       |  +- Op: Local variable access: tokenList [Ljava.util.List;]
     |  +-   |        |     +-       +- Arguments
     |  +-   |        |     +-          +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]Block:
     |  +-   |        |     +- +- Local Variables:
     |  +-   |        |     +- +- Code:
     |  +-   |        |     +-    +- >> Proxy Statement: 
     |  +-   |        |     +-    |  +- switch() {
     |  +-   |        |     +-    |  +- case :
     |  +-   |        |     +-    |  +-   St: No operation
     |  +-   |        |     +-    |  +-   >> Proxy Statement: 
     |  +-   |        |     +-    |  +-   +- break;
     |  +-   |        |     +-    |  +-   <<
     |  +-   |        |     +-    |  +- default:
     |  +-   |        |     +-    |  +-   >> Proxy Statement: 
     |  +-   |        |     +-    |  +-   +- break label_34;
     |  +-   |        |     +-    |  +-   <<
     |  +-   |        |     +-    |  +- }
     |  +-   |        |     +-    |  <<
     |  +-   |        |     +-    +- St: =
     |  +-   |        |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  +-   |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   |        |     +-    |     +- Arguments
     |  +-   |        |     +-    |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-   |        |     +-    +- St: Proxy Call
     |  +-   |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   |        |     +-    |  +- Arguments
     |  +-   |        |     +-    |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-   |        |     +-    +- St: Call
     |  +-   |        |     +-       +- Op: Method:
     |  +-   |        |     +-       |  +- java.util.List -> add
     |  +-   |        |     +-       |  +- Op: Local variable access: tokenList [Ljava.util.List;]
     |  +-   |        |     +-       +- Arguments
     |  +-   |        |     +-          +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   |        |     <<
     |  +-   |        +- St: =
     |  +-   |        |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   |        |     +- Arguments
     |  +-   |        |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +-   |        +- If Statement:
     |  +-   |           +- Condition:
     |  +-   |           |  +- Op: > [Z]
     |  +-   |           |     +- Op: Proxy Call [#unknown#]
     |  +-   |           |     |  +- Op: >> Proxy Data Access [ tokenList.size ] << [#unknown#]
     |  +-   |           |     |  +- Arguments
     |  +-   |           |     +- Op: Literal [I]
     |  +-   |           |        +- Integer: 0
     |  +-   |           +- If Code:
     |  +-   |           |  +- Block:
     |  +-   |           |     +- Local Variables:
     |  +-   |           |     +- Code:
     |  +-   |           |        +- St: =
     |  +-   |           |           +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-   |           |           +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |  +-   |           |              +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |  +-   |           |              +- Arguments
     |  +-   |           |                 +- Op: + [#unknown#]
     |  +-   |           |                 |  +- Op: >> Proxy Data Access [ image ] << [#unknown#]
     |  +-   |           |                 |  |  +- Op: Proxy Call [#unknown#]
     |  +-   |           |                 |  |     +- Op: >> Proxy Data Access [ tokenList.get ] << [#unknown#]
     |  +-   |           |                 |  |     +- Arguments
     |  +-   |           |                 |  |        +- Op: Literal [I]
     |  +-   |           |                 |  |           +- Integer: 0
     |  +-   |           |                 |  +- Op: Literal [Ljava.lang.String;]
     |  +-   |           |                 |     +- String: " ... this"
     |  +-   |           |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-   |           |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-   |           |                    +- Arguments
     |  +-   |           |                       +- Op: Proxy Call [#unknown#]
     |  +-   |           |                       |  +- Op: >> Proxy Data Access [ tokenList.get ] << [#unknown#]
     |  +-   |           |                       |  +- Arguments
     |  +-   |           |                       |     +- Op: Literal [I]
     |  +-   |           |                       |        +- Integer: 0
     |  +-   |           |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-   |           +- Else Code:
     |  +-   |              +- Block:
     |  +-   |                 +- Local Variables:
     |  +-   |                 |  +- Symbol Var [ symbol ] Type [ Lcat.quadriga.parsers.code.symbols.BaseSymbol; ]
     |  +-   |                 +- Code:
     |  +-   |                    +- Statements:
     |  +-   |                    |  +- St: =
     |  +-   |                    |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   |                    |     +- Op: Proxy Call [#unknown#]
     |  +-   |                    |        +- Op: >> Proxy Data Access [ symbolTable.findSymbol ] << [#unknown#]
     |  +-   |                    |        +- Arguments
     |  +-   |                    |           +- Op: Literal [Ljava.lang.String;]
     |  +-   |                    |              +- String: "this"
     |  +-   |                    +- If Statement:
     |  +-   |                       +- Condition:
     |  +-   |                       |  +- Op: != [Z]
     |  +-   |                       |     +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   |                       |     +- Op: Literal [Null type]
     |  +-   |                       |        +- Null
     |  +-   |                       +- If Code:
     |  +-   |                       |  +- Block:
     |  +-   |                       |     +- Local Variables:
     |  +-   |                       |     +- Code:
     |  +-   |                       |        +- St: =
     |  +-   |                       |           +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-   |                       |           +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.dataaccess.LocalVarAccess;]
     |  +-   |                       |              +- Lcat.quadriga.parsers.code.expressions.dataaccess.LocalVarAccess;
     |  +-   |                       |              +- Arguments
     |  +-   |                       |                 +- Op: cast Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol; [Lcat.quadriga.parsers.code.symbols.LocalVariableSymbol;]
     |  +-   |                       |                 |  +- Op: Local variable access: symbol [Lcat.quadriga.parsers.code.symbols.BaseSymbol;]
     |  +-   |                       |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-   |                       |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-   |                       |                    +- Arguments
     |  +-   |                       |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-   |                       +- Else Code:
     |  +-   |                          +- Block:
     |  +-   |                             +- Local Variables:
     |  +-   |                             +- Code:
     |  +-   |                                +- St: =
     |  +-   |                                   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-   |                                   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;]
     |  +-   |                                      +- Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;
     |  +-   |                                      +- Arguments
     |  +-   |                                         +- Op: Literal [Ljava.lang.String;]
     |  +-   |                                         |  +- String: "this"
     |  +-   |                                         +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-   |                                            +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-   |                                            +- Arguments
     |  +-   |                                               +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-   +- Else Code:
     |  +-      +- Block:
     |  +-         +- Local Variables:
     |  +-         +- Code:
     |  +-            +- >> Proxy Statement: 
     |  +-               +- switch() {
     |  +-               +- case :
     |  +-               +-   St: =
     |  +-               +-   +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-      +- Arguments
     |  +-               +-         +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +-               +-   St: Proxy Call
     |  +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   +- Arguments
     |  +-               +-      +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-               +-   St: =
     |  +-               +-   +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-      +- Arguments
     |  +-               +-         +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-               +-   St: =
     |  +-               +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |  +-               +-      +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |  +-               +-      +- Arguments
     |  +-               +-         +- Op: + [Ljava.lang.String;]
     |  +-               +-         |  +- Op: Literal [Ljava.lang.String;]
     |  +-               +-         |  |  +- String: "super."
     |  +-               +-         |  +- Op: >> Proxy Data Access [ t2.image ] << [#unknown#]
     |  +-               +-         +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-               +-            +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-               +-            +- Arguments
     |  +-               +-               +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-               +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-   >> Proxy Statement: 
     |  +-               +-   +- break;
     |  +-               +-   <<
     |  +-               +- default:
     |  +-               +-   If Statement:
     |  +-               +-   +- Condition:
     |  +-               +-   |  +- Op: Proxy Call [#unknown#]
     |  +-               +-   |     +- Op: >> Proxy Data Access [ jj_2_27 ] << [#unknown#]
     |  +-               +-   |     +- Arguments
     |  +-               +-   |        +- Op: Literal [I]
     |  +-               +-   |           +- Integer: 2147483647
     |  +-               +-   +- If Code:
     |  +-               +-   |  +- Block:
     |  +-               +-   |     +- Local Variables:
     |  +-               +-   |     +- Code:
     |  +-               +-   |        +- St: =
     |  +-               +-   |        |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-   |        |     +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |  +-               +-   |        |     +- Arguments
     |  +-               +-   |        |        +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-               +-   |        +- St: =
     |  +-               +-   |        |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   |        |     +- Arguments
     |  +-               +-   |        |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-               +-   |        +- St: Proxy Call
     |  +-               +-   |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   |        |  +- Arguments
     |  +-               +-   |        |     +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +-               +-   |        +- St: Proxy Call
     |  +-               +-   |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   |        |  +- Arguments
     |  +-               +-   |        |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-               +-   |        +- St: =
     |  +-               +-   |        |  +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-   |        |     +- Arguments
     |  +-               +-   |        |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-               +-   |        +- St: =
     |  +-               +-   |           +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-   |           +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |  +-               +-   |              +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |  +-               +-   |              +- Arguments
     |  +-               +-   |                 +- Op: + [#unknown#]
     |  +-               +-   |                 |  +- Op: + [#unknown#]
     |  +-               +-   |                 |  |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-               +-   |                 |  |  +- Op: Literal [Ljava.lang.String;]
     |  +-               +-   |                 |  |     +- String: ".super."
     |  +-               +-   |                 |  +- Op: >> Proxy Data Access [ t.image ] << [#unknown#]
     |  +-               +-   |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-               +-   |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-               +-   |                    +- Arguments
     |  +-               +-   |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-   |                       +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-   +- Else Code:
     |  +-               +-      +- Block:
     |  +-               +-         +- Local Variables:
     |  +-               +-         +- Code:
     |  +-               +-            +- >> Proxy Statement: 
     |  +-               +-               +- switch() {
     |  +-               +-               +- case :
     |  +-               +-               +-   St: Proxy Call
     |  +-               +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-               +-   +- Arguments
     |  +-               +-               +-      +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +-               +-               +-   St: =
     |  +-               +-               +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-               +-               +-      +- Arguments
     |  +-               +-               +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-               +-               +-   St: Proxy Call
     |  +-               +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-               +-   +- Arguments
     |  +-               +-               +-      +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +-               +-               +-   >> Proxy Statement: 
     |  +-               +-               +-   +- break;
     |  +-               +-               +-   <<
     |  +-               +-               +- case :
     |  +-               +-               +-   St: =
     |  +-               +-               +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-      +- Op: >> Proxy Data Access [ AllocationExpression ] << [#unknown#]
     |  +-               +-               +-      +- Arguments
     |  +-               +-               +-         +- Op: Literal [Null type]
     |  +-               +-               +-            +- Null
     |  +-               +-               +-   >> Proxy Statement: 
     |  +-               +-               +-   +- break;
     |  +-               +-               +-   <<
     |  +-               +-               +- default:
     |  +-               +-               +-   If Statement:
     |  +-               +-               +-   +- Condition:
     |  +-               +-               +-   |  +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-   |     +- Op: >> Proxy Data Access [ jj_2_28 ] << [#unknown#]
     |  +-               +-               +-   |     +- Arguments
     |  +-               +-               +-   |        +- Op: Literal [I]
     |  +-               +-               +-   |           +- Integer: 2147483647
     |  +-               +-               +-   +- If Code:
     |  +-               +-               +-   |  +- Block:
     |  +-               +-               +-   |     +- Local Variables:
     |  +-               +-               +-   |     +- Code:
     |  +-               +-               +-   |        +- St: =
     |  +-               +-               +-   |        |  +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-               +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-   |        |     +- Op: >> Proxy Data Access [ ResultType ] << [#unknown#]
     |  +-               +-               +-   |        |     +- Arguments
     |  +-               +-               +-   |        |        +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-               +-               +-   |        +- St: =
     |  +-               +-               +-   |        |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-               +-   |        |     +- Arguments
     |  +-               +-               +-   |        |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +-               +-               +-   |        +- St: =
     |  +-               +-               +-   |        |  +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-               +-   |        |  +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-               +-   |        |     +- Arguments
     |  +-               +-               +-   |        |        +- Op: >> Proxy Data Access [ CLASS ] << [#unknown#]
     |  +-               +-               +-   |        +- St: =
     |  +-               +-               +-   |           +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-               +-   |           +- Op: Invalid Constructor [#unknown LiteralData.ClassLiteral #]
     |  +-               +-               +-   |              +- #unknown LiteralData.ClassLiteral #
     |  +-               +-               +-   |              +- Arguments
     |  +-               +-               +-   |                 +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |  +-               +-               +-   |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  +-               +-               +-   |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  +-               +-               +-   |                    +- Arguments
     |  +-               +-               +-   |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-               +-               +-   |                       +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +-               +-               +-   +- Else Code:
     |  +-               +-               +-      +- Block:
     |  +-               +-               +-         +- Local Variables:
     |  +-               +-               +-         |  +- Symbol Var [ aux ] Type [ Ljava.util.List; ]
     |  +-               +-               +-         +- Code:
     |  +-               +-               +-            +- >> Proxy Statement: 
     |  +-               +-               +-               +- switch() {
     |  +-               +-               +-               +- case :
     |  +-               +-               +-               +-   Statements:
     |  +-               +-               +-               +-   St: =
     |  +-               +-               +-               +-   +- Op: Local variable access: aux [Ljava.util.List;]
     |  +-               +-               +-               +-   +- Op: Proxy Call [#unknown#]
     |  +-               +-               +-               +-      +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |  +-               +-               +-               +-      +- Arguments
     |  +-               +-               +-               +-   St: =
     |  +-               +-               +-               +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  +-               +-               +-               +-   +- Op: Call [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-               +-               +-               +-      +- Op: Method:
     |  +-               +-               +-               +-      |  +- cat.quadriga.parsers.code.Utils -> resolveName
     |  +-               +-               +-               +-      +- Arguments
     |  +-               +-               +-               +-         +- Op: >> Proxy Data Access [ symbolTable ] << [#unknown#]
     |  +-               +-               +-               +-         +- Op: Local variable access: aux [Ljava.util.List;]
     |  +-               +-               +-               +-   >> Proxy Statement: 
     |  +-               +-               +-               +-   +- break;
     |  +-               +-               +-               +-   <<
     |  +-               +-               +-               +- default:
     |  +-               +-               +-               +-   St: Proxy Call
     |  +-               +-               +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-               +-               +-               +-   +- Arguments
     |  +-               +-               +-               +-      +- Op: - [I]
     |  +-               +-               +-               +-         +- Op: Literal [I]
     |  +-               +-               +-               +-            +- Integer: 1
     |  +-               +-               +-               +-   >> Proxy Statement: 
     |  +-               +-               +-               +-   +- throw ;
     |  +-               +-               +-               +-   <<
     |  +-               +-               +-               +- }
     |  +-               +-               +-               <<
     |  +-               +-               +- }
     |  +-               +-               <<
     |  +-               +- }
     |  +-               <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; PrimarySuffix
  Params
  in: Lcat.quadriga.parsers.code.expressions.ExpressionNode;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ t2 ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ out ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ printAux ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: printAux [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_29 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: t2 [Lcat.quadriga.parsers.Token;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  |        +- St: =
     |  |           +- Op: Local variable access: out [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |  |              +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |  |              +- Arguments
     |  |                 +- Op: Literal [Ljava.lang.String;]
     |  |                 |  +- String: ".super"
     |  |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  |                    +- Arguments
     |  |                       +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |                       +- Op: Local variable access: t2 [Lcat.quadriga.parsers.Token;]
     |  +- Else Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Proxy Call [#unknown#]
     |        |     +- Op: >> Proxy Data Access [ jj_2_30 ] << [#unknown#]
     |        |     +- Arguments
     |        |        +- Op: Literal [I]
     |        |           +- Integer: 2147483647
     |        +- If Code:
     |        |  +- Block:
     |        |     +- Local Variables:
     |        |     +- Code:
     |        |        +- St: =
     |        |        |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |        |        |  +- Op: Proxy Call [#unknown#]
     |        |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |        |        |     +- Arguments
     |        |        |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |        |        +- St: =
     |        |        |  +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |        |        |  +- Op: Proxy Call [#unknown#]
     |        |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |        |        |     +- Arguments
     |        |        |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |        |        +- St: =
     |        |           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |        |           +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |        |              +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |        |              +- Arguments
     |        |                 +- Op: Literal [Ljava.lang.String;]
     |        |                 |  +- String: ".this"
     |        |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |        |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |        |                    +- Arguments
     |        |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |        |                       +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |        +- Else Code:
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_2_31 ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 2
     |              +- If Code:
     |              |  +- Block:
     |              |     +- Local Variables:
     |              |     +- Code:
     |              |        +- St: Proxy Call
     |              |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              |        |  +- Arguments
     |              |        |     +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |              |        +- St: =
     |              |           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              |           +- Op: Proxy Call [#unknown#]
     |              |              +- Op: >> Proxy Data Access [ AllocationExpression ] << [#unknown#]
     |              |              +- Arguments
     |              |                 +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |              +- Else Code:
     |                 +- If Statement:
     |                    +- Condition:
     |                    |  +- Op: Proxy Call [#unknown#]
     |                    |     +- Op: >> Proxy Data Access [ jj_2_32 ] << [#unknown#]
     |                    |     +- Arguments
     |                    |        +- Op: Literal [I]
     |                    |           +- Integer: 3
     |                    +- If Code:
     |                    |  +- Block:
     |                    |     +- Local Variables:
     |                    |     +- Code:
     |                    |        +- St: =
     |                    |           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |                    |           +- Op: Proxy Call [#unknown#]
     |                    |              +- Op: >> Proxy Data Access [ MemberSelector ] << [#unknown#]
     |                    |              +- Arguments
     |                    |                 +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                    +- Else Code:
     |                       +- Block:
     |                          +- Local Variables:
     |                          |  +- Symbol Var [ args ] Type [ Lcat.quadriga.parsers.code.statements.CallToArguments; ]
     |                          |  +- Symbol Var [ method ] Type [ Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess; ]
     |                          +- Code:
     |                             +- >> Proxy Statement: 
     |                                +- switch() {
     |                                +- case :
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ printAux.add ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |                                +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |                                +-         +- Arguments
     |                                +-            +- Op: Literal [Ljava.lang.String;]
     |                                +-               +- String: "["
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: >> Proxy Data Access [ printAux ] << [#unknown#]
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ printAux.add ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |                                +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |                                +-         +- Arguments
     |                                +-            +- Op: Literal [Ljava.lang.String;]
     |                                +-               +- String: "]"
     |                                +-   St: =
     |                                +-   +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |                                +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |                                +-      +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |                                +-      +- Arguments
     |                                +-         +- Op: >> Proxy Data Access [ printAux ] << [#unknown#]
     |                                +-   >> Proxy Statement: 
     |                                +-   +- break;
     |                                +-   <<
     |                                +- case :
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |                                +-   St: =
     |                                +-   +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |                                +-   +- Op: Proxy Call [#unknown#]
     |                                +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |                                +-      +- Arguments
     |                                +-         +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |                                +-   If Statement:
     |                                +-   +- Condition:
     |                                +-   |  +- Op: instanceof [Z]
     |                                +-   |     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-   |     +- Op: >> proxy [ Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess; ] [#unknown#]
     |                                +-   +- If Code:
     |                                +-   |  +- Block:
     |                                +-   |     +- Local Variables:
     |                                +-   |     +- Code:
     |                                +-   |        +- St: =
     |                                +-   |           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |                                +-   |           +- Op: Call [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |                                +-   |              +- Op: Method:
     |                                +-   |              |  +- cat.quadriga.parsers.code.Utils -> accessToMember
     |                                +-   |              +- Arguments
     |                                +-   |                 +- Op: cast Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess; [Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess;]
     |                                +-   |                 |  +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-   |                 +- Op: >> Proxy Data Access [ t.image ] << [#unknown#]
     |                                +-   |                 +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |                                +-   +- Else Code:
     |                                +-      +- Block:
     |                                +-         +- Local Variables:
     |                                +-         +- Code:
     |                                +-            +- St: =
     |                                +-               +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |                                +-               +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;]
     |                                +-                  +- Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;
     |                                +-                  +- Arguments
     |                                +-                     +- Op: >> Proxy Data Access [ t.image ] << [#unknown#]
     |                                +-                     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-                     +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |                                +-                        +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |                                +-                        +- Arguments
     |                                +-                           +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |                                +-   >> Proxy Statement: 
     |                                +-   +- break;
     |                                +-   <<
     |                                +- case :
     |                                +-   Statements:
     |                                +-   St: =
     |                                +-   +- Op: Local variable access: args [Lcat.quadriga.parsers.code.statements.CallToArguments;]
     |                                +-   +- Op: Proxy Call [#unknown#]
     |                                +-      +- Op: >> Proxy Data Access [ Arguments ] << [#unknown#]
     |                                +-      +- Arguments
     |                                +-         +- Op: >> Proxy Data Access [ printAux ] << [#unknown#]
     |                                +-   Statements:
     |                                +-   If Statement:
     |                                +-   +- Condition:
     |                                +-   |  +- Op: instanceof [Z]
     |                                +-   |     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-   |     +- Op: >> proxy [ Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess; ] [#unknown#]
     |                                +-   +- If Code:
     |                                +-   |  +- Block:
     |                                +-   |     +- Local Variables:
     |                                +-   |     +- Code:
     |                                +-   |        +- St: =
     |                                +-   |           +- Op: Local variable access: method [Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess;]
     |                                +-   |           +- Op: cast Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess; [Lcat.quadriga.parsers.code.expressions.dataaccess.DataAccess;]
     |                                +-   |              +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-   +- Else Code:
     |                                +-      +- Block:
     |                                +-         +- Local Variables:
     |                                +-         +- Code:
     |                                +-            +- St: =
     |                                +-               +- Op: >> Proxy Data Access [ method ] << [#unknown#]
     |                                +-               +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;]
     |                                +-                  +- Lcat.quadriga.parsers.code.proxy.ProxyDataAccess;
     |                                +-                  +- Arguments
     |                                +-                     +- Op: Literal [Ljava.lang.String;]
     |                                +-                     |  +- String: "Method Call"
     |                                +-                     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |                                +-   St: =
     |                                +-   +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |                                +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.CallToMethod;]
     |                                +-      +- Lcat.quadriga.parsers.code.expressions.CallToMethod;
     |                                +-      +- Arguments
     |                                +-         +- Op: >> Proxy Data Access [ method ] << [#unknown#]
     |                                +-         +- Op: >> Proxy Data Access [ args ] << [#unknown#]
     |                                +-   >> Proxy Statement: 
     |                                +-   +- break;
     |                                +-   <<
     |                                +- default:
     |                                +-   St: Proxy Call
     |                                +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |                                +-   +- Arguments
     |                                +-      +- Op: - [I]
     |                                +-         +- Op: Literal [I]
     |                                +-            +- Integer: 1
     |                                +-   >> Proxy Statement: 
     |                                +-   +- throw ;
     |                                +-   <<
     |                                +- }
     |                                <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData; Literal
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ data ] Type [ Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ INTEGER_LITERAL ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.IntegerLiteral #]
     |  +-      +- #unknown LiteralData.IntegerLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ FLOATING_POINT_LITERAL ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.FloatLiteral #]
     |  +-      +- #unknown LiteralData.FloatLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ CHARACTER_LITERAL ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.CharacterLiteral #]
     |  +-      +- #unknown LiteralData.CharacterLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ STRING_LITERAL ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.StringLiteral #]
     |  +-      +- #unknown LiteralData.StringLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ BooleanLiteral ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: data [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ NullLiteral ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData; BooleanLiteral
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ lit ] Type [ Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ TRUE ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: lit [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.TrueLiteral #]
     |  +-      +- #unknown LiteralData.TrueLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ FALSE ] << [#unknown#]
     |  +-   St: =
     |  +-   +- Op: Local variable access: lit [Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData;]
     |  +-   +- Op: Invalid Constructor [#unknown LiteralData.FalseLiteral #]
     |  +-      +- #unknown LiteralData.FalseLiteral #
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.dataaccess.LiteralData; NullLiteral
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ NULL ] << [#unknown#]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.CallToArguments; Arguments
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ arguments ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ node ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ t2 ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: arguments [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   St: Invalid Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: arguments [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   LABEL: label_35
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_35;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    |        +- Op: Local variable access: out [Ljava.util.List;]
     |  +-      +-    +- St: Invalid Call
     |  +-      +-       +- Op: Method:
     |  +-      +-       |  +- java.util.List -> add
     |  +-      +-       |  +- Op: Local variable access: arguments [Ljava.util.List;]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- >> Proxy Statement: 
     |  +-      +-    |  +- switch() {
     |  +-      +-    |  +- case :
     |  +-      +-    |  +-   St: No operation
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- default:
     |  +-      +-    |  +-   >> Proxy Statement: 
     |  +-      +-    |  +-   +- break label_35;
     |  +-      +-    |  +-   <<
     |  +-      +-    |  +- }
     |  +-      +-    |  <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: =
     |  +-      +-    |  +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-      +-    |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-      +-    |     +- Arguments
     |  +-      +-    |        +- Op: Local variable access: out [Ljava.util.List;]
     |  +-      +-    +- St: Invalid Call
     |  +-      +-       +- Op: Method:
     |  +-      +-       |  +- java.util.List -> add
     |  +-      +-       |  +- Op: Local variable access: arguments [Ljava.util.List;]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: Local variable access: node [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ t2 ] << [#unknown#]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; AllocationExpression
  Params
  in: Lcat.quadriga.parsers.code.expressions.ExpressionNode;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ other2 ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ exp ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ args ] Type [ Lcat.quadriga.parsers.code.statements.CallToArguments; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |  |  +- Op: Local variable access: other [Ljava.util.List;]
     |  |  +- Op: Constructor [Ljava.util.LinkedList;]
     |  |     +- Ljava.util.LinkedList;
     |  |     +- Arguments
     |  +- St: =
     |  |  +- Op: Local variable access: other2 [Ljava.util.List;]
     |  |  +- Op: Constructor [Ljava.util.LinkedList;]
     |  |     +- Ljava.util.LinkedList;
     |  |     +- Arguments
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- Statements:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_33 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: >> Proxy Data Access [ NEW ] << [#unknown#]
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ PrimitiveType ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: Local variable access: other [Ljava.util.List;]
     |  |        +- St: =
     |  |           +- Op: Local variable access: exp [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ ArrayDimsAndInits ] << [#unknown#]
     |  |              +- Arguments
     |  |                 +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  |                 +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ NEW ] << [#unknown#]
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ ClassOrInterfaceType ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- switch() {
     |              +-   +- case :
     |              +-   +-   St: Proxy Call
     |              +-   +-   +- Op: >> Proxy Data Access [ TypeArguments ] << [#unknown#]
     |              +-   +-   +- Arguments
     |              +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- default:
     |              +-   +-   St: No operation
     |              +-   +- }
     |              +-   <<
     |              +-   >> Proxy Statement: 
     |              +-   +- switch() {
     |              +-   +- case :
     |              +-   +-   St: =
     |              +-   +-   +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +- Op: Proxy Call [#unknown#]
     |              +-   +-      +- Op: >> Proxy Data Access [ ArrayDimsAndInits ] << [#unknown#]
     |              +-   +-      +- Arguments
     |              +-   +-         +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |              +-   +-         +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- case :
     |              +-   +-   St: =
     |              +-   +-   +- Op: >> Proxy Data Access [ args ] << [#unknown#]
     |              +-   +-   +- Op: Proxy Call [#unknown#]
     |              +-   +-      +- Op: >> Proxy Data Access [ Arguments ] << [#unknown#]
     |              +-   +-      +- Arguments
     |              +-   +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- switch() {
     |              +-   +-   +- case :
     |              +-   +-   +-   St: Proxy Call
     |              +-   +-   +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceBody ] << [#unknown#]
     |              +-   +-   +-   +- Arguments
     |              +-   +-   +-      +- Op: Literal [Z]
     |              +-   +-   +-      |  +- Boolean: false
     |              +-   +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   +-   St: =
     |              +-   +-   +-   +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |              +-   +-   +-      +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |              +-   +-   +-      +- Arguments
     |              +-   +-   +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   +-   St: =
     |              +-   +-   +-   +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.UnaryProxy;]
     |              +-   +-   +-      +- Lcat.quadriga.parsers.code.proxy.UnaryProxy;
     |              +-   +-   +-      +- Arguments
     |              +-   +-   +-         +- Op: + [Ljava.lang.String;]
     |              +-   +-   +-         |  +- Op: Literal [Ljava.lang.String;]
     |              +-   +-   +-         |  |  +- String: "new "
     |              +-   +-   +-         |  +- Op: Proxy Call [#unknown#]
     |              +-   +-   +-         |     +- Op: >> Proxy Data Access [ type.toString ] << [#unknown#]
     |              +-   +-   +-         |     +- Arguments
     |              +-   +-   +-         +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +-   >> Proxy Statement: 
     |              +-   +-   +-   +- break;
     |              +-   +-   +-   <<
     |              +-   +-   +- default:
     |              +-   +-   +-   If Statement:
     |              +-   +-   +-   +- Condition:
     |              +-   +-   +-   |  +- Op: == [Z]
     |              +-   +-   +-   |     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |              +-   +-   +-   |     +- Op: Literal [Null type]
     |              +-   +-   +-   |        +- Null
     |              +-   +-   +-   +- If Code:
     |              +-   +-   +-   |  +- Block:
     |              +-   +-   +-   |     +- Local Variables:
     |              +-   +-   +-   |     +- Code:
     |              +-   +-   +-   |        +- St: =
     |              +-   +-   +-   |           +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +-   |           +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.AllocationExpressionNode;]
     |              +-   +-   +-   |              +- Lcat.quadriga.parsers.code.expressions.AllocationExpressionNode;
     |              +-   +-   +-   |              +- Arguments
     |              +-   +-   +-   |                 +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |              +-   +-   +-   |                 +- Op: >> Proxy Data Access [ args ] << [#unknown#]
     |              +-   +-   +-   |                 +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +-   +-   +- Else Code:
     |              +-   +-   +-      +- Block:
     |              +-   +-   +-         +- Local Variables:
     |              +-   +-   +-         +- Code:
     |              +-   +-   +-            +- St: =
     |              +-   +-   +-               +- Op: >> Proxy Data Access [ exp ] << [#unknown#]
     |              +-   +-   +-               +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.AllocationExpressionNode;]
     |              +-   +-   +-                  +- Lcat.quadriga.parsers.code.expressions.AllocationExpressionNode;
     |              +-   +-   +-                  +- Arguments
     |              +-   +-   +-                     +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |              +-   +-   +-                     +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |              +-   +-   +-                     +- Op: >> Proxy Data Access [ args ] << [#unknown#]
     |              +-   +-   +-                     +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |              +-   +-   +- }
     |              +-   +-   <<
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- default:
     |              +-   +-   St: Proxy Call
     |              +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +-   +- Arguments
     |              +-   +-      +- Op: - [I]
     |              +-   +-         +- Op: Literal [I]
     |              +-   +-            +- Integer: 1
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- throw ;
     |              +-   +-   <<
     |              +-   +- }
     |              +-   <<
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.expressions.ExpressionNode; ArrayDimsAndInits
  Params
  in: Lcat.quadriga.parsers.code.types.BaseType;
  n: Lcat.quadriga.parsers.Token;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ aux ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ listLengths ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ dims ] Type [ I ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: listLengths [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: dims [I]
     |     +- Op: Literal [I]
     |        +- Integer: 0
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_36 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- LABEL: label_36
     |  |        |  +- >> Proxy Statement: 
     |  |        |     +- while( )
     |  |        |     +- Block:
     |  |        |     +- +- Local Variables:
     |  |        |     +- +- Code:
     |  |        |     +-    +- St: Proxy Call
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: Invalid Call
     |  |        |     +-    |  +- Op: Method:
     |  |        |     +-    |  |  +- java.util.List -> add
     |  |        |     +-    |  |  +- Op: Local variable access: listLengths [Ljava.util.List;]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |        |     +-    +- St: ++X
     |  |        |     +-    |  +- Op: Local variable access: dims [I]
     |  |        |     +-    +- If Statement:
     |  |        |     +-       +- Condition:
     |  |        |     +-       |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-       |     +- Op: >> Proxy Data Access [ jj_2_34 ] << [#unknown#]
     |  |        |     +-       |     +- Arguments
     |  |        |     +-       |        +- Op: Literal [I]
     |  |        |     +-       |           +- Integer: 2
     |  |        |     +-       +- If Code:
     |  |        |     +-       |  +- Block:
     |  |        |     +-       |     +- Local Variables:
     |  |        |     +-       |     +- Code:
     |  |        |     +-       |        +- St: No operation
     |  |        |     +-       +- Else Code:
     |  |        |     +-          +- Block:
     |  |        |     +-             +- Local Variables:
     |  |        |     +-             +- Code:
     |  |        |     +-                +- >> Proxy Statement: 
     |  |        |     +-                   +- break label_36;
     |  |        |     +-                   <<Block:
     |  |        |     +- +- Local Variables:
     |  |        |     +- +- Code:
     |  |        |     +-    +- St: Proxy Call
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: Invalid Call
     |  |        |     +-    |  +- Op: Method:
     |  |        |     +-    |  |  +- java.util.List -> add
     |  |        |     +-    |  |  +- Op: Local variable access: listLengths [Ljava.util.List;]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: Local variable access: aux [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |        |     +-    +- St: ++X
     |  |        |     +-    |  +- Op: Local variable access: dims [I]
     |  |        |     +-    +- If Statement:
     |  |        |     +-       +- Condition:
     |  |        |     +-       |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-       |     +- Op: >> Proxy Data Access [ jj_2_34 ] << [#unknown#]
     |  |        |     +-       |     +- Arguments
     |  |        |     +-       |        +- Op: Literal [I]
     |  |        |     +-       |           +- Integer: 2
     |  |        |     +-       +- If Code:
     |  |        |     +-       |  +- Block:
     |  |        |     +-       |     +- Local Variables:
     |  |        |     +-       |     +- Code:
     |  |        |     +-       |        +- St: No operation
     |  |        |     +-       +- Else Code:
     |  |        |     +-          +- Block:
     |  |        |     +-             +- Local Variables:
     |  |        |     +-             +- Code:
     |  |        |     +-                +- >> Proxy Statement: 
     |  |        |     +-                   +- break label_36;
     |  |        |     +-                   <<
     |  |        |     <<
     |  |        +- LABEL: label_37
     |  |        |  +- >> Proxy Statement: 
     |  |        |     +- while( )
     |  |        |     +- Block:
     |  |        |     +- +- Local Variables:
     |  |        |     +- +- Code:
     |  |        |     +-    +- If Statement:
     |  |        |     +-    |  +- Condition:
     |  |        |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_35 ] << [#unknown#]
     |  |        |     +-    |  |     +- Arguments
     |  |        |     +-    |  |        +- Op: Literal [I]
     |  |        |     +-    |  |           +- Integer: 2
     |  |        |     +-    |  +- If Code:
     |  |        |     +-    |  |  +- Block:
     |  |        |     +-    |  |     +- Local Variables:
     |  |        |     +-    |  |     +- Code:
     |  |        |     +-    |  |        +- St: No operation
     |  |        |     +-    |  +- Else Code:
     |  |        |     +-    |     +- Block:
     |  |        |     +-    |        +- Local Variables:
     |  |        |     +-    |        +- Code:
     |  |        |     +-    |           +- >> Proxy Statement: 
     |  |        |     +-    |              +- break label_37;
     |  |        |     +-    |              <<
     |  |        |     +-    +- St: Proxy Call
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: ++X
     |  |        |     +-       +- Op: >> Proxy Data Access [ dims ] << [#unknown#]Block:
     |  |        |     +- +- Local Variables:
     |  |        |     +- +- Code:
     |  |        |     +-    +- If Statement:
     |  |        |     +-    |  +- Condition:
     |  |        |     +-    |  |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |  |     +- Op: >> Proxy Data Access [ jj_2_35 ] << [#unknown#]
     |  |        |     +-    |  |     +- Arguments
     |  |        |     +-    |  |        +- Op: Literal [I]
     |  |        |     +-    |  |           +- Integer: 2
     |  |        |     +-    |  +- If Code:
     |  |        |     +-    |  |  +- Block:
     |  |        |     +-    |  |     +- Local Variables:
     |  |        |     +-    |  |     +- Code:
     |  |        |     +-    |  |        +- St: No operation
     |  |        |     +-    |  +- Else Code:
     |  |        |     +-    |     +- Block:
     |  |        |     +-    |        +- Local Variables:
     |  |        |     +-    |        +- Code:
     |  |        |     +-    |           +- >> Proxy Statement: 
     |  |        |     +-    |              +- break label_37;
     |  |        |     +-    |              <<
     |  |        |     +-    +- St: Proxy Call
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |  +- Arguments
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: =
     |  |        |     +-    |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  |        |     +-    |  +- Op: Proxy Call [#unknown#]
     |  |        |     +-    |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +-    |     +- Arguments
     |  |        |     +-    |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  |        |     +-    +- St: ++X
     |  |        |     +-       +- Op: >> Proxy Data Access [ dims ] << [#unknown#]
     |  |        |     <<
     |  |        +- St: =
     |  |           +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.ArrayAllocationExpressionNode;]
     |  |              +- Lcat.quadriga.parsers.code.expressions.ArrayAllocationExpressionNode;
     |  |              +- Arguments
     |  |                 +- Op: >> Proxy Data Access [ in ] << [#unknown#]
     |  |                 +- Op: Proxy Call [#unknown#]
     |  |                 |  +- Op: >> Proxy Data Access [ listLengths.toArray ] << [#unknown#]
     |  |                 |  +- Arguments
     |  |                 |     +- Op: new array [[Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  |                 |        +- Lcat.quadriga.parsers.code.expressions.ExpressionNode;
     |  |                 |        +- Op: Proxy Call [#unknown#]
     |  |                 |           +- Op: >> Proxy Data Access [ listLengths.size ] << [#unknown#]
     |  |                 |           +- Arguments
     |  |                 +- Op: >> Proxy Data Access [ dims ] << [#unknown#]
     |  |                 +- Op: Constructor [Lcat.quadriga.parsers.code.CodeZoneClass;]
     |  |                    +- Lcat.quadriga.parsers.code.CodeZoneClass;
     |  |                    +- Arguments
     |  |                       +- Op: >> Proxy Data Access [ n ] << [#unknown#]
     |  |                       +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +-   LABEL: label_38
     |              +-   +- >> Proxy Statement: 
     |              +-      +- while( )
     |              +-      +- Block:
     |              +-      +- +- Local Variables:
     |              +-      +- +- Code:
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-      +-    |        +- Arguments
     |              +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |              +-      +-    |              +- String: "["
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-      +-    |        +- Arguments
     |              +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |              +-      +-    |              +- String: "]"
     |              +-      +-    +- >> Proxy Statement: 
     |              +-      +-       +- switch() {
     |              +-      +-       +- case :
     |              +-      +-       +-   St: No operation
     |              +-      +-       +-   >> Proxy Statement: 
     |              +-      +-       +-   +- break;
     |              +-      +-       +-   <<
     |              +-      +-       +- default:
     |              +-      +-       +-   >> Proxy Statement: 
     |              +-      +-       +-   +- break label_38;
     |              +-      +-       +-   <<
     |              +-      +-       +- }
     |              +-      +-       <<Block:
     |              +-      +- +- Local Variables:
     |              +-      +- +- Code:
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-      +-    |        +- Arguments
     |              +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |              +-      +-    |              +- String: "["
     |              +-      +-    +- St: Proxy Call
     |              +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-      +-    |  +- Arguments
     |              +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-      +-    |        +- Arguments
     |              +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |              +-      +-    |              +- String: "]"
     |              +-      +-    +- >> Proxy Statement: 
     |              +-      +-       +- switch() {
     |              +-      +-       +- case :
     |              +-      +-       +-   St: No operation
     |              +-      +-       +-   >> Proxy Statement: 
     |              +-      +-       +-   +- break;
     |              +-      +-       +-   <<
     |              +-      +-       +- default:
     |              +-      +-       +-   >> Proxy Statement: 
     |              +-      +-       +-   +- break label_38;
     |              +-      +-       +-   <<
     |              +-      +-       +- }
     |              +-      +-       <<
     |              +-      <<
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ArrayInitializer ] << [#unknown#]
     |              +-   +- Arguments
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |              +-   +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyExpression;]
     |              +-      +- Lcat.quadriga.parsers.code.proxy.ProxyExpression;
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementNode; Statement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ statement ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |     +- Op: Literal [Null type]
     |        +- Null
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_37 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |           +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ LabeledStatement ] << [#unknown#]
     |  |              +- Arguments
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ AssertStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ EmptyStatement ] << [#unknown#]
     |              +-      +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ StatementExpression ] << [#unknown#]
     |              +-      +- Arguments
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ SwitchStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ IfStatement ] << [#unknown#]
     |              +-      +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ WhileStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ DoStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ForStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ BreakStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ContinueStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ReturnStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ThrowStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ SynchronizedStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ TryStatement ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: == [Z]
     |  |     +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |           +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |  |           +- Op: Constructor [Lcat.quadriga.parsers.code.proxy.ProxyStatement;]
     |  |              +- Lcat.quadriga.parsers.code.proxy.ProxyStatement;
     |  |              +- Arguments
     |  |                 +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |        +- Code:
     |           +- Statements:
     |           |  +- St: =
     |           |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |           |     +- Op: Proxy Call [#unknown#]
     |           |        +- Op: >> Proxy Data Access [ statement.treeStringRepresentation ] << [#unknown#]
     |           |        +- Arguments
     |           +- St: Proxy Call
     |              +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |              +- Arguments
     |                 +- Op: Proxy Call [#unknown#]
     |                    +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |                    |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |                    |     +- Op: Method:
     |                    |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |                    |     +- Arguments
     |                    +- Arguments
     |                       +- Op: Local variable access: treeString [Ljava.lang.String;]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public AssertStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ ASSERT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "assert"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-         +- Arguments
     |  +-            +- Op: Literal [Ljava.lang.String;]
     |  +-               +- String: ":"
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   St: Call
     |  +-   +- Op: Method:
     |  +-   |  +- java.util.List -> add
     |  +-   |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +- Arguments
     |  +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-         +- Op: Method:
     |  +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-         +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public Lcat.quadriga.parsers.code.statements.StatementNode; LabeledStatement
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ node ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: node [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.BlockCode; Block
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ prevBlock ] Type [ #unknown BlockCode.TmpBlockCode # ]
  |  +- Symbol Var [ blockStatementNode ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ block ] Type [ Lcat.quadriga.parsers.code.statements.BlockCode; ]
  |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: prevBlock [#unknown BlockCode.TmpBlockCode #]
     |     +- Op: >> Proxy Data Access [ localBlock ] << [#unknown#]
     +- Statements:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.newContext ] << [#unknown#]
     |  +- Arguments
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ localBlock ] << [#unknown#]
     |  +- Op: Invalid Constructor [#unknown BlockCode.TmpBlockCode #]
     |     +- #unknown BlockCode.TmpBlockCode #
     |     +- Arguments
     |        +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- LABEL: label_39
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_39;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: blockStatementNode [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ localBlock.addStatement ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: blockStatementNode [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_39;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: blockStatementNode [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ localBlock.addStatement ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: blockStatementNode [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: block [Lcat.quadriga.parsers.code.statements.BlockCode;]
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ localBlock.transformToBlockCode ] << [#unknown#]
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +- Op: Call [Ljava.lang.String;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.statements.BlockCode -> treeStringRepresentation
     |        |  +- Op: Local variable access: block [Lcat.quadriga.parsers.code.statements.BlockCode;]
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |        |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |        |     +- Op: Method:
     |        |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |        |     +- Arguments
     |        +- Arguments
     |           +- Op: Local variable access: treeString [Ljava.lang.String;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ localBlock ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ prevBlock ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.deleteContext ] << [#unknown#]
     |  +- Arguments
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.BlockStatementNode; BlockStatement
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_38 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: result [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ LocalVariableDeclaration ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        +- St: =
     |  |           +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |              +- Arguments
     |  |                 +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- case :
     |              +- case :
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceDeclaration ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: Literal [I]
     |              +-      |  +- Integer: 0
     |              +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |              +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.NoOpStatement;]
     |              +-      +- Lcat.quadriga.parsers.code.statements.NoOpStatement;
     |              +-      +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementList; LocalVariableDeclaration
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ modifiers ] Type [ I ]
  |  +- Symbol Var [ type ] Type [ Lcat.quadriga.parsers.code.types.BaseType; ]
  |  +- Symbol Var [ var ] Type [ Lcat.quadriga.parsers.VarAndInit; ]
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ initializers ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: initializers [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: =
     |  +- Op: Local variable access: modifiers [I]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- St: =
     |  +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- St: =
     |  +- Op: Local variable access: var [Lcat.quadriga.parsers.VarAndInit;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: modifiers [I]
     |        +- Op: Local variable access: type [Lcat.quadriga.parsers.code.types.BaseType;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: >> Proxy Data Access [ init ] << [#unknown#]
     |  |     |  +- class cat.quadriga.parsers.VarAndInit
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Call
     |              +- Op: Method:
     |              |  +- java.util.List -> add
     |              |  +- Op: Local variable access: initializers [Ljava.util.List;]
     |              +- Arguments
     |                 +- Op: >> Proxy Data Access [ init ] << [#unknown#]
     |                    +- class cat.quadriga.parsers.VarAndInit
     +- LABEL: label_40
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_40;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ var ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-    |        +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-    +- If Statement:
     |     +-       +- Condition:
     |     +-       |  +- Op: != [Z]
     |     +-       |     +- Op: >> Proxy Data Access [ var.init ] << [#unknown#]
     |     +-       |     +- Op: Literal [Null type]
     |     +-       |        +- Null
     |     +-       +- If Code:
     |     +-          +- Block:
     |     +-             +- Local Variables:
     |     +-             +- Code:
     |     +-                +- St: Proxy Call
     |     +-                   +- Op: >> Proxy Data Access [ initializers.add ] << [#unknown#]
     |     +-                   +- Arguments
     |     +-                      +- Op: >> Proxy Data Access [ var.init ] << [#unknown#]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_40;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: >> Proxy Data Access [ var ] << [#unknown#]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ VariableDeclarator ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    |        +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
     |     +-    |        +- Op: >> Proxy Data Access [ type ] << [#unknown#]
     |     +-    +- If Statement:
     |     +-       +- Condition:
     |     +-       |  +- Op: != [Z]
     |     +-       |     +- Op: >> Proxy Data Access [ var.init ] << [#unknown#]
     |     +-       |     +- Op: Literal [Null type]
     |     +-       |        +- Null
     |     +-       +- If Code:
     |     +-          +- Block:
     |     +-             +- Local Variables:
     |     +-             +- Code:
     |     +-                +- St: Proxy Call
     |     +-                   +- Op: >> Proxy Data Access [ initializers.add ] << [#unknown#]
     |     +-                   +- Arguments
     |     +-                      +- Op: >> Proxy Data Access [ var.init ] << [#unknown#]
     |     <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementNode; EmptyStatement
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementNode; StatementExpression
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ expression ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ expression2 ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ assignOperator ] Type [ #unknown AssigmentStatementNode.Operator # ]
  |  +- Symbol Var [ statementNode ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     +- Statements:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ PreIncrementExpression ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ PreDecrementExpression ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: - [I]
     |  +-   +-         +- Op: Literal [I]
     |  +-   +-            +- Integer: 1
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- throw ;
     |  +-   +-   <<
     |  +-   +- }
     |  +-   <<
     |  +-   St: =
     |  +-   +- Op: Local variable access: statementNode [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.StatementFromExpresion;]
     |  +-      +- Lcat.quadriga.parsers.code.statements.StatementFromExpresion;
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ PrimaryExpression ] << [#unknown#]
     |  +-      +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- switch() {
     |  +-   +-   +- case :
     |  +-   +-   +-   St: =
     |  +-   +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +-      +- Arguments
     |  +-   +-   +-         +- Op: >> Proxy Data Access [ INCR ] << [#unknown#]
     |  +-   +-   +-   >> Proxy Statement: 
     |  +-   +-   +-   +- break;
     |  +-   +-   +-   <<
     |  +-   +-   +- case :
     |  +-   +-   +-   St: =
     |  +-   +-   +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-   +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +-      +- Arguments
     |  +-   +-   +-         +- Op: >> Proxy Data Access [ DECR ] << [#unknown#]
     |  +-   +-   +-   >> Proxy Statement: 
     |  +-   +-   +-   +- break;
     |  +-   +-   +-   <<
     |  +-   +-   +- default:
     |  +-   +-   +-   St: Proxy Call
     |  +-   +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +-   +- Arguments
     |  +-   +-   +-      +- Op: - [I]
     |  +-   +-   +-         +- Op: Literal [I]
     |  +-   +-   +-            +- Integer: 1
     |  +-   +-   +-   >> Proxy Statement: 
     |  +-   +-   +-   +- throw ;
     |  +-   +-   +-   <<
     |  +-   +-   +- }
     |  +-   +-   <<
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.expressions.UnaryOperation;]
     |  +-   +-      +- Lcat.quadriga.parsers.code.expressions.UnaryOperation;
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: >> Proxy Data Access [ Proxy access to member PRE_INC ] << [#unknown#]
     |  +-   +-         |  +- Op: >> Proxy Data Access [ Operator ] << [#unknown#]
     |  +-   +-         |     +- class cat.quadriga.parsers.code.expressions.UnaryOperation
     |  +-   +-         +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-         +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: statementNode [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.StatementFromExpresion;]
     |  +-   +-      +- Lcat.quadriga.parsers.code.statements.StatementFromExpresion;
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +- case :
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: assignOperator [#unknown AssigmentStatementNode.Operator #]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ AssignmentOperator ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: expression2 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   +- Op: Proxy Call [#unknown#]
     |  +-   +-      +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: statementNode [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.AssigmentStatementNode;]
     |  +-   +-      +- Lcat.quadriga.parsers.code.statements.AssigmentStatementNode;
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: Local variable access: assignOperator [#unknown AssigmentStatementNode.Operator #]
     |  +-   +-         +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-         +- Op: Local variable access: expression2 [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: =
     |  +-   +-   +- Op: Local variable access: statementNode [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +-   +-   +- Op: Constructor [Lcat.quadriga.parsers.code.statements.StatementFromExpresion;]
     |  +-   +-      +- Lcat.quadriga.parsers.code.statements.StatementFromExpresion;
     |  +-   +-      +- Arguments
     |  +-   +-         +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +-   +- }
     |  +-   <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: - [I]
     |  +-         +- Op: Literal [I]
     |  +-            +- Integer: 1
     |  +-   >> Proxy Statement: 
     |  +-   +- throw ;
     |  +-   <<
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public SwitchStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SWITCH ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "switch"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ")"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- LABEL: label_41
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_41;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ SwitchLabel ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- LABEL: label_42
     |     +-    |  +- >> Proxy Statement: 
     |     +-    |     +- while( )
     |     +-    |     +- Block:
     |     +-    |     +- +- Local Variables:
     |     +-    |     +- |  +- Symbol Var [ bsn ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
     |     +-    |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +-    |     +- +- Code:
     |     +-    |     +-    +- >> Proxy Statement: 
     |     +-    |     +-    |  +- switch() {
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +-   St: No operation
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- default:
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break label_42;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- }
     |     +-    |     +-    |  <<
     |     +-    |     +-    +- St: Call
     |     +-    |     +-    |  +- Op: Method:
     |     +-    |     +-    |  |  +- java.util.List -> add
     |     +-    |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-    |  +- Arguments
     |     +-    |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    +- St: =
     |     +-    |     +-    |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +-    |     +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    |  +- St: =
     |     +-    |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +-    |     +- Op: Call [Ljava.lang.String;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.TreeRepresentable -> treeStringRepresentation
     |     +-    |     +-    |        |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- St: Call
     |     +-    |     +-       +- Op: Method:
     |     +-    |     +-       |  +- java.util.List -> addAll
     |     +-    |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-       +- Arguments
     |     +-    |     +-          +- Op: Proxy Call [#unknown#]
     |     +-    |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-    |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-    |     +-             |     +- Op: Method:
     |     +-    |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-    |     +-             |     +- Arguments
     |     +-    |     +-             +- Arguments
     |     +-    |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]Block:
     |     +-    |     +- +- Local Variables:
     |     +-    |     +- |  +- Symbol Var [ bsn ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
     |     +-    |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +-    |     +- +- Code:
     |     +-    |     +-    +- >> Proxy Statement: 
     |     +-    |     +-    |  +- switch() {
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +-   St: No operation
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- default:
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break label_42;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- }
     |     +-    |     +-    |  <<
     |     +-    |     +-    +- St: Call
     |     +-    |     +-    |  +- Op: Method:
     |     +-    |     +-    |  |  +- java.util.List -> add
     |     +-    |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-    |  +- Arguments
     |     +-    |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    +- St: =
     |     +-    |     +-    |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +-    |     +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    |  +- St: =
     |     +-    |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +-    |     +- Op: Call [Ljava.lang.String;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.TreeRepresentable -> treeStringRepresentation
     |     +-    |     +-    |        |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- St: Call
     |     +-    |     +-       +- Op: Method:
     |     +-    |     +-       |  +- java.util.List -> addAll
     |     +-    |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-       +- Arguments
     |     +-    |     +-          +- Op: Proxy Call [#unknown#]
     |     +-    |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-    |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-    |     +-             |     +- Op: Method:
     |     +-    |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-    |     +-             |     +- Arguments
     |     +-    |     +-             +- Arguments
     |     +-    |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |     +-             +- Op: Method:
     |     +-             |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |     +-             +- ArgumentsBlock:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_41;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ SwitchLabel ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- LABEL: label_42
     |     +-    |  +- >> Proxy Statement: 
     |     +-    |     +- while( )
     |     +-    |     +- Block:
     |     +-    |     +- +- Local Variables:
     |     +-    |     +- |  +- Symbol Var [ bsn ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
     |     +-    |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +-    |     +- +- Code:
     |     +-    |     +-    +- >> Proxy Statement: 
     |     +-    |     +-    |  +- switch() {
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +-   St: No operation
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- default:
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break label_42;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- }
     |     +-    |     +-    |  <<
     |     +-    |     +-    +- St: Call
     |     +-    |     +-    |  +- Op: Method:
     |     +-    |     +-    |  |  +- java.util.List -> add
     |     +-    |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-    |  +- Arguments
     |     +-    |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    +- St: =
     |     +-    |     +-    |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +-    |     +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    |  +- St: =
     |     +-    |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +-    |     +- Op: Call [Ljava.lang.String;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.TreeRepresentable -> treeStringRepresentation
     |     +-    |     +-    |        |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- St: Call
     |     +-    |     +-       +- Op: Method:
     |     +-    |     +-       |  +- java.util.List -> addAll
     |     +-    |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-       +- Arguments
     |     +-    |     +-          +- Op: Proxy Call [#unknown#]
     |     +-    |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-    |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-    |     +-             |     +- Op: Method:
     |     +-    |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-    |     +-             |     +- Arguments
     |     +-    |     +-             +- Arguments
     |     +-    |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]Block:
     |     +-    |     +- +- Local Variables:
     |     +-    |     +- |  +- Symbol Var [ bsn ] Type [ Lcat.quadriga.parsers.code.statements.BlockStatementNode; ]
     |     +-    |     +- |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
     |     +-    |     +- +- Code:
     |     +-    |     +-    +- >> Proxy Statement: 
     |     +-    |     +-    |  +- switch() {
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +- case :
     |     +-    |     +-    |  +-   St: No operation
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- default:
     |     +-    |     +-    |  +-   >> Proxy Statement: 
     |     +-    |     +-    |  +-   +- break label_42;
     |     +-    |     +-    |  +-   <<
     |     +-    |     +-    |  +- }
     |     +-    |     +-    |  <<
     |     +-    |     +-    +- St: Call
     |     +-    |     +-    |  +- Op: Method:
     |     +-    |     +-    |  |  +- java.util.List -> add
     |     +-    |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-    |  +- Arguments
     |     +-    |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    +- St: =
     |     +-    |     +-    |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +-    |     +- Op: >> Proxy Data Access [ BlockStatement ] << [#unknown#]
     |     +-    |     +-    |     +- Arguments
     |     +-    |     +-    +- Statements:
     |     +-    |     +-    |  +- St: =
     |     +-    |     +-    |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     +-    |     +- Op: Call [Ljava.lang.String;]
     |     +-    |     +-    |        +- Op: Method:
     |     +-    |     +-    |        |  +- cat.quadriga.parsers.code.TreeRepresentable -> treeStringRepresentation
     |     +-    |     +-    |        |  +- Op: Local variable access: bsn [Lcat.quadriga.parsers.code.statements.BlockStatementNode;]
     |     +-    |     +-    |        +- Arguments
     |     +-    |     +-    +- St: Call
     |     +-    |     +-       +- Op: Method:
     |     +-    |     +-       |  +- java.util.List -> addAll
     |     +-    |     +-       |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |     +-       +- Arguments
     |     +-    |     +-          +- Op: Proxy Call [#unknown#]
     |     +-    |     +-             +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |     +-    |     +-             |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |     +-    |     +-             |     +- Op: Method:
     |     +-    |     +-             |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |     +-    |     +-             |     +- Arguments
     |     +-    |     +-             +- Arguments
     |     +-    |     +-                +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +-    |     <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |     +-             +- Op: Method:
     |     +-             |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |     +-             +- Arguments
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: "}"
  final public SwitchLabel
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: other [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ CASE ] << [#unknown#]
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Local variable access: other [Ljava.util.List;]
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: "case"
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
        +-         +- Op: Method:
        +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
        +-         +- Arguments
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> addAll
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Local variable access: other [Ljava.util.List;]
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: ":"
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ _DEFAULT ] << [#unknown#]
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: "default"
        +-   St: Call
        +-   +- Op: Method:
        +-   |  +- java.util.List -> add
        +-   |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: ":"
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: - [I]
        +-         +- Op: Literal [I]
        +-            +- Integer: 1
        +-   >> Proxy Statement: 
        +-   +- throw ;
        +-   <<
        +- }
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementNode; IfStatement
  Params
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ out ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ node1 ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  |  +- Symbol Var [ node2 ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  |  +- Symbol Var [ expression ] Type [ Lcat.quadriga.parsers.code.expressions.ExpressionNode; ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: out [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: node2 [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |     +- Op: Literal [Null type]
     |        +- Null
     +- Statements:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IF ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: expression [Lcat.quadriga.parsers.code.expressions.ExpressionNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.newContext ] << [#unknown#]
     |  +- Arguments
     +- St: =
     |  +- Op: Local variable access: node1 [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
     |     +- Arguments
     |        +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ symbolTable.deleteContext ] << [#unknown#]
     |  +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: >> Proxy Data Access [ ELSE ] << [#unknown#]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ symbolTable.newContext ] << [#unknown#]
     |  +-   +- Arguments
     |  +-   St: =
     |  +-   +- Op: Local variable access: node2 [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ symbolTable.deleteContext ] << [#unknown#]
     |  +-   +- Arguments
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public WhileStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ WHILE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "while"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ")"
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public DoStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ DO ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "do"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ WHILE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "while"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ")"
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public ForStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ FOR ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "for"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_39 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Local variable access: out [Ljava.util.List;]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: Local variable access: out [Ljava.util.List;]
     |  |        +- St: =
     |  |        |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        |  +- Op: Proxy Call [#unknown#]
     |  |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |     +- Arguments
     |  |        |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  |        +- St: Proxy Call
     |  |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  |        |  +- Arguments
     |  |        |     +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  |        |        +- Op: Method:
     |  |        |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  |        |        +- Arguments
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  |        |        +- Arguments
     |  |        |           +- Op: Field: [Ljava.lang.String;]
     |  |        |              +- cat.quadriga.parsers.Token -> image
     |  |        |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  |        |        +- Arguments
     |  |        |           +- Op: Literal [Ljava.lang.String;]
     |  |        |              +- String: ":"
     |  |        +- St: Call
     |  |        |  +- Op: Method:
     |  |        |  |  +- java.util.List -> add
     |  |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  |        |  +- Arguments
     |  |        |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  |        |        +- Op: Method:
     |  |        |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  |        |        +- Arguments
     |  |        +- St: Proxy Call
     |  |           +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  |           +- Arguments
     |  |              +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +-   >> Proxy Statement: 
     |              +-   +- switch() {
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +-   St: Proxy Call
     |              +-   +-   +- Op: >> Proxy Data Access [ ForInit ] << [#unknown#]
     |              +-   +-   +- Arguments
     |              +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- default:
     |              +-   +-   St: No operation
     |              +-   +- }
     |              +-   <<
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-         +- Arguments
     |              +-            +- Op: Literal [Ljava.lang.String;]
     |              +-               +- String: ";"
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |              +-         +- Op: Method:
     |              +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |              +-         +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- switch() {
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +-   St: Proxy Call
     |              +-   +-   +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |              +-   +-   +- Arguments
     |              +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- default:
     |              +-   +-   St: No operation
     |              +-   +- }
     |              +-   <<
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |              +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
     |              +-         +- Arguments
     |              +-            +- Op: Literal [Ljava.lang.String;]
     |              +-               +- String: ";"
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |              +-         +- Op: Method:
     |              +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |              +-         +- Arguments
     |              +-   >> Proxy Statement: 
     |              +-   +- switch() {
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +- case :
     |              +-   +-   St: Proxy Call
     |              +-   +-   +- Op: >> Proxy Data Access [ ForUpdate ] << [#unknown#]
     |              +-   +-   +- Arguments
     |              +-   +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   +-   >> Proxy Statement: 
     |              +-   +-   +- break;
     |              +-   +-   <<
     |              +-   +- default:
     |              +-   +-   St: No operation
     |              +-   +- }
     |              +-   <<
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ")"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ Statement ] << [#unknown#]
        +- Arguments
           +- Op: >> Proxy Data Access [ out ] << [#unknown#]
  final public Lcat.quadriga.parsers.code.statements.StatementNode; ForInit
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ result ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_2_40 ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 2147483647
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: =
     |  |           +- Op: Local variable access: result [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  |           +- Op: Proxy Call [#unknown#]
     |  |              +- Op: >> Proxy Data Access [ LocalVariableDeclaration ] << [#unknown#]
     |  |              +- Arguments
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- switch() {
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +- case :
     |              +-   St: =
     |              +-   +- Op: >> Proxy Data Access [ result ] << [#unknown#]
     |              +-   +- Op: Proxy Call [#unknown#]
     |              +-      +- Op: >> Proxy Data Access [ StatementExpressionList ] << [#unknown#]
     |              +-      +- Arguments
     |              +-         +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |              +-   >> Proxy Statement: 
     |              +-   +- break;
     |              +-   <<
     |              +- default:
     |              +-   St: Proxy Call
     |              +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |              +-   +- Arguments
     |              +-      +- Op: - [I]
     |              +-         +- Op: Literal [I]
     |              +-            +- Integer: 1
     |              +-   >> Proxy Statement: 
     |              +-   +- throw ;
     |              +-   <<
     |              +- }
     |              <<
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ result.treeStringRepresentation ] << [#unknown#]
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |        |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |        |     +- Op: Method:
     |        |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |        |     +- Arguments
     |        +- Arguments
     |           +- Op: Local variable access: treeString [Ljava.lang.String;]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public Lcat.quadriga.parsers.code.statements.StatementNode; StatementExpressionList
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ statement ] Type [ Lcat.quadriga.parsers.code.statements.StatementNode; ]
  |  +- Symbol Var [ statements ] Type [ Ljava.util.List; ]
  |  +- Symbol Var [ treeString ] Type [ Ljava.lang.String; ]
  +- Code:
     +- Statements:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: statements [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: =
     |  +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ StatementExpression ] << [#unknown#]
     |     +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: statements [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     +- LABEL: label_43
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_43;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ StatementExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: statements [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_43;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |     +-    +- St: =
     |     +-    |  +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |     +-    |  +- Op: Proxy Call [#unknown#]
     |     +-    |     +- Op: >> Proxy Data Access [ StatementExpression ] << [#unknown#]
     |     +-    |     +- Arguments
     |     +-    +- St: Call
     |     +-       +- Op: Method:
     |     +-       |  +- java.util.List -> add
     |     +-       |  +- Op: Local variable access: statements [Ljava.util.List;]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: statement [Lcat.quadriga.parsers.code.statements.StatementNode;]
     |     <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ statement ] << [#unknown#]
     |  +- Op: Constructor [Lcat.quadriga.parsers.code.statements.StatementList;]
     |     +- Lcat.quadriga.parsers.code.statements.StatementList;
     |     +- Arguments
     |        +- Op: Proxy Call [#unknown#]
     |           +- Op: >> Proxy Data Access [ statements.toArray ] << [#unknown#]
     |           +- Arguments
     |              +- Op: new array [[Lcat.quadriga.parsers.code.statements.StatementNode;]
     |                 +- Lcat.quadriga.parsers.code.statements.StatementNode;
     |                 +- Op: Proxy Call [#unknown#]
     |                    +- Op: >> Proxy Data Access [ statements.size ] << [#unknown#]
     |                    +- Arguments
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: treeString [Ljava.lang.String;]
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ statement.treeStringRepresentation ] << [#unknown#]
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.addAll ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Proxy Call [#unknown#]
     |        +- Op: >> Proxy Data Access [ format ] << [#unknown#]
     |        |  +- Op: Call [Lcat.quadriga.parsers.code.printers.MegaPrinter;]
     |        |     +- Op: Method:
     |        |     |  +- cat.quadriga.parsers.code.printers.MegaPrinter -> getInstance
     |        |     +- Arguments
     |        +- Arguments
     |           +- Op: Local variable access: treeString [Ljava.lang.String;]
     +- Block:
     |  +- Local Variables:
     |  +- Code:
     |     +- If Statement:
     |        +- Condition:
     |        |  +- Op: Literal [Z]
     |        |     +- Boolean: true
     |        +- If Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- >> Proxy Statement: 
        +- throw ;
        <<
  final public ForUpdate
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ StatementExpressionList ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public BreakStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +- Op: Literal [Null type]
     |        +- Null
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ BREAK ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "break"
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Call
     |           |  +- Op: Method:
     |           |  |  +- java.util.List -> add
     |           |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |           |  +- Arguments
     |           |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |           |        +- Op: Method:
     |           |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |           |        +- Arguments
     |           +- St: Call
     |              +- Op: Method:
     |              |  +- java.util.List -> add
     |              |  +- Op: Local variable access: out [Ljava.util.List;]
     |              +- Arguments
     |                 +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |                    +- Lcat.quadriga.parsers.code.printers.PrintString;
     |                    +- Arguments
     |                       +- Op: Field: [Ljava.lang.String;]
     |                          +- cat.quadriga.parsers.Token -> image
     |                          +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public ContinueStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +- Op: Literal [Null type]
     |        +- Null
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ CONTINUE ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: =
     |  +-   +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-   +- Op: Proxy Call [#unknown#]
     |  +-      +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +- Arguments
     |  +-         +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "continue"
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Call
     |           |  +- Op: Method:
     |           |  |  +- java.util.List -> add
     |           |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |           |  +- Arguments
     |           |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |           |        +- Op: Method:
     |           |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |           |        +- Arguments
     |           +- St: Call
     |              +- Op: Method:
     |              |  +- java.util.List -> add
     |              |  +- Op: Local variable access: out [Ljava.util.List;]
     |              +- Arguments
     |                 +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |                    +- Lcat.quadriga.parsers.code.printers.PrintString;
     |                    +- Arguments
     |                       +- Op: Field: [Ljava.lang.String;]
     |                          +- cat.quadriga.parsers.Token -> image
     |                          +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public ReturnStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RETURN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "return"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public ThrowStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ other ] Type [ Ljava.util.List; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: other [Ljava.util.List;]
     |     +- Op: Constructor [Ljava.util.LinkedList;]
     |        +- Ljava.util.LinkedList;
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ THROW ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: other [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "throw"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> addAll
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Local variable access: other [Ljava.util.List;]
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ";"
  final public SynchronizedStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ SYNCHRONIZED ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "synchronized"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Expression ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: ")"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public TryStatement
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ TRY ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "try"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_44
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_44;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ CATCH ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: "catch"
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: "("
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ FormalParameter ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ")"
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_44;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ CATCH ] << [#unknown#]
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: "catch"
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: "("
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ FormalParameter ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    +- St: Proxy Call
     |     +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |     +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |     +-    |        +- Arguments
     |     +-    |           +- Op: Literal [Ljava.lang.String;]
     |     +-    |              +- String: ")"
     |     +-    +- St: Call
     |     +-    |  +- Op: Method:
     |     +-    |  |  +- java.util.List -> add
     |     +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |     +-    |  +- Arguments
     |     +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |     +-    |        +- Op: Method:
     |     +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |     +-    |        +- Arguments
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]
     |     <<
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ FINALLY ] << [#unknown#]
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
        +-         +- Op: Method:
        +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
        +-         +- Arguments
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-         +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-         +- Arguments
        +-            +- Op: Literal [Ljava.lang.String;]
        +-               +- String: "finally"
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
        +-         +- Op: Method:
        +-         |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
        +-         +- Arguments
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ Block ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: No operation
        +- }
        <<
  final public RUNSIGNEDSHIFT
  Params
  throws Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: && [Z]
     |  |     +- Op: == [Z]
     |  |     |  +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |  |     |  |  +- Op: Proxy Call [#unknown#]
     |  |     |  |     +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |  |     |  |     +- Arguments
     |  |     |  |        +- Op: Literal [I]
     |  |     |  |           +- Integer: 1
     |  |     |  +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  |     +- Op: == [Z]
     |  |        +- Op: >> Proxy Data Access [ realKind ] << [#unknown#]
     |  |        |  +- Op: cast Lcat.quadriga.parsers.tokens.MySimpleToken; [Lcat.quadriga.parsers.tokens.MySimpleToken;]
     |  |        |     +- Op: Proxy Call [#unknown#]
     |  |        |        +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |  |        |        +- Arguments
     |  |        |           +- Op: Literal [I]
     |  |        |              +- Integer: 1
     |  |        +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFT ] << [#unknown#]
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Proxy Call
     |           |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |           |  +- Arguments
     |           |     +- Op: - [I]
     |           |        +- Op: Literal [I]
     |           |           +- Integer: 1
     |           +- >> Proxy Statement: 
     |              +- throw ;
     |              <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +- Arguments
           +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
  final public RSIGNEDSHIFT
  Params
  throws Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: && [Z]
     |  |     +- Op: == [Z]
     |  |     |  +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |  |     |  |  +- Op: Proxy Call [#unknown#]
     |  |     |  |     +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |  |     |  |     +- Arguments
     |  |     |  |        +- Op: Literal [I]
     |  |     |  |           +- Integer: 1
     |  |     |  +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  |     +- Op: == [Z]
     |  |        +- Op: >> Proxy Data Access [ realKind ] << [#unknown#]
     |  |        |  +- Op: cast Lcat.quadriga.parsers.tokens.MySimpleToken; [Lcat.quadriga.parsers.tokens.MySimpleToken;]
     |  |        |     +- Op: Proxy Call [#unknown#]
     |  |        |        +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |  |        |        +- Arguments
     |  |        |           +- Op: Literal [I]
     |  |        |              +- Integer: 1
     |  |        +- Op: >> Proxy Data Access [ RSIGNEDSHIFT ] << [#unknown#]
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: Proxy Call
     |           |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |           |  +- Arguments
     |           |     +- Op: - [I]
     |           |        +- Op: Literal [I]
     |           |           +- Integer: 1
     |           +- >> Proxy Statement: 
     |              +- throw ;
     |              <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +- Arguments
           +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
  final public Annotation
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
        +- Condition:
        |  +- Op: Proxy Call [#unknown#]
        |     +- Op: >> Proxy Data Access [ jj_2_41 ] << [#unknown#]
        |     +- Arguments
        |        +- Op: Literal [I]
        |           +- Integer: 2147483647
        +- If Code:
        |  +- Block:
        |     +- Local Variables:
        |     +- Code:
        |        +- St: Proxy Call
        |           +- Op: >> Proxy Data Access [ NormalAnnotation ] << [#unknown#]
        |           +- Arguments
        |              +- Op: Local variable access: out [Ljava.util.List;]
        +- Else Code:
           +- If Statement:
              +- Condition:
              |  +- Op: Proxy Call [#unknown#]
              |     +- Op: >> Proxy Data Access [ jj_2_42 ] << [#unknown#]
              |     +- Arguments
              |        +- Op: Literal [I]
              |           +- Integer: 2147483647
              +- If Code:
              |  +- Block:
              |     +- Local Variables:
              |     +- Code:
              |        +- St: Proxy Call
              |           +- Op: >> Proxy Data Access [ SingleMemberAnnotation ] << [#unknown#]
              |           +- Arguments
              |              +- Op: >> Proxy Data Access [ out ] << [#unknown#]
              +- Else Code:
                 +- Block:
                    +- Local Variables:
                    +- Code:
                       +- >> Proxy Statement: 
                          +- switch() {
                          +- case :
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ MarkerAnnotation ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
                          +-   >> Proxy Statement: 
                          +-   +- break;
                          +-   <<
                          +- default:
                          +-   St: Proxy Call
                          +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
                          +-   +- Arguments
                          +-      +- Op: - [I]
                          +-         +- Op: Literal [I]
                          +-            +- Integer: 1
                          +-   >> Proxy Statement: 
                          +-   +- throw ;
                          +-   <<
                          +- }
                          <<
  final public NormalAnnotation
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "@"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |  +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ MemberValuePairs ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ")"
  final public MarkerAnnotation
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "@"
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
        +- Arguments
  final public SingleMemberAnnotation
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "@"
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ Name ] << [#unknown#]
     |  +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "("
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     +- St: Call
        +- Op: Method:
        |  +- java.util.List -> add
        |  +- Op: Local variable access: out [Ljava.util.List;]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: ")"
  final public MemberValuePairs
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ MemberValuePair ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: out [Ljava.util.List;]
     +- LABEL: label_45
        +- >> Proxy Statement: 
           +- while( )
           +- Block:
           +- +- Local Variables:
           +- +- Code:
           +-    +- >> Proxy Statement: 
           +-    |  +- switch() {
           +-    |  +- case :
           +-    |  +-   St: No operation
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break;
           +-    |  +-   <<
           +-    |  +- default:
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break label_45;
           +-    |  +-   <<
           +-    |  +- }
           +-    |  <<
           +-    +- St: Proxy Call
           +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
           +-    |  +- Arguments
           +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
           +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
           +-    |        +- Arguments
           +-    |           +- Op: Literal [Ljava.lang.String;]
           +-    |              +- String: ","
           +-    +- St: Proxy Call
           +-       +- Op: >> Proxy Data Access [ MemberValuePair ] << [#unknown#]
           +-       +- Arguments
           +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
           +- +- Local Variables:
           +- +- Code:
           +-    +- >> Proxy Statement: 
           +-    |  +- switch() {
           +-    |  +- case :
           +-    |  +-   St: No operation
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break;
           +-    |  +-   <<
           +-    |  +- default:
           +-    |  +-   >> Proxy Statement: 
           +-    |  +-   +- break label_45;
           +-    |  +-   <<
           +-    |  +- }
           +-    |  <<
           +-    +- St: Proxy Call
           +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
           +-    |  +- Arguments
           +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
           +-    |        +- Op: Method:
           +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
           +-    |        +- Arguments
           +-    +- St: Call
           +-    |  +- Op: Method:
           +-    |  |  +- java.util.List -> add
           +-    |  |  +- Op: Local variable access: out [Ljava.util.List;]
           +-    |  +- Arguments
           +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
           +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
           +-    |        +- Arguments
           +-    |           +- Op: Literal [Ljava.lang.String;]
           +-    |              +- String: ","
           +-    +- St: Proxy Call
           +-       +- Op: >> Proxy Data Access [ MemberValuePair ] << [#unknown#]
           +-       +- Arguments
           +-          +- Op: Local variable access: out [Ljava.util.List;]
           <<
  final public MemberValuePair
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "="
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public MemberValue
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ Annotation ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ MemberValueArrayInitializer ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ ConditionalExpression ] << [#unknown#]
        +-   +- Arguments
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: - [I]
        +-         +- Op: Literal [I]
        +-            +- Integer: 1
        +-   >> Proxy Statement: 
        +-   +- throw ;
        +-   <<
        +- }
        <<
  final public MemberValueArrayInitializer
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- >> Proxy Statement: 
     |  +- switch() {
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +- case :
     |  +-   St: Proxy Call
     |  +-   +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
     |  +-   +- Arguments
     |  +-      +- Op: Local variable access: out [Ljava.util.List;]
     |  +-   LABEL: label_46
     |  +-   +- >> Proxy Statement: 
     |  +-      +- while( )
     |  +-      +- Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_43 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_46;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-      +-    |        +- Arguments
     |  +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |  +-      +-    |              +- String: "}"
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]Block:
     |  +-      +- +- Local Variables:
     |  +-      +- +- Code:
     |  +-      +-    +- If Statement:
     |  +-      +-    |  +- Condition:
     |  +-      +-    |  |  +- Op: Proxy Call [#unknown#]
     |  +-      +-    |  |     +- Op: >> Proxy Data Access [ jj_2_43 ] << [#unknown#]
     |  +-      +-    |  |     +- Arguments
     |  +-      +-    |  |        +- Op: Literal [I]
     |  +-      +-    |  |           +- Integer: 2
     |  +-      +-    |  +- If Code:
     |  +-      +-    |  |  +- Block:
     |  +-      +-    |  |     +- Local Variables:
     |  +-      +-    |  |     +- Code:
     |  +-      +-    |  |        +- St: No operation
     |  +-      +-    |  +- Else Code:
     |  +-      +-    |     +- Block:
     |  +-      +-    |        +- Local Variables:
     |  +-      +-    |        +- Code:
     |  +-      +-    |           +- >> Proxy Statement: 
     |  +-      +-    |              +- break label_46;
     |  +-      +-    |              <<
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |  +-      +-    |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |  +-      +-    |        +- Arguments
     |  +-      +-    |           +- Op: Literal [Ljava.lang.String;]
     |  +-      +-    |              +- String: "}"
     |  +-      +-    +- St: Proxy Call
     |  +-      +-    |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +-      +-    |  +- Arguments
     |  +-      +-    |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |  +-      +-    |        +- Op: Method:
     |  +-      +-    |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |  +-      +-    |        +- Arguments
     |  +-      +-    +- St: Proxy Call
     |  +-      +-       +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
     |  +-      +-       +- Arguments
     |  +-      +-          +- Op: >> Proxy Data Access [ out ] << [#unknown#]
     |  +-      <<
     |  +-   >> Proxy Statement: 
     |  +-   +- switch() {
     |  +-   +- case :
     |  +-   +-   St: Proxy Call
     |  +-   +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +-   +-   +- Arguments
     |  +-   +-      +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +-   +-   >> Proxy Statement: 
     |  +-   +-   +- break;
     |  +-   +-   <<
     |  +-   +- default:
     |  +-   +-   St: No operation
     |  +-   +- }
     |  +-   <<
     |  +-   >> Proxy Statement: 
     |  +-   +- break;
     |  +-   <<
     |  +- default:
     |  +-   St: No operation
     |  +- }
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: "}"
  final public AnnotationTypeDeclaration
  Params
  modifiers: I
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ INTERFACE ] << [#unknown#]
     +- St: =
     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +- Op: Proxy Call [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |     +- Arguments
     |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "@"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "interface"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Field: [Ljava.lang.String;]
     |              +- cat.quadriga.parsers.Token -> image
     |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ AnnotationTypeBody ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  final public AnnotationTypeBody
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "{"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintInitTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintInitTab -> getInstance
     |        +- Arguments
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- LABEL: label_47
     |  +- >> Proxy Statement: 
     |     +- while( )
     |     +- Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_47;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ AnnotationTypeMemberDeclaration ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]Block:
     |     +- +- Local Variables:
     |     +- +- Code:
     |     +-    +- >> Proxy Statement: 
     |     +-    |  +- switch() {
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +- case :
     |     +-    |  +-   St: No operation
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break;
     |     +-    |  +-   <<
     |     +-    |  +- default:
     |     +-    |  +-   >> Proxy Statement: 
     |     +-    |  +-   +- break label_47;
     |     +-    |  +-   <<
     |     +-    |  +- }
     |     +-    |  <<
     |     +-    +- St: Proxy Call
     |     +-       +- Op: >> Proxy Data Access [ AnnotationTypeMemberDeclaration ] << [#unknown#]
     |     +-       +- Arguments
     |     +-          +- Op: Local variable access: out [Ljava.util.List;]
     |     <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintEndTab;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintEndTab -> getInstance
     |        +- Arguments
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintIntro;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintIntro -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ out.add ] << [#unknown#]
        +- Arguments
           +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
              +- Lcat.quadriga.parsers.code.printers.PrintString;
              +- Arguments
                 +- Op: Literal [Ljava.lang.String;]
                    +- String: "}"
  final public AnnotationTypeMemberDeclaration
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ modifiers ] Type [ I ]
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- Statements:
     +- >> Proxy Statement: 
        +- switch() {
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +- case :
        +-   St: =
        +-   +- Op: Local variable access: modifiers [I]
        +-   +- Op: Proxy Call [#unknown#]
        +-      +- Op: >> Proxy Data Access [ Modifiers ] << [#unknown#]
        +-      +- Arguments
        +-         +- Op: Local variable access: out [Ljava.util.List;]
        +-   If Statement:
        +-   +- Condition:
        +-   |  +- Op: Proxy Call [#unknown#]
        +-   |     +- Op: >> Proxy Data Access [ jj_2_44 ] << [#unknown#]
        +-   |     +- Arguments
        +-   |        +- Op: Literal [I]
        +-   |           +- Integer: 2147483647
        +-   +- If Code:
        +-   |  +- Block:
        +-   |     +- Local Variables:
        +-   |     +- Code:
        +-   |        +- St: Proxy Call
        +-   |        |  +- Op: >> Proxy Data Access [ Type ] << [#unknown#]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: Local variable access: out [Ljava.util.List;]
        +-   |        +- St: =
        +-   |        |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
        +-   |        |  +- Op: Proxy Call [#unknown#]
        +-   |        |     +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   |        |     +- Arguments
        +-   |        |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
        +-   |        +- St: Proxy Call
        +-   |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
        +-   |        +- St: Proxy Call
        +-   |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
        +-   |        +- St: Call
        +-   |        |  +- Op: Method:
        +-   |        |  |  +- java.util.List -> add
        +-   |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-   |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-   |        |        +- Arguments
        +-   |        |           +- Op: Field: [Ljava.lang.String;]
        +-   |        |              +- cat.quadriga.parsers.Token -> image
        +-   |        |              +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
        +-   |        +- St: Call
        +-   |        |  +- Op: Method:
        +-   |        |  |  +- java.util.List -> add
        +-   |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-   |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-   |        |        +- Arguments
        +-   |        |           +- Op: Literal [Ljava.lang.String;]
        +-   |        |              +- String: "("
        +-   |        +- St: Call
        +-   |        |  +- Op: Method:
        +-   |        |  |  +- java.util.List -> add
        +-   |        |  |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-   |        |        +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-   |        |        +- Arguments
        +-   |        |           +- Op: Literal [Ljava.lang.String;]
        +-   |        |              +- String: ")"
        +-   |        +- >> Proxy Statement: 
        +-   |        |  +- switch() {
        +-   |        |  +- case :
        +-   |        |  +-   St: Proxy Call
        +-   |        |  +-   +- Op: >> Proxy Data Access [ DefaultValue ] << [#unknown#]
        +-   |        |  +-   +- Arguments
        +-   |        |  +-      +- Op: Local variable access: out [Ljava.util.List;]
        +-   |        |  +-   >> Proxy Statement: 
        +-   |        |  +-   +- break;
        +-   |        |  +-   <<
        +-   |        |  +- default:
        +-   |        |  +-   St: No operation
        +-   |        |  +- }
        +-   |        |  <<
        +-   |        +- St: Proxy Call
        +-   |        |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   |        |  +- Arguments
        +-   |        |     +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
        +-   |        +- St: Call
        +-   |           +- Op: Method:
        +-   |           |  +- java.util.List -> add
        +-   |           |  +- Op: Local variable access: out [Ljava.util.List;]
        +-   |           +- Arguments
        +-   |              +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
        +-   |                 +- Lcat.quadriga.parsers.code.printers.PrintString;
        +-   |                 +- Arguments
        +-   |                    +- Op: Literal [Ljava.lang.String;]
        +-   |                       +- String: ";"
        +-   +- Else Code:
        +-      +- Block:
        +-         +- Local Variables:
        +-         +- Code:
        +-            +- >> Proxy Statement: 
        +-               +- switch() {
        +-               +- case :
        +-               +- case :
        +-               +-   St: Proxy Call
        +-               +-   +- Op: >> Proxy Data Access [ ClassOrInterfaceDeclaration ] << [#unknown#]
        +-               +-   +- Arguments
        +-               +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
        +-               +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
        +-               +-   >> Proxy Statement: 
        +-               +-   +- break;
        +-               +-   <<
        +-               +- case :
        +-               +-   St: Proxy Call
        +-               +-   +- Op: >> Proxy Data Access [ EnumDeclaration ] << [#unknown#]
        +-               +-   +- Arguments
        +-               +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
        +-               +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
        +-               +-   >> Proxy Statement: 
        +-               +-   +- break;
        +-               +-   <<
        +-               +- case :
        +-               +-   St: Proxy Call
        +-               +-   +- Op: >> Proxy Data Access [ AnnotationTypeDeclaration ] << [#unknown#]
        +-               +-   +- Arguments
        +-               +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
        +-               +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
        +-               +-   >> Proxy Statement: 
        +-               +-   +- break;
        +-               +-   <<
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +- case :
        +-               +-   St: Proxy Call
        +-               +-   +- Op: >> Proxy Data Access [ FieldDeclaration ] << [#unknown#]
        +-               +-   +- Arguments
        +-               +-      +- Op: >> Proxy Data Access [ modifiers ] << [#unknown#]
        +-               +-      +- Op: >> Proxy Data Access [ out ] << [#unknown#]
        +-               +-   >> Proxy Statement: 
        +-               +-   +- break;
        +-               +-   <<
        +-               +- default:
        +-               +-   St: Proxy Call
        +-               +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-               +-   +- Arguments
        +-               +-      +- Op: - [I]
        +-               +-         +- Op: Literal [I]
        +-               +-            +- Integer: 1
        +-               +-   >> Proxy Statement: 
        +-               +-   +- throw ;
        +-               +-   <<
        +-               +- }
        +-               <<
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- case :
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
        +-   >> Proxy Statement: 
        +-   +- break;
        +-   <<
        +- default:
        +-   St: Proxy Call
        +-   +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
        +-   +- Arguments
        +-      +- Op: - [I]
        +-         +- Op: Literal [I]
        +-            +- Integer: 1
        +-   >> Proxy Statement: 
        +-   +- throw ;
        +-   <<
        +- }
        <<
  final public DefaultValue
  Params
  out: Ljava.util.List;
  throws Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_consume_token ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ _DEFAULT ] << [#unknown#]
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Constructor [Lcat.quadriga.parsers.code.printers.PrintString;]
     |        +- Lcat.quadriga.parsers.code.printers.PrintString;
     |        +- Arguments
     |           +- Op: Literal [Ljava.lang.String;]
     |              +- String: "default"
     +- St: Call
     |  +- Op: Method:
     |  |  +- java.util.List -> add
     |  |  +- Op: Local variable access: out [Ljava.util.List;]
     |  +- Arguments
     |     +- Op: Call [Lcat.quadriga.parsers.code.printers.PrintWhiteSpace;]
     |        +- Op: Method:
     |        |  +- cat.quadriga.parsers.code.printers.PrintWhiteSpace -> getInstance
     |        +- Arguments
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ MemberValue ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: out [Ljava.util.List;]
  private Z jj_2_1
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_2
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_3
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_4
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_5
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_6
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_7
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_8
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_9
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_10
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_11
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_12
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_13
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_14
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_15
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_16
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_17
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_18
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_19
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_20
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_21
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_22
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_23
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_24
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_25
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_26
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_27
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_28
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_29
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_30
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_31
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_32
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_33
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_34
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_35
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_36
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_37
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_38
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_39
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_40
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_41
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_42
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_43
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_2_44
  Params
  xla: I
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  +- Op: Local variable access: xla [I]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- Op: = [#unknown#]
     |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
        +- try 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       << catch() 
        +- Block:
        +- +- Local Variables:
        +- +- Code:
        +-    +- >> Proxy Statement: 
        +-       +- return ;
        +-       <<
        <<
  private Z jj_3R_319
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_328 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_328 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_110
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_109
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LSHIFTASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_108
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ MINUSASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_107
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PLUSASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_106
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ REMASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_105
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SLASHASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_166
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_104
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STARASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_103
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_70
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_103 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_104 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_105 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_106 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_107 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_108 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_109 ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_110 ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      +- If Code:
     |                                                                                         +- Block:
     |                                                                                            +- Local Variables:
     |                                                                                            +- Code:
     |                                                                                               +- St: =
     |                                                                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                               +- If Statement:
     |                                                                                                  +- Condition:
     |                                                                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                                                                  |     +- Op: >> Proxy Data Access [ jj_3R_111 ] << [#unknown#]
     |                                                                                                  |     +- Arguments
     |                                                                                                  +- If Code:
     |                                                                                                     +- Block:
     |                                                                                                        +- Local Variables:
     |                                                                                                        +- Code:
     |                                                                                                           +- St: =
     |                                                                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                           +- If Statement:
     |                                                                                                              +- Condition:
     |                                                                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                                                                              |     +- Op: >> Proxy Data Access [ jj_3R_112 ] << [#unknown#]
     |                                                                                                              |     +- Arguments
     |                                                                                                              +- If Code:
     |                                                                                                                 +- Block:
     |                                                                                                                    +- Local Variables:
     |                                                                                                                    +- Code:
     |                                                                                                                       +- St: =
     |                                                                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                       +- If Statement:
     |                                                                                                                          +- Condition:
     |                                                                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_113 ] << [#unknown#]
     |                                                                                                                          |     +- Arguments
     |                                                                                                                          +- If Code:
     |                                                                                                                             +- Block:
     |                                                                                                                                +- Local Variables:
     |                                                                                                                                +- Code:
     |                                                                                                                                   +- St: =
     |                                                                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                   +- If Statement:
     |                                                                                                                                      +- Condition:
     |                                                                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_114 ] << [#unknown#]
     |                                                                                                                                      |     +- Arguments
     |                                                                                                                                      +- If Code:
     |                                                                                                                                         +- >> Proxy Statement: 
     |                                                                                                                                            +- return ;
     |                                                                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_154
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_166 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_166 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_301
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INTERFACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_319 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_285
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_147
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_154 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_282
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_285 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_285 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_285 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_137 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_134
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_147 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_17
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_70 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_35
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_71
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_115 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_17 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_43
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_87 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_198
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_87 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_43 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_43 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 87
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_34
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_36
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_34 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_34 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_34 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_35 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_35 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_135
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_134 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_143
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_198 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_278
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_36 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_282 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_130
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_115 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_89
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_134 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_135 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_135 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_129
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_143 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_128
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_88 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_87
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_128 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_129 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_130 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_338
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_286 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_337
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_99 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_334
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_61
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_337 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_338 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_175
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_87 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_325
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_334 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_334 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_284
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_283
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_286 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_331
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_289 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_176
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_175 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_323
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_331 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_331 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_281
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_99 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_283 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_284 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_165
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_175 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_176 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_176 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_16
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_280
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_278 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_3
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_61 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_85
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_16 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_16 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_279
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_69 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_322
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_61 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_3 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_3 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_127
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ NEW ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_279 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_280 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_281 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_33
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ NEW ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_76 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_278 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_306
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_322 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 87
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_323 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_81
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_33 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_127 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_126
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_145
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_87 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_125
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ VOID ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_305
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_321 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_80
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_125 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_126 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_146
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_86
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_297
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ENUM ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_305 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_306 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_150
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_153
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_165 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_138
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_150 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_150 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_99
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_138 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_42
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_144
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_153 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_330
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_41
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ AT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_86 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 81
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_133
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_146 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_321
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IMPLEMENTS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_330 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_330 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_76
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 14
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 19
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                          |     +- Arguments
     |                          |        +- Op: Literal [I]
     |                          |           +- Integer: 16
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      |        +- Op: Literal [I]
     |                                      |           +- Integer: 50
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  |        +- Op: Literal [I]
     |                                                  |           +- Integer: 39
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              |        +- Op: Literal [I]
     |                                                              |           +- Integer: 41
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          |        +- Op: Literal [I]
     |                                                                          |           +- Integer: 32
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      |        +- Op: Literal [I]
     |                                                                                      |           +- Integer: 25
     |                                                                                      +- If Code:
     |                                                                                         +- >> Proxy Statement: 
     |                                                                                            +- return ;
     |                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_132
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_145 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_174
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ NULL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_131
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_144 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_116
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_88
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_131 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_132 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_133 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_117
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_329
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_214
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_68 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_73
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lookingAhead ] << [#unknown#]
     |  +- Op: Literal [Z]
     |     +- Boolean: true
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_semLA ] << [#unknown#]
     |  +- Op: && [Z]
     |     +- Op: == [Z]
     |     |  +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |     |  |  +- Op: Proxy Call [#unknown#]
     |     |  |     +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |     |  |     +- Arguments
     |     |  |        +- Op: Literal [I]
     |     |  |           +- Integer: 1
     |     |  +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |     +- Op: == [Z]
     |        +- Op: >> Proxy Data Access [ realKind ] << [#unknown#]
     |        |  +- Op: cast Lcat.quadriga.parsers.tokens.MySimpleToken; [Lcat.quadriga.parsers.tokens.MySimpleToken;]
     |        |     +- Op: Proxy Call [#unknown#]
     |        |        +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |        |        +- Arguments
     |        |           +- Op: Literal [I]
     |        |              +- Integer: 1
     |        +- Op: >> Proxy Data Access [ RSIGNEDSHIFT ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lookingAhead ] << [#unknown#]
     |  +- Op: Literal [Z]
     |     +- Boolean: false
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: || [Z]
     |  |     +- Op: ! [Z]
     |  |     |  +- Op: >> Proxy Data Access [ jj_semLA ] << [#unknown#]
     |  |     +- Op: Proxy Call [#unknown#]
     |  |        +- Op: >> Proxy Data Access [ jj_3R_116 ] << [#unknown#]
     |  |        +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_213
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_68 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_197
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FALSE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_193
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_213 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_214 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_320
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ EXTENDS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_329 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_329 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_196
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ TRUE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_74
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lookingAhead ] << [#unknown#]
     |  +- Op: Literal [Z]
     |     +- Boolean: true
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_semLA ] << [#unknown#]
     |  +- Op: && [Z]
     |     +- Op: == [Z]
     |     |  +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |     |  |  +- Op: Proxy Call [#unknown#]
     |     |  |     +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |     |  |     +- Arguments
     |     |  |        +- Op: Literal [I]
     |     |  |           +- Integer: 1
     |     |  +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |     +- Op: == [Z]
     |        +- Op: >> Proxy Data Access [ realKind ] << [#unknown#]
     |        |  +- Op: cast Lcat.quadriga.parsers.tokens.MySimpleToken; [Lcat.quadriga.parsers.tokens.MySimpleToken;]
     |        |     +- Op: Proxy Call [#unknown#]
     |        |        +- Op: >> Proxy Data Access [ getToken ] << [#unknown#]
     |        |        +- Arguments
     |        |           +- Op: Literal [I]
     |        |              +- Integer: 1
     |        +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFT ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_lookingAhead ] << [#unknown#]
     |  +- Op: Literal [Z]
     |     +- Boolean: false
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: || [Z]
     |  |     +- Op: ! [Z]
     |  |     |  +- Op: >> Proxy Data Access [ jj_semLA ] << [#unknown#]
     |  |     +- Op: Proxy Call [#unknown#]
     |  |        +- Op: >> Proxy Data Access [ jj_3R_117 ] << [#unknown#]
     |  |        +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_173
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_196 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_197 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_304
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_321 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_170
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_193 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_303
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_320 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_192
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INTERFACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_302
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_89 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_140
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ HOOK ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_170 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_164
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_174 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_139
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_68 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_163
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_173 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_358
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FINALLY ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_102
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_139 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_140 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_169
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 20
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_192 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_302 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_303 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_304 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_286 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_162
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STRING_LITERAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_161
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CHARACTER_LITERAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_149
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_102 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_357
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CATCH ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_332 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_160
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FLOATING_POINT_LITERAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_69
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_102 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_149 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_149 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_159
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INTEGER_LITERAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_152
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_159 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_160 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_161 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_162 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_163 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_164 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- >> Proxy Statement: 
     |                                                                    +- return ;
     |                                                                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_212
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ TRY ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_357 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_357 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_358 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_211
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SYNCHRONIZED ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_124
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_99 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_60
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_88 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_59
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STRICTFP ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_123
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_210
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THROW ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_15
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_69 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_58
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ VOLATILE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_14
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_15 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_356
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_122
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_57
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ TRANSIENT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_13
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_69 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_32
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_82 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_30
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_209
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RETURN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_356 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_31
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_81 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_56
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ NATIVE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_79
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_13 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_14 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_14 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_29
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_121
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_55
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SYNCHRONIZED ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_120
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_208
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CONTINUE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 77
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_54
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ABSTRACT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_12
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_77
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_120 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_121 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3_31 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3_32 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_122 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_123 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_124 ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          +- If Code:
     |                                                                             +- >> Proxy Statement: 
     |                                                                                +- return ;
     |                                                                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_101
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_12 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_12 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_53
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_11
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_100
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_76 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_11 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_11 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_11 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_52
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PRIVATE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_68
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_100 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_101 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_28
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_80 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CLASS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_207
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ BREAK ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 77
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_238
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_85 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_51
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PROTECTED ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_371
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_374 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_27
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_90
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_76 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_237
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_80 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CLASS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_50
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_10
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_68 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_236
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_81 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_235
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_63
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_10 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_90 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_49
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PUBLIC ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_234
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_79 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_2
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_49 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_50 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_51 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_52 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_53 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_54 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_55 ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_56 ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      +- If Code:
     |                                                                                         +- Block:
     |                                                                                            +- Local Variables:
     |                                                                                            +- Code:
     |                                                                                               +- St: =
     |                                                                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                               +- If Statement:
     |                                                                                                  +- Condition:
     |                                                                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                                                                  |     +- Op: >> Proxy Data Access [ jj_3R_57 ] << [#unknown#]
     |                                                                                                  |     +- Arguments
     |                                                                                                  +- If Code:
     |                                                                                                     +- Block:
     |                                                                                                        +- Local Variables:
     |                                                                                                        +- Code:
     |                                                                                                           +- St: =
     |                                                                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                           +- If Statement:
     |                                                                                                              +- Condition:
     |                                                                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                                                                              |     +- Op: >> Proxy Data Access [ jj_3R_58 ] << [#unknown#]
     |                                                                                                              |     +- Arguments
     |                                                                                                              +- If Code:
     |                                                                                                                 +- Block:
     |                                                                                                                    +- Local Variables:
     |                                                                                                                    +- Code:
     |                                                                                                                       +- St: =
     |                                                                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                       +- If Statement:
     |                                                                                                                          +- Condition:
     |                                                                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_59 ] << [#unknown#]
     |                                                                                                                          |     +- Arguments
     |                                                                                                                          +- If Code:
     |                                                                                                                             +- Block:
     |                                                                                                                                +- Local Variables:
     |                                                                                                                                +- Code:
     |                                                                                                                                   +- St: =
     |                                                                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                   +- If Statement:
     |                                                                                                                                      +- Condition:
     |                                                                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_60 ] << [#unknown#]
     |                                                                                                                                      |     +- Arguments
     |                                                                                                                                      +- If Code:
     |                                                                                                                                         +- >> Proxy Statement: 
     |                                                                                                                                            +- return ;
     |                                                                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_84
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_2 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_2 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_375
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_201 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_233
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_374
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_201 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_375 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_375 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_91
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STATIC ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_65
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_91 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_40
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_78
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_26
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_78 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_78 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_373
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_374 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_98
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SUPER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_372
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_167 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_370
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_372 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_373 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_97
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_241
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_96
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_69 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_232
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_241 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_241 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_231
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_152 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_9
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_142
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_152 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_228
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_231 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_232 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_233 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_234 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_235 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_236 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_237 ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_238 ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      +- If Code:
     |                                                                                         +- >> Proxy Statement: 
     |                                                                                            +- return ;
     |                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_367
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_371 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_95
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_67
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_95 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_95 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_9 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_96 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_97 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_98 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_99 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_366
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_277
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DECR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_365
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_370 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_355
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_365 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_366 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_367 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_82
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DOT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_69 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_39
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_354
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_8
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_67 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_25
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_77 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_223
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_228 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_25 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_25 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_311
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_148 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_24
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_76 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_310
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_67 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_206
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FOR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_354 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_355 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_274
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_259 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_48
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_88 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_273
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_247 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_1
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_48 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_48 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PACKAGE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_271
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_273 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_274 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_309
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THROWS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_325 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_276
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INCR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_205
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DO ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ WHILE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_275
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_276 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_277 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_272
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_223 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_275 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_23
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_307
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_89 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_298
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_307 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_308 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_309 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_310 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_311 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_311 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_119
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 93
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 92
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                          |     +- Arguments
     |                          |        +- Op: Literal [I]
     |                          |           +- Integer: 80
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      |        +- Op: Literal [I]
     |                                      |           +- Integer: 77
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  |        +- Op: Literal [I]
     |                                                  |           +- Integer: 56
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              |        +- Op: Literal [I]
     |                                                              |           +- Integer: 53
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          |        +- Op: Literal [I]
     |                                                                          |           +- Integer: 43
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_142 ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      +- If Code:
     |                                                                                         +- >> Proxy Statement: 
     |                                                                                            +- return ;
     |                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_118
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_204
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ WHILE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_75
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_22 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_118 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_119 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_22
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_76 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_21
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_75 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_353
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ELSE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_265
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_272 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_264
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_271 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_340
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ELLIPSIS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_270
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ BANG ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_269
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ TILDE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_263
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_269 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_270 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_247 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_203
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IF ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_353 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_344
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_88 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_259
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_263 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_264 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_265 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_343
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ FINAL ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_339
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_343 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_344 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_332
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_339 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_340 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_326 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_227
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ DECR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_223 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_369
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ _DEFAULT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_368
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ CASE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_363
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_368 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_369 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_333
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_332 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_226
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INCR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_223 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_324
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_332 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_333 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_333 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_308
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_324 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_255
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_259 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_254
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_227 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_253
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_226 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_364
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_148 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_258
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ MINUS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_257
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PLUS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_252
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_257 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_258 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_247 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_247
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_252 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_253 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_254 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_255 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- >> Proxy Statement: 
     |                                            +- return ;
     |                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_352
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_363 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_364 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_364 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_268
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ REM ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_267
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SLASH ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_266
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ STAR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_202
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SWITCH ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_352 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_352 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_260
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_266 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_267 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_268 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_247 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_315
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_308 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_245
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_247 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_260 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_260 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_362
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_361
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_70 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_318
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_262
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ MINUS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_261
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ PLUS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_317
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_256
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_261 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_262 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_245 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_360
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 102
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 103
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_240
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_245 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_256 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_256 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_316
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ THROWS ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_325 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_218
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_223 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_360 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_361 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_362 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_222
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_227 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_221
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_226 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_217
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_221 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_222 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_314
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_89 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_201
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_217 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_218 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_300
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_314 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_80 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_315 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_316 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_317 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_318 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_20
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_74 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_19
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_73 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_72
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LSHIFT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_18
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_72 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3_19 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3_20 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_240 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_230
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_240 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_18 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_18 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_200
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_251
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_250
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_7
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_66 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_249
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ GT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_248
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_246
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_248 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_249 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_250 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_251 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- >> Proxy Statement: 
     |                                            +- return ;
     |                                            <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_230 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_287
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_66 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_7 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3_7 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_225
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_230 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_246 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_246 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_342
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_312 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_137
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_287 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 87
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_167
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_312 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_342 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_342 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_94
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_93
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_137 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_242
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ INSTANCEOF ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_66
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_93 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_94 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_220
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_225 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_242 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_38
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_157
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_169 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_335
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_156
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_244
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ NE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_155
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_167 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_243
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ EQ ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_239
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_243 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_244 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_220 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_148
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_155 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_156 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_157 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_326
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_335 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_335 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_216
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_220 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_239 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_239 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_327
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_66 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_229
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ BIT_AND ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_216 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_195
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_216 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_229 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_229 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_136
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_148 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_92
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_136 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_136 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_312
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_326 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_327 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_224
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ XOR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_195 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_64
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACKET ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_172
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_195 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_224 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_224 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_83
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_168 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_313
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COMMA ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_312 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_219
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ BIT_OR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_172 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_158
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_172 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_219 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_219 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_299
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_312 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_313 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_313 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_5
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_64 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_64 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: Literal [I]
     |  |           +- Integer: 87
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 90
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: >> Proxy Data Access [ xsp ] << [#unknown#]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                          |     +- Arguments
     |                          |        +- Op: Literal [I]
     |                          |           +- Integer: 86
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_62
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_89 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_4
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_62 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_296
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_301 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_295
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_300 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_351
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_294
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_299 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_215
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SC_AND ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_158 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_293
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_298 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_151
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_158 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_215 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_215 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_292
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_297 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_359
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ _DEFAULT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_87 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_291
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_169 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_199
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ASSERT ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_351 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_349
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_299 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_290
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_291 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_292 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_293 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_294 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_295 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_296 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- >> Proxy Statement: 
     |                                                                    +- return ;
     |                                                                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_348
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_301 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_347
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_297 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_194
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SC_OR ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_151 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_346
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_169 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_6
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_65 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_191
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_212 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_141
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_151 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_194 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_194 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_44
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_350
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_359 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_190
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_211 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_289
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_6 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_290 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |                          |     +- Arguments
     |                          |        +- Op: Literal [I]
     |                          |           +- Integer: 86
     |                          +- If Code:
     |                             +- >> Proxy Statement: 
     |                                +- return ;
     |                                <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_189
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_210 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_188
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_209 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_187
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_208 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_186
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_207 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_345
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_63 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ IDENTIFIER ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RPAREN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_350 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_185
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_206 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_184
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_205 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_341
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_84 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_345 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_346 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_347 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_348 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_349 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- >> Proxy Statement: 
     |                                                        +- return ;
     |                                                        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_336
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_341 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |              |     +- Arguments
     |              |        +- Op: Literal [I]
     |              |           +- Integer: 86
     |              +- If Code:
     |                 +- >> Proxy Statement: 
     |                    +- return ;
     |                    <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_171
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ HOOK ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ COLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_71 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_183
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_204 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_182
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_203 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_115
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_141 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_171 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_181
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_202 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_288
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_289 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_180
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_201 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ SEMICOLON ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_179
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_200 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_178
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_92 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_328
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_336 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_177
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_199 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_286
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ LBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- Statements:
     +- >> Proxy Statement: 
     |  +- while( )
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_288 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: =
     |  +-    |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-    |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: Proxy Call [#unknown#]
     |  +-       |     +- Op: >> Proxy Data Access [ jj_3R_288 ] << [#unknown#]
     |  +-       |     +- Arguments
     |  +-       +- If Code:
     |  +-          +- Block:
     |  +-             +- Local Variables:
     |  +-             +- Code:
     |  +-                +- St: =
     |  +-                |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  +-                |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +-                +- >> Proxy Statement: 
     |  +-                   +- break;
     |  +-                   <<
     |  <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RBRACE ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_114
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ORASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3_37
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3R_83 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_113
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ XORASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_112
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ ANDASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_111
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_scan_token ] << [#unknown#]
     |  |     +- Arguments
     |  |        +- Op: >> Proxy Data Access [ RUNSIGNEDSHIFTASSIGN ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private Z jj_3R_168
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ xsp ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- St: =
     |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: Proxy Call [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_3_37 ] << [#unknown#]
     |  |     +- Arguments
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |           +- If Statement:
     |              +- Condition:
     |              |  +- Op: Proxy Call [#unknown#]
     |              |     +- Op: >> Proxy Data Access [ jj_3R_177 ] << [#unknown#]
     |              |     +- Arguments
     |              +- If Code:
     |                 +- Block:
     |                    +- Local Variables:
     |                    +- Code:
     |                       +- St: =
     |                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                       +- If Statement:
     |                          +- Condition:
     |                          |  +- Op: Proxy Call [#unknown#]
     |                          |     +- Op: >> Proxy Data Access [ jj_3R_178 ] << [#unknown#]
     |                          |     +- Arguments
     |                          +- If Code:
     |                             +- Block:
     |                                +- Local Variables:
     |                                +- Code:
     |                                   +- St: =
     |                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                   +- If Statement:
     |                                      +- Condition:
     |                                      |  +- Op: Proxy Call [#unknown#]
     |                                      |     +- Op: >> Proxy Data Access [ jj_3R_179 ] << [#unknown#]
     |                                      |     +- Arguments
     |                                      +- If Code:
     |                                         +- Block:
     |                                            +- Local Variables:
     |                                            +- Code:
     |                                               +- St: =
     |                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                               +- If Statement:
     |                                                  +- Condition:
     |                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                  |     +- Op: >> Proxy Data Access [ jj_3R_180 ] << [#unknown#]
     |                                                  |     +- Arguments
     |                                                  +- If Code:
     |                                                     +- Block:
     |                                                        +- Local Variables:
     |                                                        +- Code:
     |                                                           +- St: =
     |                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                           +- If Statement:
     |                                                              +- Condition:
     |                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                              |     +- Op: >> Proxy Data Access [ jj_3R_181 ] << [#unknown#]
     |                                                              |     +- Arguments
     |                                                              +- If Code:
     |                                                                 +- Block:
     |                                                                    +- Local Variables:
     |                                                                    +- Code:
     |                                                                       +- St: =
     |                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                       +- If Statement:
     |                                                                          +- Condition:
     |                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_182 ] << [#unknown#]
     |                                                                          |     +- Arguments
     |                                                                          +- If Code:
     |                                                                             +- Block:
     |                                                                                +- Local Variables:
     |                                                                                +- Code:
     |                                                                                   +- St: =
     |                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                   +- If Statement:
     |                                                                                      +- Condition:
     |                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_183 ] << [#unknown#]
     |                                                                                      |     +- Arguments
     |                                                                                      +- If Code:
     |                                                                                         +- Block:
     |                                                                                            +- Local Variables:
     |                                                                                            +- Code:
     |                                                                                               +- St: =
     |                                                                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                               +- If Statement:
     |                                                                                                  +- Condition:
     |                                                                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                                                                  |     +- Op: >> Proxy Data Access [ jj_3R_184 ] << [#unknown#]
     |                                                                                                  |     +- Arguments
     |                                                                                                  +- If Code:
     |                                                                                                     +- Block:
     |                                                                                                        +- Local Variables:
     |                                                                                                        +- Code:
     |                                                                                                           +- St: =
     |                                                                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                           +- If Statement:
     |                                                                                                              +- Condition:
     |                                                                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                                                                              |     +- Op: >> Proxy Data Access [ jj_3R_185 ] << [#unknown#]
     |                                                                                                              |     +- Arguments
     |                                                                                                              +- If Code:
     |                                                                                                                 +- Block:
     |                                                                                                                    +- Local Variables:
     |                                                                                                                    +- Code:
     |                                                                                                                       +- St: =
     |                                                                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                       +- If Statement:
     |                                                                                                                          +- Condition:
     |                                                                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_186 ] << [#unknown#]
     |                                                                                                                          |     +- Arguments
     |                                                                                                                          +- If Code:
     |                                                                                                                             +- Block:
     |                                                                                                                                +- Local Variables:
     |                                                                                                                                +- Code:
     |                                                                                                                                   +- St: =
     |                                                                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                   +- If Statement:
     |                                                                                                                                      +- Condition:
     |                                                                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_187 ] << [#unknown#]
     |                                                                                                                                      |     +- Arguments
     |                                                                                                                                      +- If Code:
     |                                                                                                                                         +- Block:
     |                                                                                                                                            +- Local Variables:
     |                                                                                                                                            +- Code:
     |                                                                                                                                               +- St: =
     |                                                                                                                                               |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                               |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                               +- If Statement:
     |                                                                                                                                                  +- Condition:
     |                                                                                                                                                  |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                                  |     +- Op: >> Proxy Data Access [ jj_3R_188 ] << [#unknown#]
     |                                                                                                                                                  |     +- Arguments
     |                                                                                                                                                  +- If Code:
     |                                                                                                                                                     +- Block:
     |                                                                                                                                                        +- Local Variables:
     |                                                                                                                                                        +- Code:
     |                                                                                                                                                           +- St: =
     |                                                                                                                                                           |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                                           |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                                           +- If Statement:
     |                                                                                                                                                              +- Condition:
     |                                                                                                                                                              |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                                              |     +- Op: >> Proxy Data Access [ jj_3R_189 ] << [#unknown#]
     |                                                                                                                                                              |     +- Arguments
     |                                                                                                                                                              +- If Code:
     |                                                                                                                                                                 +- Block:
     |                                                                                                                                                                    +- Local Variables:
     |                                                                                                                                                                    +- Code:
     |                                                                                                                                                                       +- St: =
     |                                                                                                                                                                       |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                                                       |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                                                       +- If Statement:
     |                                                                                                                                                                          +- Condition:
     |                                                                                                                                                                          |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                                                          |     +- Op: >> Proxy Data Access [ jj_3R_190 ] << [#unknown#]
     |                                                                                                                                                                          |     +- Arguments
     |                                                                                                                                                                          +- If Code:
     |                                                                                                                                                                             +- Block:
     |                                                                                                                                                                                +- Local Variables:
     |                                                                                                                                                                                +- Code:
     |                                                                                                                                                                                   +- St: =
     |                                                                                                                                                                                   |  +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |                                                                                                                                                                                   |  +- Op: Local variable access: xsp [Lcat.quadriga.parsers.Token;]
     |                                                                                                                                                                                   +- If Statement:
     |                                                                                                                                                                                      +- Condition:
     |                                                                                                                                                                                      |  +- Op: Proxy Call [#unknown#]
     |                                                                                                                                                                                      |     +- Op: >> Proxy Data Access [ jj_3R_191 ] << [#unknown#]
     |                                                                                                                                                                                      |     +- Arguments
     |                                                                                                                                                                                      +- If Code:
     |                                                                                                                                                                                         +- >> Proxy Statement: 
     |                                                                                                                                                                                            +- return ;
     |                                                                                                                                                                                            <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  public Lcat.quadriga.parsers.QuadrigaSimpleTokenManager; ;
  Lcat.quadriga.parsers.JavaCharStream; ;
  public Lcat.quadriga.parsers.Token; ;
  public Lcat.quadriga.parsers.Token; ;
  private I ;
  private Lcat.quadriga.parsers.Token; ;
  private I ;
  private Z ;
  private Z ;
  public QuadrigaSimple
  Params
  stream: Ljava.io.InputStream;
  {
    this;
  }
  public QuadrigaSimple
  Params
  stream: Ljava.io.InputStream;
  encoding: Ljava.lang.String;
  {
    >> Proxy Statement: 
    +- try 
    +- Block:
    +- +- Local Variables:
    +- +- Code:
    +-    +- St: =
    +-       +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]
    +-       +- Op: Constructor [Lcat.quadriga.parsers.JavaCharStream;]
    +-          +- Lcat.quadriga.parsers.JavaCharStream;
    +-          +- Arguments
    +-             +- Op: Local variable access: stream [Ljava.io.InputStream;]
    +-             +- Op: Local variable access: encoding [Ljava.lang.String;]
    +-             +- Op: Literal [I]
    +-             |  +- Integer: 1
    +-             +- Op: Literal [I]
    +-                +- Integer: 1 catch() 
    +- Block:
    +- +- Local Variables:
    +- +- Code:
    +-    +- >> Proxy Statement: 
    +-       +- throw ;
    +-       <<
    <<St: =
    +- Op: >> Proxy Data Access [ token_source ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;]
       +- Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;
       +- Arguments
          +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]St: =
    +- Op: >> Proxy Data Access [ token ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.Token;]
       +- Lcat.quadriga.parsers.Token;
       +- ArgumentsSt: =
    +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
    +- Op: - [I]
       +- Op: Literal [I]
          +- Integer: 1
  }
  public ReInit
  Params
  stream: Ljava.io.InputStream;
  Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
        +- Op: >> Proxy Data Access [ ReInit ] << [#unknown#]
        +- Arguments
           +- Op: Local variable access: stream [Ljava.io.InputStream;]
           +- Op: Literal [Null type]
              +- Null
  public ReInit
  Params
  stream: Ljava.io.InputStream;
  encoding: Ljava.lang.String;
  Block:
  +- Local Variables:
  +- Code:
     +- >> Proxy Statement: 
     |  +- try 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- St: Proxy Call
     |  +-       +- Op: >> Proxy Data Access [ jj_input_stream.ReInit ] << [#unknown#]
     |  +-       +- Arguments
     |  +-          +- Op: Local variable access: stream [Ljava.io.InputStream;]
     |  +-          +- Op: Local variable access: encoding [Ljava.lang.String;]
     |  +-          +- Op: Literal [I]
     |  +-          |  +- Integer: 1
     |  +-          +- Op: Literal [I]
     |  +-             +- Integer: 1 catch() 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- >> Proxy Statement: 
     |  +-       +- throw ;
     |  +-       <<
     |  <<
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ token_source.ReInit ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  +- Op: Constructor [Lcat.quadriga.parsers.Token;]
     |     +- Lcat.quadriga.parsers.Token;
     |     +- Arguments
     +- St: =
        +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
        +- Op: - [I]
           +- Op: Literal [I]
              +- Integer: 1
  public QuadrigaSimple
  Params
  stream: Ljava.io.Reader;
  {
    St: =
    +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.JavaCharStream;]
       +- Lcat.quadriga.parsers.JavaCharStream;
       +- Arguments
          +- Op: Local variable access: stream [Ljava.io.Reader;]
          +- Op: Literal [I]
          |  +- Integer: 1
          +- Op: Literal [I]
             +- Integer: 1St: =
    +- Op: >> Proxy Data Access [ token_source ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;]
       +- Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;
       +- Arguments
          +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]St: =
    +- Op: >> Proxy Data Access [ token ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.Token;]
       +- Lcat.quadriga.parsers.Token;
       +- ArgumentsSt: =
    +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
    +- Op: - [I]
       +- Op: Literal [I]
          +- Integer: 1
  }
  public ReInit
  Params
  stream: Ljava.io.Reader;
  Block:
  +- Local Variables:
  +- Code:
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ jj_input_stream.ReInit ] << [#unknown#]
     |  +- Arguments
     |     +- Op: Local variable access: stream [Ljava.io.Reader;]
     |     +- Op: Literal [I]
     |     |  +- Integer: 1
     |     +- Op: Literal [I]
     |        +- Integer: 1
     +- St: Proxy Call
     |  +- Op: >> Proxy Data Access [ token_source.ReInit ] << [#unknown#]
     |  +- Arguments
     |     +- Op: >> Proxy Data Access [ jj_input_stream ] << [#unknown#]
     +- St: =
     |  +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  +- Op: Constructor [Lcat.quadriga.parsers.Token;]
     |     +- Lcat.quadriga.parsers.Token;
     |     +- Arguments
     +- St: =
        +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
        +- Op: - [I]
           +- Op: Literal [I]
              +- Integer: 1
  public QuadrigaSimple
  Params
  tm: Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;
  {
    St: =
    +- Op: >> Proxy Data Access [ token_source ] << [#unknown#]
    +- Op: Local variable access: tm [Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;]St: =
    +- Op: >> Proxy Data Access [ token ] << [#unknown#]
    +- Op: Constructor [Lcat.quadriga.parsers.Token;]
       +- Lcat.quadriga.parsers.Token;
       +- ArgumentsSt: =
    +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
    +- Op: - [I]
       +- Op: Literal [I]
          +- Integer: 1
  }
  public ReInit
  Params
  tm: Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;
  Block:
  +- Local Variables:
  +- Code:
     +- St: =
     |  +- Op: >> Proxy Data Access [ token_source ] << [#unknown#]
     |  +- Op: Local variable access: tm [Lcat.quadriga.parsers.QuadrigaSimpleTokenManager;]
     +- St: =
     |  +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  +- Op: Constructor [Lcat.quadriga.parsers.Token;]
     |     +- Lcat.quadriga.parsers.Token;
     |     +- Arguments
     +- St: =
        +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
        +- Op: - [I]
           +- Op: Literal [I]
              +- Integer: 1
  private Lcat.quadriga.parsers.Token; jj_consume_token
  Params
  kind: I
  throws Block:
  +- Local Variables:
  |  +- Symbol Var [ oldToken ] Type [ Lcat.quadriga.parsers.Token; ]
  +- Code:
     +- Statements:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: >> Proxy Data Access [ next ] << [#unknown#]
     |  |     |  +- Op: = [Lcat.quadriga.parsers.Token;]
     |  |     |     +- Op: Local variable access: oldToken [Lcat.quadriga.parsers.Token;]
     |  |     |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |  |  +- St: =
     |  |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     |  +- Else Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |        +- Op: = [#unknown#]
     |           +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     |           +- Op: Proxy Call [#unknown#]
     |              +- Op: >> Proxy Data Access [ token_source.getNextToken ] << [#unknown#]
     |              +- Arguments
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
     |  +- Op: - [I]
     |     +- Op: Literal [I]
     |        +- Integer: 1
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: == [Z]
     |  |     +- Op: >> Proxy Data Access [ token.kind ] << [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |  +- If Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- >> Proxy Statement: 
     |              +- return ;
     |              <<
     +- St: =
     |  +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  +- Op: >> Proxy Data Access [ oldToken ] << [#unknown#]
     +- >> Proxy Statement: 
        +- throw ;
        <<
  static private final class LookaheadSuccess extends {
    
  }
  
  final private #unknown LookaheadSuccess # ;
  private Z jj_scan_token
  Params
  kind: I
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: == [Z]
     |  |     +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- If Code:
     |  |  +- Block:
     |  |     +- Local Variables:
     |  |     +- Code:
     |  |        +- St: ++X
     |  |        |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  |        +- If Statement:
     |  |           +- Condition:
     |  |           |  +- Op: == [Z]
     |  |           |     +- Op: >> Proxy Data Access [ jj_scanpos.next ] << [#unknown#]
     |  |           |     +- Op: Literal [Null type]
     |  |           |        +- Null
     |  |           +- If Code:
     |  |           |  +- Block:
     |  |           |     +- Local Variables:
     |  |           |     +- Code:
     |  |           |        +- St: =
     |  |           |           +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  |           |           +- Op: = [#unknown#]
     |  |           |              +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  |           |              +- Op: = [#unknown#]
     |  |           |                 +- Op: >> Proxy Data Access [ jj_scanpos.next ] << [#unknown#]
     |  |           |                 +- Op: Proxy Call [#unknown#]
     |  |           |                    +- Op: >> Proxy Data Access [ token_source.getNextToken ] << [#unknown#]
     |  |           |                    +- Arguments
     |  |           +- Else Code:
     |  |              +- Block:
     |  |                 +- Local Variables:
     |  |                 +- Code:
     |  |                    +- St: =
     |  |                       +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  |                       +- Op: = [#unknown#]
     |  |                          +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  |                          +- Op: >> Proxy Data Access [ jj_scanpos.next ] << [#unknown#]
     |  +- Else Code:
     |     +- Block:
     |        +- Local Variables:
     |        +- Code:
     |           +- St: =
     |              +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |              +- Op: >> Proxy Data Access [ jj_scanpos.next ] << [#unknown#]
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: >> Proxy Data Access [ jj_scanpos.kind ] << [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ kind ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- return ;
     |        <<
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: && [Z]
     |  |     +- Op: == [Z]
     |  |     |  +- Op: >> Proxy Data Access [ jj_la ] << [#unknown#]
     |  |     |  +- Op: Literal [I]
     |  |     |     +- Integer: 0
     |  |     +- Op: == [Z]
     |  |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |  |        +- Op: >> Proxy Data Access [ jj_lastpos ] << [#unknown#]
     |  +- If Code:
     |     +- >> Proxy Statement: 
     |        +- throw ;
     |        <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  final public Lcat.quadriga.parsers.Token; getNextToken
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
     |  +- Condition:
     |  |  +- Op: != [Z]
     |  |     +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     |  |     +- Op: Literal [Null type]
     |  |        +- Null
     |  +- If Code:
     |  |  +- St: =
     |  |     +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |  |     +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     |  +- Else Code:
     |     +- St: =
     |        +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     |        +- Op: = [#unknown#]
     |           +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     |           +- Op: Proxy Call [#unknown#]
     |              +- Op: >> Proxy Data Access [ token_source.getNextToken ] << [#unknown#]
     |              +- Arguments
     +- St: =
     |  +- Op: >> Proxy Data Access [ jj_ntk ] << [#unknown#]
     |  +- Op: - [I]
     |     +- Op: Literal [I]
     |        +- Integer: 1
     +- >> Proxy Statement: 
        +- return ;
        <<
  final public Lcat.quadriga.parsers.Token; getToken
  Params
  index: I
  Block:
  +- Local Variables:
  |  +- Symbol Var [ t ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ i ] Type [ I ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |     +- Op: ? [#unknown#]
     |        +- Op: >> Proxy Data Access [ jj_lookingAhead ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ jj_scanpos ] << [#unknown#]
     |        +- Op: >> Proxy Data Access [ token ] << [#unknown#]
     +- >> Proxy Statement: 
     |  +- for( Statements:
     |  +- +- St: =
     |  +-    +- Op: Local variable access: i [I]
     |  +-    +- Op: Literal [I]
     |  +-       +- Integer: 0; ; Statements:
     |  +- +- St: ++X
     |  +-    +- Op: Local variable access: i [I]) 
     |  +- Block:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: != [Z]
     |  +-       |     +- Op: Field: [Lcat.quadriga.parsers.Token;]
     |  +-       |     |  +- cat.quadriga.parsers.Token -> next
     |  +-       |     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       |     +- Op: Literal [Null type]
     |  +-       |        +- Null
     |  +-       +- If Code:
     |  +-       |  +- St: =
     |  +-       |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       |     +- Op: Field: [Lcat.quadriga.parsers.Token;]
     |  +-       |        +- cat.quadriga.parsers.Token -> next
     |  +-       |        +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       +- Else Code:
     |  +-          +- St: =
     |  +-             +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-             +- Op: = [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ t.next ] << [#unknown#]
     |  +-                +- Op: Proxy Call [#unknown#]
     |  +-                   +- Op: >> Proxy Data Access [ token_source.getNextToken ] << [#unknown#]
     |  +-                   +- ArgumentsBlock:
     |  +- +- Local Variables:
     |  +- +- Code:
     |  +-    +- If Statement:
     |  +-       +- Condition:
     |  +-       |  +- Op: != [Z]
     |  +-       |     +- Op: Field: [Lcat.quadriga.parsers.Token;]
     |  +-       |     |  +- cat.quadriga.parsers.Token -> next
     |  +-       |     |  +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       |     +- Op: Literal [Null type]
     |  +-       |        +- Null
     |  +-       +- If Code:
     |  +-       |  +- St: =
     |  +-       |     +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       |     +- Op: Field: [Lcat.quadriga.parsers.Token;]
     |  +-       |        +- cat.quadriga.parsers.Token -> next
     |  +-       |        +- Op: Local variable access: t [Lcat.quadriga.parsers.Token;]
     |  +-       +- Else Code:
     |  +-          +- St: =
     |  +-             +- Op: >> Proxy Data Access [ t ] << [#unknown#]
     |  +-             +- Op: = [#unknown#]
     |  +-                +- Op: >> Proxy Data Access [ t.next ] << [#unknown#]
     |  +-                +- Op: Proxy Call [#unknown#]
     |  +-                   +- Op: >> Proxy Data Access [ token_source.getNextToken ] << [#unknown#]
     |  +-                   +- Arguments
     |  <<
     +- >> Proxy Statement: 
        +- return ;
        <<
  private I jj_ntk
  Params
  Block:
  +- Local Variables:
  +- Code:
     +- If Statement:
        +- Condition:
        |  +- Op: == [Z]
        |     +- Op: = [#unknown#]
        |     |  +- Op: >> Proxy Data Access [ jj_nt ] << [#unknown#]
        |     |  +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
        |     +- Op: Literal [Null type]
        |        +- Null
        +- If Code:
        |  +- >> Proxy Statement: 
        |     +- return ;
        |     <<
        +- Else Code:
           +- >> Proxy Statement: 
              +- return ;return ;
              <<
  public Lcat.quadriga.parsers.ParseException; generateParseException
  Params
  Block:
  +- Local Variables:
  |  +- Symbol Var [ errortok ] Type [ Lcat.quadriga.parsers.Token; ]
  |  +- Symbol Var [ line ] Type [ I ]
  |  +- Symbol Var [ column ] Type [ I ]
  |  +- Symbol Var [ mess ] Type [ Ljava.lang.String; ]
  +- Code:
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: errortok [Lcat.quadriga.parsers.Token;]
     |     +- Op: >> Proxy Data Access [ token.next ] << [#unknown#]
     +- Statements:
     |  +- St: =
     |  |  +- Op: Local variable access: line [I]
     |  |  +- Op: Field: [I]
     |  |     +- cat.quadriga.parsers.Token -> beginLine
     |  |     +- Op: Local variable access: errortok [Lcat.quadriga.parsers.Token;]
     |  +- St: =
     |     +- Op: Local variable access: column [I]
     |     +- Op: Field: [I]
     |        +- cat.quadriga.parsers.Token -> beginColumn
     |        +- Op: Local variable access: errortok [Lcat.quadriga.parsers.Token;]
     +- Statements:
     |  +- St: =
     |     +- Op: Local variable access: mess [Ljava.lang.String;]
     |     +- Op: ? [#unknown#]
     |        +- Op: == [Z]
     |        |  +- Op: Field: [I]
     |        |  |  +- cat.quadriga.parsers.Token -> kind
     |        |  |  +- Op: Local variable access: errortok [Lcat.quadriga.parsers.Token;]
     |        |  +- Op: Literal [I]
     |        |     +- Integer: 0
     |        +- Op: >> proxy [ [] ] [#unknown#]
     |        +- Op: Field: [Ljava.lang.String;]
     |           +- cat.quadriga.parsers.Token -> image
     |           +- Op: Local variable access: errortok [Lcat.quadriga.parsers.Token;]
     +- >> Proxy Statement: 
        +- return ;
        <<
  final public enable_tracing
  Params
  Block:
  +- Local Variables:
  +- Code:
  final public disable_tracing
  Params
  Block:
  +- Local Variables:
  +- Code:
  
}

class VarAndInit {
  Lcat.quadriga.parsers.Token; ;
  Lcat.quadriga.parsers.code.types.BaseType; ;
  Lcat.quadriga.parsers.code.statements.StatementNode; ;
  I ;
  
}

class ParameterClass {
  Lcat.quadriga.parsers.code.CodeZone; ;
  Lcat.quadriga.parsers.code.types.BaseType; ;
  Ljava.lang.String; ;
  Z ;
  I ;
  
}
