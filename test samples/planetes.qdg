
@quadriga planetes

@component EsPlaneta {
  float radi, recarga, tempsTotalRecarga
  Entity<EsPlanetaDetector> detector
  Map<Entity<EsExercit>, Entity<EsPlaneta>> direccionsExercits
}

@component EsPlanetaDetector {
  Entity<EsPlaneta> planeta
}

@prototype GrupPlanetes(float colorHue) {
  Hue( colorHue )
}

@prototype Planeta(Vector3f posicio, Entity<Hue> grup, float radi) {
    Geometry( model = "Assets/Planeta.j3o", 
              translation = posicio, 
              scale = new Vector3f(radi,radi,radi) )
   
    Material( name  = "Assets/Planeta.material", 
              colors["Ambient"] = Utils.colorHSV(grup[Hue].hue, rnd[0.7:1], rnd[0.7:1]))
              
    Grup( grup )
    
    Position( posicio )
    
    Radi( radi )
    
    Edificis()
    
    Veïns()
    
    EsPlaneta(radi              = radi,
              detector          = new PlanetaDetector( this, radi*4 ),
              tempsTotalRecarga = 5.f,
              recarga           = 10.f )
    
    JBulletCollidable(shape = new ShapeParams(ShapeParams.Shape.SPHERE, null, radi))
}

@prototype PlanetaDetector( Entity planeta, float radi) {
  EsPlanetaDetector( planeta = planeta )
  
  JBulletCollidable(
                    shape = new ShapeParams(ShapeParams.Shape.SPHERE, null, radi)
                   )
}

@prototype Aresta(Entity<Veïns> planeta1, Entity<Veïns> planeta2) {
  ArestaComp( {planeta1,planeta2} )
  
  Geometry( model       = "Assets/Aresta.j3o", 
            translation = Utils.posAresta(planeta1[Position], planeta2[Position]) , 
            rotation    = Utils.rotAresta(planeta1[Position], planeta2[Position]) ,
            scale       = Utils.scaAresta(planeta1[Position], planeta2[Position]))
   
  Material( name  = "Assets/Aresta.material", 
            colors["Ambient"] = Utils.colorHSV(
                                        (planeta1[Grup][Hue].hue + planeta1[Grup][Hue].hue) / 2, 
                                        rnd[0.7:1], rnd[0.7:1]))
        
}

@system ArestaSystem {
  @components {
    ArestaComp
  }
  @newEntity(Entity entity: ENTITY) {
    Entity<Veïns> planeta1 = entity[ArestaComp][0];
    Entity<Veïns> planeta2 = entity[ArestaComp][1];
    planeta1[Veïns].add(planeta2);
    planeta2[Veïns].add(planeta1);
  }
}

