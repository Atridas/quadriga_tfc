

Paraules clau especials:


@quadriga 
@import
@java

@struct 
@system 
@component 
@prototype 
@const 
@event 
@thread 
@scene

@components 
@additionalInfo 
@externInfo 
@affectedSystems 

@child

@newEntity 
@eraseEntity 
@change 
@update 
@init 
@systems 

@add 
@remove 
@changed 
@discard 
@old
@throw
@new

Construccions Especials:

* Definició de Paquet: "@quadriga" identificador { "." identificador }

* Importacio Quadriga: "@import" identificador { "." identificador }

* Importacio Java: "@java" identificador { "." identificador }

* Estructura: "@struct" identifier "{" {< Type > identifier {"," identifier} [";"]} "}"

* Sistema: "@system" identifier "{" 
                        < components > 
                        {  < additionalInfo > 
                         | < externInfo > 
                         | < affectedSystems >
                        }
                        
                        {  <AtNewEntity> 
                         | <AtEraseEntity>
                         | <AtChange>
                         | <AtUpdate>
                         | < modifiers > < MethodDeclaration >
                        }
                     "}"

* Constant: "@const" < Type > identifier "=" <expresio>

* Event: "@event" identifier "{"
                            { <Type (1) > identifier {"," identifier } [;] }
                             "}"
          on (1) a Serializable (& Cloneable?)

* Thread: "@thread" "{"
              <systems>
              [<AtInit>]
                    "}"

* Component: "@component" identifier "{"
                              { "*" < Type (1) > [";"] }
                              { <Type (2) > identifier {"," identifier } [;] }
                           "}"
          on (1) a Component
          on (2) a Serializable (& Cloneable?)

* Prototype: "@prototype" identifier [ "extends" < Type (1) > { "," < Type (1) > } ] "{"
                              [ < AtInit > ]
                              { < ComponentInitializer > [";"]}
                              [ < Child > ]
                           "}"
          on (1) a Prototype
          
* Scene: "@scene" "{"
              < Named Entity Instantiation >
              { "," < Named Entity Instantiation > }
              
              [ < AtInit > ]
                  "}"
          
* AtNewEntity: "@newEntity" < paramsWithSemantics > < Block >

* AtEraseEntity: "@eraseEntity" < paramsWithSemantics > < Block >

* AtChange: "@change" < paramsWithSemantics > < Block >

* AtUpdate: "@update" < paramsWithSemantics > < Block >

* AtInit: "@init" < paramsWithSemantics > < Block >

* AtEvent "@event" < paramsWithSemantics > < Block >

* Components: "@components" "{"
                        { < Type (1) > [";"] }
                            "}"
          on (1) a Component

* AdditionalInfo: "@additionalInfo" "{"
                        { < Type > identifier [";"] }
                                    "}"

* ExternInfo: "@externInfo" "{"
                        { < Type > identifier ":" < Type (1) > "." identifier [";"] }
                            "}"
          on (1) a System

* AffectedSystems: "@affectedSystems" "{"
                        { < Type (1) > [";"] }
                                      "}"
          on (1) a System
          
* Systems: "@systems" "{"
                        { < Type (1) > [";"] }
                            "}"
          on (1) a System

* Child "@child" "{" 
                      < Named Entity Instantiation >
                      { "," < Named Entity Instantiation > }
                 "}"
          
* ParamsWithSemantics: "(" [ <ParamWithSemantic> {"," <ParamWithSemantic> } ] ")"

* ParamWithSemantic: < Type > identifier [ ":" identifier ]

* Accés a Component:  < expresió (1) > "[" < expresió (2)> "]"
        on (1) és de tipus Entity
        i  (2) és un identificador d'un component [Class<? extends Component]

* Constructor de Component: < ClassOrInterfaceType (1) >  < Quadriga Params > 
        on (1) és un identificador d'un component [Class<? extends Component>]

* Quadriga Params:  "(" [
                      ( < expresió > {"," < expresió > } {"," < Quadriga Params >} [","] )
                      |
                      ( < Quadriga Params > {"," < Quadriga Params >} [","] )
                    ] ")"
                    

* Quadriga Param: identificador { "." identificador } "=" < expresió >

* Named Entity Instantiation: < Type (1) > < Quadriga Params > ":" String
                                    ["{"
                                        < Named Entity Instantiation >
                                        { "," < Named Entity Instantiation > }
                                     "}"]
          on (1) és un Prototip
          
* Event Trow: "@throw" < expresió (1) > [ ":" < expresió (2) > ]
         on (1) és un Event
         on (2) és una Entitat
         
* 

*