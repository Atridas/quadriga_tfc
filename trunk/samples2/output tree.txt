
+- Globals
   +- "cat.quadriga.java.base.BaseMaterial" : Symbol Type
   |  +- Lcat/quadriga/java/base/BaseMaterial;
   +- "cat.quadriga.base.TexturedQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "texture"
   |           +- Op: Literal {Ljava/lang/String;} <+>
   |              +- String: ""
   +- "Exit" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "RendererComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.RendererComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |        +- Op: Method: <+>
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- St: Arguments <+>
   |     |                 |           +- Op: Call {I} <+>
   |     |                 |              +- Op: Method: <+>
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |              +- St: Zero Arguments <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Call {I} <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |              +- St: Zero Arguments <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z} <+>
   |                       |  |     +- Op: isnull {Z} <+>
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |  +- If Code:
   |                       |     +- St: Block <+>
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |              +- St: Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                 |  +- Op: Method: <+>
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                 |  +- St: Zero Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                    +- Op: Method: <+>
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                    +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {F} <+>
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.Transform <+>
   +- "tetris.base.CubDeTaulell" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- I
   |     |  |  +- posX
   |     |  +- parameter
   |     |     +- I
   |     |     +- posY
   |     +- St: Block <+>
   |        +- Local Variables:
   |        |  +- Symbol Var [ posX ] Type [ I ]
   |        |  +- Symbol Var [ posY ] Type [ I ]
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- position
   |           |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |           +- Ljavax/vecmath/Vector3f;
   |           |  |           +- St: Arguments <+>
   |           |  |              +- Op: Local variable access: posX {I} <+>
   |           |  |              +- Op: Local variable access: posY {I} <+>
   |           |  |              +- Op: Literal {I} <+>
   |           |  |                 +- Integer: 0
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.BoxRenderer} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.BoxRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "LlogicaTetris" : Symbol Type
   |  +- thread <+>
   |     +- tetris.base.ControladorDelJoc
   |     +- tetris.base.LlògicaTaulell
   +- "tetris.base.LlogicaTetris" : Symbol Type
   |  +- thread <+>
   |     +- tetris.base.ControladorDelJoc
   |     +- tetris.base.LlògicaTaulell
   +- "cat.quadriga.base.RendererPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.RendererComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.SceneComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "camera"
   +- "javax.vecmath.Quat4f" : Symbol Type
   |  +- Ljavax/vecmath/Quat4f;
   +- "cat.quadriga.base.SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |        +- Op: Method: <+>
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- St: Arguments <+>
   |     |                 |           +- Op: Call {I} <+>
   |     |                 |              +- Op: Method: <+>
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |              +- St: Zero Arguments <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Call {I} <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |              +- St: Zero Arguments <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z} <+>
   |                       |  |     +- Op: isnull {Z} <+>
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |  +- If Code:
   |                       |     +- St: Block <+>
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |              +- St: Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                 |  +- Op: Method: <+>
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                 |  +- St: Zero Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                    +- Op: Method: <+>
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                    +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {F} <+>
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.Transform <+>
   +- "tetris.base.LlògicaTaulell" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |        +- tetris.base.Puntuació
   |        +- tetris.base.Taulell
   +- "tetris.base.TetrisGameComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "taulell"
   +- "SceneComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "camera"
   +- "cat.quadriga.base.SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                          +- Op: Method: <+>
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                          +- St: Zero Arguments <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "tetris.base.Main" : Symbol Type
   |  +- main
   |     +- thread: tetris.base.LlogicaTetris
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   +- "BillboardRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.Exit" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.Transform" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |        |  +- F
   |        |  +- "scale"
   |        |  +- Op: Literal {F} <+>
   |        |     +- Float: 1.0
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Quat4f;
   |           +- "rotation"
   |           +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |              +- Ljavax/vecmath/Quat4f;
   |              +- St: Arguments <+>
   |                 +- Op: Literal {F} <+>
   |                 |  +- Float: 0.0
   |                 +- Op: Literal {F} <+>
   |                 |  +- Float: 0.0
   |                 +- Op: Literal {F} <+>
   |                 |  +- Float: 0.0
   |                 +- Op: Literal {F} <+>
   |                    +- Float: 1.0
   +- "tetris.base.Taulell" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- [[Lcat/quadriga/runtime/Entity;
   |        |  +- "cubs"
   |        |  +- Op: new array {[[Lcat/quadriga/runtime/Entity;} <+>
   |        |     +- Lcat/quadriga/runtime/Entity;
   |        |     +- Op: Literal {I} <+>
   |        |     |  +- Integer: 10
   |        |     +- Op: Literal {I} <+>
   |        |        +- Integer: 18
   |        +- Quadriga Field
   |           +- [[I
   |           +- "taulell"
   |           +- Op: new primitive array {[[I} <+>
   |              +- I
   |              +- Op: Literal {I} <+>
   |              |  +- Integer: 10
   |              +- Op: Literal {I} <+>
   |                 +- Integer: 18
   +- "RendererPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.RendererComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "CubDeTaulell" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- I
   |     |  |  +- posX
   |     |  +- parameter
   |     |     +- I
   |     |     +- posY
   |     +- St: Block <+>
   |        +- Local Variables:
   |        |  +- Symbol Var [ posX ] Type [ I ]
   |        |  +- Symbol Var [ posY ] Type [ I ]
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- position
   |           |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |           +- Ljavax/vecmath/Vector3f;
   |           |  |           +- St: Arguments <+>
   |           |  |              +- Op: Local variable access: posX {I} <+>
   |           |  |              +- Op: Local variable access: posY {I} <+>
   |           |  |              +- Op: Literal {I} <+>
   |           |  |                 +- Integer: 0
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.BoxRenderer} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.EndRender
   +- "cat.quadriga.base.TexturedQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.TexturedQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "texture"
   |              |  |        +- Op: Literal {Ljava/lang/String;} <+>
   |              |  |           +- String: ""
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "InitTetris" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Code:
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> drawAxis
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal {Null type} <+>
   |                       |        +- Null
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                          +- Condition:
   |                          |  +- Op: Call {Z} <+>
   |                          |     +- Op: Static Method: <+>
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments <+>
   |                          +- If Code:
   |                             +- St: Block <+>
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit <+>
   |                                      +- St: Zero Arguments <+>
   +- "cat.quadriga.base.BillboardRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "Materials" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- [Lcat/quadriga/java/base/BaseMaterial;
   |           +- "materials"
   |           +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |              +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |                 +- Lcat/quadriga/java/base/BaseMaterial;
   |                 +- Op: Literal {I} <+>
   |                    +- Integer: 0
   +- "CilynderRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos1"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 0.0
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos2"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 1.0
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal {F} <+>
   |              +- Float: 1.0
   +- "cat.quadriga.base.FontQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |        |  +- Ljava/lang/String;
   |        |  +- "text"
   |        |  +- Op: Literal {Ljava/lang/String;} <+>
   |        |     +- String: ""
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector4f;
   |           +- "color"
   |           +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              +- Ljavax/vecmath/Vector4f;
   |              +- St: Zero Arguments <+>
   +- "SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.EndRender
   +- "cat.quadriga.base.EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Code:
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> drawAxis
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal {Null type} <+>
   |                       |        +- Null
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                          +- Condition:
   |                          |  +- Op: Call {Z} <+>
   |                          |     +- Op: Static Method: <+>
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments <+>
   |                          +- If Code:
   |                             +- St: Block <+>
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit <+>
   |                                      +- St: Zero Arguments <+>
   +- "cat.quadriga.render.simple.Node" : Symbol Type
   |  +- Lcat/quadriga/render/simple/Node;
   +- "FontQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.FontQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljava/lang/String;
   |              |  |     |  +- "text"
   |              |  |     |  +- Op: Literal {Ljava/lang/String;} <+>
   |              |  |     |     +- String: ""
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector4f;
   |              |  |        +- "color"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector4f;
   |              |  |           +- St: Zero Arguments <+>
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "tetris.base.Puntuació" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- I
   |        |  +- "nivell"
   |        |  +- Op: Literal {I} <+>
   |        |     +- Integer: 0
   |        +- Quadriga Field
   |        |  +- I
   |        |  +- "punts"
   |        |  +- Op: Literal {I} <+>
   |        |     +- Integer: 0
   |        +- Quadriga Field
   |           +- I
   |           +- "línies"
   |           +- Op: Literal {I} <+>
   |              +- Integer: 0
   +- "cat.quadriga.base.FontQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.FontQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljava/lang/String;
   |              |  |     |  +- "text"
   |              |  |     |  +- Op: Literal {Ljava/lang/String;} <+>
   |              |  |     |     +- String: ""
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector4f;
   |              |  |        +- "color"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector4f;
   |              |  |           +- St: Zero Arguments <+>
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "TexturedQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.TexturedQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "texture"
   |              |  |        +- Op: Literal {Ljava/lang/String;} <+>
   |              |  |           +- String: ""
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "SimpleCamera" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.CameraComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |           +- Float: 0.0
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "lookAt"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |           +- Float: 1.0
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector3f;
   |              |  |        +- "up"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector3f;
   |              |  |           +- St: Arguments <+>
   |              |  |              +- Op: Literal {F} <+>
   |              |  |              |  +- Float: 0.0
   |              |  |              +- Op: Literal {F} <+>
   |              |  |              |  +- Float: 1.0
   |              |  |              +- Op: Literal {F} <+>
   |              |  |                 +- Float: 0.0
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.CilynderRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos1"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 0.0
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos2"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 1.0
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal {F} <+>
   |              +- Float: 1.0
   +- "Main" : Symbol Type
   |  +- main
   |     +- thread: tetris.base.LlogicaTetris
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   +- "SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "ControladorDelJoc" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |        +- tetris.base.TetrisGameComponent
   +- "tetris.base.ControladorDelJoc" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |        +- tetris.base.TetrisGameComponent
   +- "tetris.base.InsertarPerça" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "px"
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "py"
   |        +- Quadriga Field
   |           +- I
   |           +- "color"
   +- "StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "LlògicaTaulell" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |        +- tetris.base.Puntuació
   |        +- tetris.base.Taulell
   +- "cat.quadriga.base.CameraComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 0.0
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "lookAt"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |        |  +- Float: 0.0
   |        |        +- Op: Literal {F} <+>
   |        |           +- Float: 1.0
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector3f;
   |           +- "up"
   |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              +- Ljavax/vecmath/Vector3f;
   |              +- St: Arguments <+>
   |                 +- Op: Literal {F} <+>
   |                 |  +- Float: 0.0
   |                 +- Op: Literal {F} <+>
   |                 |  +- Float: 1.0
   |                 +- Op: Literal {F} <+>
   |                    +- Float: 0.0
   +- "Tetris" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {tetris.base.Puntuació} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "nivell"
   |           |  |  |     |  +- Op: Literal {I} <+>
   |           |  |  |     |     +- Integer: 0
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "punts"
   |           |  |  |     |  +- Op: Literal {I} <+>
   |           |  |  |     |     +- Integer: 0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- I
   |           |  |  |        +- "línies"
   |           |  |  |        +- Op: Literal {I} <+>
   |           |  |  |           +- Integer: 0
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- punts
   |           |  |        +- Op: Literal {I} <+>
   |           |  |           +- Integer: 0
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {tetris.base.Taulell} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- [[Lcat/quadriga/runtime/Entity;
   |              |  |     |  +- "cubs"
   |              |  |     |  +- Op: new array {[[Lcat/quadriga/runtime/Entity;} <+>
   |              |  |     |     +- Lcat/quadriga/runtime/Entity;
   |              |  |     |     +- Op: Literal {I} <+>
   |              |  |     |     |  +- Integer: 10
   |              |  |     |     +- Op: Literal {I} <+>
   |              |  |     |        +- Integer: 18
   |              |  |     +- Quadriga Field
   |              |  |        +- [[I
   |              |  |        +- "taulell"
   |              |  |        +- Op: new primitive array {[[I} <+>
   |              |  |           +- I
   |              |  |           +- Op: Literal {I} <+>
   |              |  |           |  +- Integer: 10
   |              |  |           +- Op: Literal {I} <+>
   |              |  |              +- Integer: 18
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "javax.vecmath.Vector4f" : Symbol Type
   |  +- Ljavax/vecmath/Vector4f;
   +- "cat.quadriga.base.Materials" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- [Lcat/quadriga/java/base/BaseMaterial;
   |           +- "materials"
   |           +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |              +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |                 +- Lcat/quadriga/java/base/BaseMaterial;
   |                 +- Op: Literal {I} <+>
   |                    +- Integer: 0
   +- "TexturedQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "texture"
   |           +- Op: Literal {Ljava/lang/String;} <+>
   |              +- String: ""
   +- "cat.quadriga.base.SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal {F} <+>
   |                       |     |  +- Float: 45.0
   |                       |     +- Op: Literal {F} <+>
   |                       |     |  +- Float: 1.0
   |                       |     +- Op: Literal {F} <+>
   |                       |        +- Float: 99.0
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   +- "java.lang.String" : Symbol Type
   |  +- Ljava/lang/String;
   +- "FontQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |        |  +- Ljava/lang/String;
   |        |  +- "text"
   |        |  +- Op: Literal {Ljava/lang/String;} <+>
   |        |     +- String: ""
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector4f;
   |           +- "color"
   |           +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              +- Ljavax/vecmath/Vector4f;
   |              +- St: Zero Arguments <+>
   +- "InsertarPerça" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "px"
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "py"
   |        +- Quadriga Field
   |           +- I
   |           +- "color"
   +- "SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal {F} <+>
   |                       |     |  +- Float: 45.0
   |                       |     +- Op: Literal {F} <+>
   |                       |     |  +- Float: 1.0
   |                       |     +- Op: Literal {F} <+>
   |                       |        +- Float: 99.0
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   +- "tetris.base.Tetris" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal {F} <+>
   |           |  |  |     |     +- Float: 1.0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |              |  +- Float: 0.0
   |           |  |  |              +- Op: Literal {F} <+>
   |           |  |  |                 +- Float: 1.0
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {tetris.base.Puntuació} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "nivell"
   |           |  |  |     |  +- Op: Literal {I} <+>
   |           |  |  |     |     +- Integer: 0
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "punts"
   |           |  |  |     |  +- Op: Literal {I} <+>
   |           |  |  |     |     +- Integer: 0
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- I
   |           |  |  |        +- "línies"
   |           |  |  |        +- Op: Literal {I} <+>
   |           |  |  |           +- Integer: 0
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- punts
   |           |  |        +- Op: Literal {I} <+>
   |           |  |           +- Integer: 0
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {tetris.base.Taulell} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- [[Lcat/quadriga/runtime/Entity;
   |              |  |     |  +- "cubs"
   |              |  |     |  +- Op: new array {[[Lcat/quadriga/runtime/Entity;} <+>
   |              |  |     |     +- Lcat/quadriga/runtime/Entity;
   |              |  |     |     +- Op: Literal {I} <+>
   |              |  |     |     |  +- Integer: 10
   |              |  |     |     +- Op: Literal {I} <+>
   |              |  |     |        +- Integer: 18
   |              |  |     +- Quadriga Field
   |              |  |        +- [[I
   |              |  |        +- "taulell"
   |              |  |        +- Op: new primitive array {[[I} <+>
   |              |  |           +- I
   |              |  |           +- Op: Literal {I} <+>
   |              |  |           |  +- Integer: 10
   |              |  |           +- Op: Literal {I} <+>
   |              |  |              +- Integer: 18
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.SphereRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal {F} <+>
   |              +- Float: 1.0
   +- "cat.quadriga.base.StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                          +- Op: Method: <+>
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                          +- St: Zero Arguments <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "cat.quadriga.render.simple.RenderManager" : Symbol Type
   |  +- Lcat/quadriga/render/simple/RenderManager;
   +- "tetris.base.InitTetris" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "cat.quadriga.base.SimpleCamera" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.CameraComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |           +- Float: 0.0
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "lookAt"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |        |  +- Float: 0.0
   |              |  |     |        +- Op: Literal {F} <+>
   |              |  |     |           +- Float: 1.0
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector3f;
   |              |  |        +- "up"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector3f;
   |              |  |           +- St: Arguments <+>
   |              |  |              +- Op: Literal {F} <+>
   |              |  |              |  +- Float: 0.0
   |              |  |              +- Op: Literal {F} <+>
   |              |  |              |  +- Float: 1.0
   |              |  |              +- Op: Literal {F} <+>
   |              |  |                 +- Float: 0.0
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "javax.vecmath.Vector3f" : Symbol Type
      +- Ljavax/vecmath/Vector3f;