
+- Globals
   +- "cat.quadriga.java.base.BaseMaterial" : Symbol Type
   |  +- Lcat/quadriga/java/base/BaseMaterial;
   +- "cat.quadriga.base.TexturedQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "texture"
   |           +- Op: Literal: "" {Ljava/lang/String;} <+>
   +- "riskppt3d.planeta.PlanetInfoQuad" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     +- entity
   |     |     +- Semantic: ENTITY
   |     +- St: Block <+>
   |        +- Local Variables:
   |        |  +- Symbol Var [ entity ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- position
   |           |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |           +- Ljavax/vecmath/Vector3f;
   |           |  |           +- St: Arguments <+>
   |           |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |              +- Op: * {F} <+>
   |           |  |                 +- Op: Component Field: {F} <+>
   |           |  |                 |  +- riskppt3d.planeta.DadesComponent -> radi
   |           |  |                 |  +- Op: Component Access {riskppt3d.planeta.DadesComponent} <+>
   |           |  |                 |     +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |                 |     |  +- Op: Method: <+>
   |           |  |                 |     |  |  +- cat.quadriga.runtime.Entity -> getParent
   |           |  |                 |     |  |  +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |                 |     |  |     +- Op: Method: <+>
   |           |  |                 |     |  |     |  +- cat.quadriga.runtime.Entity -> getParent
   |           |  |                 |     |  |     |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |                 |     |  |     +- St: Zero Arguments <+>
   |           |  |                 |     |  +- St: Zero Arguments <+>
   |           |  |                 |     +- Op: Type Access: riskppt3d.planeta.DadesComponent <+>
   |           |  |                 +- Op: Literal: 2.0 {F} <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.BoxRenderer} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Base" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.TexturedQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.TexturedQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- texture
   |           |           +- Op: Literal: "riskppt3d/assets/planetinfo.png" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Edifici1" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.TexturedQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.TexturedQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |           +- texture
   |           |           +- Op: Literal: "riskppt3d/assets/gris.png" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Edifici2" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.TexturedQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.TexturedQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 25.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |           +- texture
   |           |           +- Op: Literal: "riskppt3d/assets/gris.png" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Edifici3" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.TexturedQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.TexturedQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 48.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |           +- texture
   |           |           +- Op: Literal: "riskppt3d/assets/gris.png" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "NumPedra" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.FontQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.FontQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 61.0 {F} <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- text
   |           |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |           |        +- quadriga argument
   |           |           +- color
   |           |           +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |           |              +- cat.quadriga.java.base.ColorUtils -> GREEN
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "NumPaper" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.FontQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.FontQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 61.0 {F} <+>
   |           |        |        +- Op: Literal: 25.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- text
   |           |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |           |        +- quadriga argument
   |           |           +- color
   |           |           +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |           |              +- cat.quadriga.java.base.ColorUtils -> GREEN
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "NumTisores" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.FontQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.FontQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 61.0 {F} <+>
   |           |        |        +- Op: Literal: 48.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- text
   |           |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |           |        +- quadriga argument
   |           |           +- color
   |           |           +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |           |              +- cat.quadriga.java.base.ColorUtils -> GREEN
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "NumPedraEnemics" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.FontQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.FontQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 111.0 {F} <+>
   |           |        |        +- Op: Literal: 2.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- text
   |           |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |           |        +- quadriga argument
   |           |           +- color
   |           |           +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |           |              +- cat.quadriga.java.base.ColorUtils -> RED
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "NumPaperEnemics" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.FontQuadPrototype
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.FontQuad
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 111.0 {F} <+>
   |           |        |        +- Op: Literal: 25.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- text
   |           |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |           |        +- quadriga argument
   |           |           +- color
   |           |           +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |           |              +- cat.quadriga.java.base.ColorUtils -> RED
   |           +- St: Apply Prototype to Entity <+>
   |              +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Literal: "NumTisoresEnemics" {Ljava/lang/String;} <+>
   |              +- cat.quadriga.base.FontQuadPrototype
   |              +- St: Zero Arguments <+>
   |              +- Component redefinition
   |                 +- cat.quadriga.base.FontQuad
   |                 +- St: Named Arguments <+>
   |                    +- quadriga argument
   |                    |  +- position
   |                    |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |                    |     +- Ljavax/vecmath/Vector3f;
   |                    |     +- St: Arguments <+>
   |                    |        +- Op: Literal: 111.0 {F} <+>
   |                    |        +- Op: Literal: 48.0 {F} <+>
   |                    |        +- Op: Literal: 0.0 {F} <+>
   |                    +- quadriga argument
   |                    |  +- text
   |                    |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |                    +- quadriga argument
   |                       +- color
   |                       +- Op: Static Field: {Ljavax/vecmath/Color3f;} <+>
   |                          +- cat.quadriga.java.base.ColorUtils -> RED
   +- "Exit" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "RendererComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.java.base.ColorUtils" : Symbol Type
   |  +- Lcat/quadriga/java/base/ColorUtils;
   +- "cat.quadriga.base.RendererComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.java.base.MaterialUnshadedColor" : Symbol Type
   |  +- Lcat/quadriga/java/base/MaterialUnshadedColor;
   +- "SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |        +- Op: Method: <+>
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- St: Arguments <+>
   |     |                 |           +- Op: Call {I} <+>
   |     |                 |              +- Op: Method: <+>
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |              +- St: Zero Arguments <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Call {I} <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |              +- St: Zero Arguments <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z} <+>
   |                       |  |     +- Op: isnull {Z} <+>
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |  +- If Code:
   |                       |     +- St: Block <+>
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |              +- St: Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                 |  +- Op: Method: <+>
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                 |  +- St: Zero Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                    +- Op: Method: <+>
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                    +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {F} <+>
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.Transform <+>
   +- "cat.quadriga.base.BoxRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "javax.vecmath.Matrix4f" : Symbol Type
   |  +- Ljavax/vecmath/Matrix4f;
   +- "riskppt3d.planeta.Planeta" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- F
   |     |  |  +- hue
   |     |  |  +- init
   |     |  |     +- Op: Literal: 0.0 {F} <+>
   |     |  +- parameter
   |     |     +- F
   |     |     +- radi
   |     |     +- init
   |     |        +- Op: Literal: 1.0 {F} <+>
   |     +- St: Block <+>
   |        +- Local Variables:
   |        |  +- Symbol Var [ hue ] Type [ F ]
   |        |  +- Symbol Var [ radi ] Type [ F ]
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {riskppt3d.planeta.DadesComponent} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- F
   |           |  |  |        +- "radi"
   |           |  |  |        +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- radi
   |           |  |        +- Op: Local variable access: radi {F} <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.SphereRenderer} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- F
   |           |  |  |        +- "radi"
   |           |  |  |        +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- radi
   |           |  |        +- Op: Component Field: {F} <+>
   |           |  |           +- riskppt3d.planeta.DadesComponent -> radi
   |           |  |           +- Op: Component Access {riskppt3d.planeta.DadesComponent} <+>
   |           |  |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |              +- Op: Type Access: riskppt3d.planeta.DadesComponent <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Materials} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- [Lcat/quadriga/java/base/BaseMaterial;
   |           |  |  |        +- "materials"
   |           |  |  |        +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |           |  |  |           +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |           |  |  |              +- Lcat/quadriga/java/base/BaseMaterial;
   |           |  |  |              +- Op: Literal: 0 {I} <+>
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |        +- materials
   |           |  |        +- Op: Array initialization {[Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |           |  |           +- Op: new array {[Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |           |  |           |  +- Lcat/quadriga/java/base/MaterialUnshadedColor;
   |           |  |           |  +- Op: Literal: 1 {I} <+>
   |           |  |           +- Op: Constructor {Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |           |  |              +- Lcat/quadriga/java/base/MaterialUnshadedColor;
   |           |  |              +- St: Arguments <+>
   |           |  |                 +- Op: Call {Ljavax/vecmath/Color3f;} <+>
   |           |  |                    +- Op: Static Method: <+>
   |           |  |                    |  +- cat.quadriga.java.base.ColorUtils -> getHSV
   |           |  |                    +- St: Arguments <+>
   |           |  |                       +- Op: Local variable access: hue {F} <+>
   |           |  |                       +- Op: Literal: 0.8 {F} <+>
   |           |  |                       +- Op: Literal: 0.9 {F} <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |              +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Literal: "Info" {Ljava/lang/String;} <+>
   |              +- riskppt3d.planeta.PlanetaInfo
   |              +- St: Zero Arguments <+>
   +- "Test" : Symbol Type
   |  +- thread <+>
   |     +- riskppt3d.demo.IncrementadorPlanetes
   +- "cat.quadriga.base.RendererPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.RendererComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.SceneComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "camera"
   +- "javax.vecmath.Quat4f" : Symbol Type
   |  +- Ljavax/vecmath/Quat4f;
   +- "DemoMain" : Symbol Type
   |  +- main
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   |     +- thread: riskppt3d.demo.Test
   |     +- Quadriga function
   |        +- St: Block <+>
   |           +- Local Variables:
   |           |  +- Symbol Var [ demo ] Type [ Lcat/quadriga/runtime/Entity; ]
   |           +- Code:
   |              +- St: Statements: <+>
   |              |  +- St: = <+>
   |              |     +- Op: Local variable access: demo {Lcat/quadriga/runtime/Entity;} <+>
   |              |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |              |        +- Op: Literal: Null {Null type} <+>
   |              |        +- Op: Literal: "BaseScene" {Ljava/lang/String;} <+>
   |              +- St: Apply Prototype to Entity <+>
   |              |  +- Op: Local variable access: demo {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- riskppt3d.demo.SimpleDemo
   |              |  +- St: Zero Arguments <+>
   |              +- St: = <+>
   |                 +- Op: Field: {Z} <+>
   |                 |  +- cat.quadriga.render.simple.RenderManager -> renderFPS
   |                 |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                 |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                 +- Op: Literal: true {Z} <+>
   +- "cat.quadriga.base.SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |        +- Op: Method: <+>
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- St: Arguments <+>
   |     |                 |           +- Op: Call {I} <+>
   |     |                 |              +- Op: Method: <+>
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |              +- St: Zero Arguments <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                 |  +- Op: Method: <+>
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                 |  +- St: Arguments <+>
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform <+>
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Call {I} <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |              +- St: Zero Arguments <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- Op: Method: <+>
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z} <+>
   |                       |  |     +- Op: isnull {Z} <+>
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |  +- If Code:
   |                       |     +- St: Block <+>
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call <+>
   |                       |              +- Op: Method: <+>
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |              +- St: Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                 |  +- Op: Method: <+>
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                 |  +- St: Zero Arguments <+>
   |                       |                 +- Op: Call {I} <+>
   |                       |                    +- Op: Method: <+>
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;} <+>
   |                       |                    +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;} <+>
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {F} <+>
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.Transform <+>
   +- "riskppt3d.aresta.Aresta" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- Lcat/quadriga/runtime/Entity;
   |     |  |  +- planeta1
   |     |  +- parameter
   |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     +- planeta2
   |     +- St: Block <+>
   |        +- Local Variables:
   |        |  +- Symbol Var [ planeta1 ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        |  +- Symbol Var [ planeta2 ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.CilynderRenderer} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "pos1"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Arguments <+>
   |           |  |  |     |        +- Op: Literal: 0.0 {F} <+>
   |           |  |  |     |        +- Op: Literal: 0.0 {F} <+>
   |           |  |  |     |        +- Op: Literal: 0.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "pos2"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Arguments <+>
   |           |  |  |     |        +- Op: Literal: 0.0 {F} <+>
   |           |  |  |     |        +- Op: Literal: 0.0 {F} <+>
   |           |  |  |     |        +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- F
   |           |  |  |        +- "radi"
   |           |  |  |        +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Named Arguments <+>
   |           |  |     +- quadriga argument
   |           |  |     |  +- pos1
   |           |  |     |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |           |  |     |     +- cat.quadriga.base.Transform -> position
   |           |  |     |     +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |           |  |     |        +- Op: Local variable access: planeta1 {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |     |        +- Op: Type Access: cat.quadriga.base.Transform <+>
   |           |  |     +- quadriga argument
   |           |  |     |  +- pos2
   |           |  |     |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |           |  |     |     +- cat.quadriga.base.Transform -> position
   |           |  |     |     +- Op: Component Access {cat.quadriga.base.Transform} <+>
   |           |  |     |        +- Op: Local variable access: planeta2 {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |     |        +- Op: Type Access: cat.quadriga.base.Transform <+>
   |           |  |     +- quadriga argument
   |           |  |        +- radi
   |           |  |        +- Op: Literal: 0.5 {F} <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.Materials} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |        +- [Lcat/quadriga/java/base/BaseMaterial;
   |              |  |        +- "materials"
   |              |  |        +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |              |  |           +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |              |  |              +- Lcat/quadriga/java/base/BaseMaterial;
   |              |  |              +- Op: Literal: 0 {I} <+>
   |              |  +- St: Named Arguments <+>
   |              |     +- quadriga argument
   |              |        +- materials
   |              |        +- Op: Array initialization {[Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |              |           +- Op: new array {[Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |              |           |  +- Lcat/quadriga/java/base/MaterialUnshadedColor;
   |              |           |  +- Op: Literal: 1 {I} <+>
   |              |           +- Op: Constructor {Lcat/quadriga/java/base/MaterialUnshadedColor;} <+>
   |              |              +- Lcat/quadriga/java/base/MaterialUnshadedColor;
   |              |              +- St: Arguments <+>
   |              |                 +- Op: Call {Ljavax/vecmath/Color3f;} <+>
   |              |                    +- Op: Static Method: <+>
   |              |                    |  +- cat.quadriga.java.base.ColorUtils -> getHSV
   |              |                    +- St: Arguments <+>
   |              |                       +- Op: Literal: 0.0 {F} <+>
   |              |                       +- Op: Literal: 0.0 {F} <+>
   |              |                       +- Op: Literal: 1.0 {F} <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "SceneComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "camera"
   +- "cat.quadriga.base.SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                          +- Op: Method: <+>
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                          +- St: Zero Arguments <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "cat.quadriga.base.Exit" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.Transform" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |        |  +- F
   |        |  +- "scale"
   |        |  +- Op: Literal: 1.0 {F} <+>
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Quat4f;
   |           +- "rotation"
   |           +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |              +- Ljavax/vecmath/Quat4f;
   |              +- St: Arguments <+>
   |                 +- Op: Literal: 0.0 {F} <+>
   |                 +- Op: Literal: 0.0 {F} <+>
   |                 +- Op: Literal: 0.0 {F} <+>
   |                 +- Op: Literal: 1.0 {F} <+>
   +- "riskppt3d.demo.SimpleDemo" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta1" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |     +- hue
   |           |  |     +- Op: Literal: 0.0 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 4.5 {F} <+>
   |           |                 +- Op: Literal: 2.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta2" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |  |  +- hue
   |           |  |  |  +- Op: Literal: 0.0 {F} <+>
   |           |  |  +- quadriga argument
   |           |  |     +- radi
   |           |  |     +- Op: Literal: 3.5 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta3" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |     +- hue
   |           |  |     +- Op: Literal: 0.0 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 9.0 {F} <+>
   |           |                 +- Op: Literal: -2.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta4" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |     +- hue
   |           |  |     +- Op: Literal: 180.0 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 6.0 {F} <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta5" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |  |  +- hue
   |           |  |  |  +- Op: Literal: 180.0 {F} <+>
   |           |  |  +- quadriga argument
   |           |  |     +- radi
   |           |  |     +- Op: Literal: 0.5 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 2.0 {F} <+>
   |           |                 +- Op: Literal: 6.0 {F} <+>
   |           |                 +- Op: Literal: 2.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Planeta6" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.planeta.Planeta
   |           |  +- St: Named Arguments <+>
   |           |  |  +- quadriga argument
   |           |  |     +- hue
   |           |  |     +- Op: Literal: 180.0 {F} <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 6.0 {F} <+>
   |           |                 +- Op: Literal: 6.0 {F} <+>
   |           |                 +- Op: Literal: 4.0 {F} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta1" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta2" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta1" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta2" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta3" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta2" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta3" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta3" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta1" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta4" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta5" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta4" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta5" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta6" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta4" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta6" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta6" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta5" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Aresta7" {Ljava/lang/String;} <+>
   |           |  +- riskppt3d.aresta.Aresta
   |           |  +- St: Named Arguments <+>
   |           |     +- quadriga argument
   |           |     |  +- planeta2
   |           |     |  +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |     |     +- Op: Literal: "Planeta5" {Ljava/lang/String;} <+>
   |           |     +- quadriga argument
   |           |        +- planeta1
   |           |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |           +- Op: Literal: "Planeta2" {Ljava/lang/String;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           |  |  +- Op: Literal: "Camera" {Ljava/lang/String;} <+>
   |           |  +- cat.quadriga.base.SimpleCamera
   |           |  +- St: Zero Arguments <+>
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.CameraComponent
   |           |     +- St: Named Arguments <+>
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 10.0 {F} <+>
   |           |        |        +- Op: Literal: 10.0 {F} <+>
   |           |        |        +- Op: Literal: 20.0 {F} <+>
   |           |        +- quadriga argument
   |           |        |  +- lookAt
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        |        +- Op: Literal: 0.0 {F} <+>
   |           |        +- quadriga argument
   |           |           +- up
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 0.0 {F} <+>
   |           |                 +- Op: Literal: 1.0 {F} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.SceneComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |        +- Lcat/quadriga/runtime/Entity;
   |              |  |        +- "camera"
   |              |  +- St: Named Arguments <+>
   |              |     +- quadriga argument
   |              |        +- camera
   |              |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;} <+>
   |              |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |              |           +- Op: Literal: "Camera" {Ljava/lang/String;} <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "riskppt3d.demo.DemoMain" : Symbol Type
   |  +- main
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   |     +- thread: riskppt3d.demo.Test
   |     +- Quadriga function
   |        +- St: Block <+>
   |           +- Local Variables:
   |           |  +- Symbol Var [ demo ] Type [ Lcat/quadriga/runtime/Entity; ]
   |           +- Code:
   |              +- St: Statements: <+>
   |              |  +- St: = <+>
   |              |     +- Op: Local variable access: demo {Lcat/quadriga/runtime/Entity;} <+>
   |              |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |              |        +- Op: Literal: Null {Null type} <+>
   |              |        +- Op: Literal: "BaseScene" {Ljava/lang/String;} <+>
   |              +- St: Apply Prototype to Entity <+>
   |              |  +- Op: Local variable access: demo {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- riskppt3d.demo.SimpleDemo
   |              |  +- St: Zero Arguments <+>
   |              +- St: = <+>
   |                 +- Op: Field: {Z} <+>
   |                 |  +- cat.quadriga.render.simple.RenderManager -> renderFPS
   |                 |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                 |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                 +- Op: Literal: true {Z} <+>
   +- "IncrementadorPlanetes" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |  |  +- Lcat/quadriga/runtime/Entity;
   |           |  |  +- entity
   |           |  |  +- Semantic: ENTITY
   |           |  +- parameter
   |           |     +- F
   |           |     +- dt
   |           |     +- Semantic: DELTA_TIME
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |                    |  +- Symbol Var [ desp ] Type [ F ]
   |                    |  +- Symbol Var [ aaRot ] Type [ Ljavax/vecmath/AxisAngle4f; ]
   |                    |  +- Symbol Var [ m ] Type [ Ljavax/vecmath/Matrix4f; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.CameraComponent -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: desp {F} <+>
   |                       |     +- Op: * {F} <+>
   |                       |        +- Op: Literal: 0.3 {F} <+>
   |                       |        +- Op: Local variable access: dt {F} <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: aaRot {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       |     +- Op: Constructor {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       |        +- Ljavax/vecmath/AxisAngle4f;
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Literal: 0.0 {F} <+>
   |                       |           +- Op: Literal: 0.0 {F} <+>
   |                       |           +- Op: Literal: 1.0 {F} <+>
   |                       |           +- Op: Local variable access: desp {F} <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |     +- Op: Constructor {Ljavax/vecmath/Matrix4f;} <+>
   |                       |        +- Ljavax/vecmath/Matrix4f;
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- javax.vecmath.Matrix4f -> set
   |                       |  |  +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Local variable access: aaRot {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- javax.vecmath.Matrix4f -> transform
   |                       |  |  +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   |                       +- St: = <+>
   |                          +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                          |  +- cat.quadriga.base.CameraComponent -> position
   |                          |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                          |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                          |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                          +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   +- "cat.quadriga.base.SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.EndRender
   +- "cat.quadriga.base.TexturedQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.TexturedQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "texture"
   |              |  |        +- Op: Literal: "" {Ljava/lang/String;} <+>
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "riskppt3d.planeta.DadesComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F} <+>
   +- "EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Code:
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> drawAxis
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal: Null {Null type} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                          +- Condition:
   |                          |  +- Op: Call {Z} <+>
   |                          |     +- Op: Static Method: <+>
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments <+>
   |                          +- If Code:
   |                             +- St: Block <+>
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit <+>
   |                                      +- St: Zero Arguments <+>
   +- "javax.vecmath.AxisAngle4f" : Symbol Type
   |  +- Ljavax/vecmath/AxisAngle4f;
   +- "cat.quadriga.base.BillboardRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.FontQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |        |  +- Ljava/lang/String;
   |        |  +- "text"
   |        |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector4f;
   |           +- "color"
   |           +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              +- Ljavax/vecmath/Vector4f;
   |              +- St: Zero Arguments <+>
   +- "SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.EndRender
   +- "cat.quadriga.base.EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Code:
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> drawAxis
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal: Null {Null type} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Static Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments <+>
   |                       +- St: If Statement: <+>
   |                          +- Condition:
   |                          |  +- Op: Call {Z} <+>
   |                          |     +- Op: Static Method: <+>
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments <+>
   |                          +- If Code:
   |                             +- St: Block <+>
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit <+>
   |                                      +- St: Zero Arguments <+>
   +- "cat.quadriga.render.simple.Node" : Symbol Type
   |  +- Lcat/quadriga/render/simple/Node;
   +- "riskppt3d.demo.Test" : Symbol Type
   |  +- thread <+>
   |     +- riskppt3d.demo.IncrementadorPlanetes
   +- "cat.quadriga.base.FontQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.FontQuad} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments <+>
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljava/lang/String;
   |              |  |     |  +- "text"
   |              |  |     |  +- Op: Literal: "" {Ljava/lang/String;} <+>
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector4f;
   |              |  |        +- "color"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector4f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector4f;
   |              |  |           +- St: Zero Arguments <+>
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "cat.quadriga.base.CilynderRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos1"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos2"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 1.0 {F} <+>
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F} <+>
   +- "SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "cat.quadriga.base.CameraComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "lookAt"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 0.0 {F} <+>
   |        |        +- Op: Literal: 1.0 {F} <+>
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector3f;
   |           +- "up"
   |           +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              +- Ljavax/vecmath/Vector3f;
   |              +- St: Arguments <+>
   |                 +- Op: Literal: 0.0 {F} <+>
   |                 +- Op: Literal: 1.0 {F} <+>
   |                 +- Op: Literal: 0.0 {F} <+>
   +- "javax.vecmath.Vector4f" : Symbol Type
   |  +- Ljavax/vecmath/Vector4f;
   +- "cat.quadriga.base.Materials" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- [Lcat/quadriga/java/base/BaseMaterial;
   |           +- "materials"
   |           +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |              +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;} <+>
   |                 +- Lcat/quadriga/java/base/BaseMaterial;
   |                 +- Op: Literal: 0 {I} <+>
   +- "TexturedQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments <+>
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "texture"
   |           +- Op: Literal: "" {Ljava/lang/String;} <+>
   +- "riskppt3d.planeta.PlanetaInfo" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F} <+>
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;} <+>
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 0.0 {F} <+>
   |           |  |  |              +- Op: Literal: 1.0 {F} <+>
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Add Component <+>
   |           |  +- Op: Component Allocation {cat.quadriga.base.BillboardRenderer} <+>
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  +- St: Zero Arguments <+>
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |           +- St: Apply Prototype to Entity <+>
   |              +- Op: New Entity {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   |              |  +- Op: Literal: "Quad" {Ljava/lang/String;} <+>
   |              +- riskppt3d.planeta.PlanetInfoQuad
   |              +- St: Zero Arguments <+>
   +- "cat.quadriga.base.SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal: 45.0 {F} <+>
   |                       |     +- Op: Literal: 1.0 {F} <+>
   |                       |     +- Op: Literal: 99.0 {F} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   +- "java.lang.String" : Symbol Type
   |  +- Ljava/lang/String;
   +- "SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Literal: 45.0 {F} <+>
   |                       |     +- Op: Literal: 1.0 {F} <+>
   |                       |     +- Op: Literal: 99.0 {F} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   +- "cat.quadriga.base.SphereRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F} <+>
   +- "cat.quadriga.base.StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                          +- Op: Method: <+>
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                          +- St: Zero Arguments <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "cat.quadriga.render.simple.RenderManager" : Symbol Type
   |  +- Lcat/quadriga/render/simple/RenderManager;
   +- "riskppt3d.demo.IncrementadorPlanetes" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |  |  +- Lcat/quadriga/runtime/Entity;
   |           |  |  +- entity
   |           |  |  +- Semantic: ENTITY
   |           |  +- parameter
   |           |     +- F
   |           |     +- dt
   |           |     +- Semantic: DELTA_TIME
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |                    |  +- Symbol Var [ desp ] Type [ F ]
   |                    |  +- Symbol Var [ aaRot ] Type [ Ljavax/vecmath/AxisAngle4f; ]
   |                    |  +- Symbol Var [ m ] Type [ Ljavax/vecmath/Matrix4f; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                       |        +- cat.quadriga.base.CameraComponent -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                       |           +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: desp {F} <+>
   |                       |     +- Op: * {F} <+>
   |                       |        +- Op: Literal: 0.3 {F} <+>
   |                       |        +- Op: Local variable access: dt {F} <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: aaRot {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       |     +- Op: Constructor {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       |        +- Ljavax/vecmath/AxisAngle4f;
   |                       |        +- St: Arguments <+>
   |                       |           +- Op: Literal: 0.0 {F} <+>
   |                       |           +- Op: Literal: 0.0 {F} <+>
   |                       |           +- Op: Literal: 1.0 {F} <+>
   |                       |           +- Op: Local variable access: desp {F} <+>
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |     +- Op: Constructor {Ljavax/vecmath/Matrix4f;} <+>
   |                       |        +- Ljavax/vecmath/Matrix4f;
   |                       |        +- St: Zero Arguments <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- javax.vecmath.Matrix4f -> set
   |                       |  |  +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Local variable access: aaRot {Ljavax/vecmath/AxisAngle4f;} <+>
   |                       +- St: Statement From Expression : Call <+>
   |                       |  +- Op: Method: <+>
   |                       |  |  +- javax.vecmath.Matrix4f -> transform
   |                       |  |  +- Op: Local variable access: m {Ljavax/vecmath/Matrix4f;} <+>
   |                       |  +- St: Arguments <+>
   |                       |     +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   |                       +- St: = <+>
   |                          +- Op: Component Field: {Ljavax/vecmath/Vector3f;} <+>
   |                          |  +- cat.quadriga.base.CameraComponent -> position
   |                          |  +- Op: Component Access {cat.quadriga.base.CameraComponent} <+>
   |                          |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                          |     +- Op: Type Access: cat.quadriga.base.CameraComponent <+>
   |                          +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;} <+>
   +- "cat.quadriga.base.SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block <+>
   |     |        +- Code:
   |     |           +- St: Block <+>
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements: <+>
   |     |                 |  +- St: = <+>
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call <+>
   |     |                    +- Op: Method: <+>
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |     |                    +- St: Arguments <+>
   |     |                       +- Op: Call {I} <+>
   |     |                       |  +- Op: Method: <+>
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                       |  +- St: Zero Arguments <+>
   |     |                       +- Op: Component Field: {F} <+>
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer} <+>
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer <+>
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block <+>
   |              +- Code:
   |                 +- St: Block <+>
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements: <+>
   |                       |  +- St: = <+>
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call <+>
   |                          +- Op: Method: <+>
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;} <+>
   |                          +- St: Arguments <+>
   |                             +- Op: Call {I} <+>
   |                                +- Op: Method: <+>
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;} <+>
   |                                +- St: Zero Arguments <+>
   +- "cat.quadriga.base.SimpleCamera" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block <+>
   |        +- Code:
   |           +- St: Add Component <+>
   |              +- Op: Component Allocation {cat.quadriga.base.CameraComponent} <+>
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal: 0.0 {F} <+>
   |              |  |     |        +- Op: Literal: 0.0 {F} <+>
   |              |  |     |        +- Op: Literal: 0.0 {F} <+>
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "lookAt"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments <+>
   |              |  |     |        +- Op: Literal: 0.0 {F} <+>
   |              |  |     |        +- Op: Literal: 0.0 {F} <+>
   |              |  |     |        +- Op: Literal: 1.0 {F} <+>
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector3f;
   |              |  |        +- "up"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;} <+>
   |              |  |           +- Ljavax/vecmath/Vector3f;
   |              |  |           +- St: Arguments <+>
   |              |  |              +- Op: Literal: 0.0 {F} <+>
   |              |  |              +- Op: Literal: 1.0 {F} <+>
   |              |  |              +- Op: Literal: 0.0 {F} <+>
   |              |  +- St: Zero Arguments <+>
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;} <+>
   +- "javax.vecmath.Vector3f" : Symbol Type
      +- Ljavax/vecmath/Vector3f;