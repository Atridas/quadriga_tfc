
+- Globals
   +- "cat.quadriga.java.base.BaseMaterial" : Symbol Type
   |  +- Lcat/quadriga/java/base/BaseMaterial;
   +- "cat.quadriga.base.TextRendererPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- Ljava/lang/String;
   |     |  |  +- text
   |     |  +- parameter
   |     |     +- Ljava/lang/String;
   |     |     +- font
   |     +- St: Block
   |        +- Local Variables:
   |        |  +- Symbol Var [ text ] Type [ Ljava/lang/String; ]
   |        |  +- Symbol Var [ font ] Type [ Ljava/lang/String; ]
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.TextRenderer}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljava/lang/String;
   |              |  |     |  +- "text"
   |              |  |     |  +- Op: Literal: "" {Ljava/lang/String;}
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "font"
   |              |  +- St: Named Arguments
   |              |     +- quadriga argument
   |              |     |  +- text
   |              |     |  +- Op: Local variable access: text {Ljava/lang/String;}
   |              |     +- quadriga argument
   |              |        +- font
   |              |        +- Op: Local variable access: font {Ljava/lang/String;}
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "tetris.tetris.LlògicaPeça" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.CPeça
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |  |  +- Lcat/quadriga/runtime/Entity;
   |     |     |  |  +- entitat
   |     |     |  |  +- Semantic: ENTITY
   |     |     |  +- parameter
   |     |     |     +- F
   |     |     |     +- dt
   |     |     |     +- Semantic: DELTA_TIME
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ t ] Type [ F ]
   |     |              |  +- Symbol Var [ llindar ] Type [ F ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: t {F}
   |     |                 |     +- Op: + {F}
   |     |                 |        +- Op: Component Field: {F}
   |     |                 |        |  +- tetris.tetris.CPeça -> t
   |     |                 |        |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                 |        |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                 |        |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                 |        +- Op: Local variable access: dt {F}
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: llindar {F}
   |     |                 |     +- Op: / {F}
   |     |                 |        +- Op: Literal: 10.0 {F}
   |     |                 |        +- Op: + {F}
   |     |                 |           +- Op: Literal: 10.0 {F}
   |     |                 |           +- Op: Component Field: {I}
   |     |                 |              +- tetris.tetris.Puntuació -> nivell
   |     |                 |              +- Op: Component Access {tetris.tetris.Puntuació}
   |     |                 |                 +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                 |                 |  +- tetris.tetris.CPeça -> taulell
   |     |                 |                 |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                 |                 |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                 |                 |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                 |                 +- Op: Type Access: tetris.tetris.Puntuació
   |     |                 +- St: If Statement:
   |     |                    +- Condition:
   |     |                    |  +- Op: > {Z}
   |     |                    |     +- Op: Local variable access: t {F}
   |     |                    |     +- Op: Local variable access: llindar {F}
   |     |                    +- If Code:
   |     |                    |  +- St: Block
   |     |                    |     +- Local Variables:
   |     |                    |     |  +- Symbol Var [ px ] Type [ [I ]
   |     |                    |     |  +- Symbol Var [ py ] Type [ [I ]
   |     |                    |     |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |     |                    |     +- Code:
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {F}
   |     |                    |        |  |  +- tetris.tetris.CPeça -> t
   |     |                    |        |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        |  +- Op: % {F}
   |     |                    |        |     +- Op: Local variable access: t {F}
   |     |                    |        |     +- Op: Local variable access: llindar {F}
   |     |                    |        +- St: Statements:
   |     |                    |        |  +- St: =
   |     |                    |        |     +- Op: Local variable access: px {[I}
   |     |                    |        |     +- Op: Component Field: {[I}
   |     |                    |        |        +- tetris.tetris.CPeça -> px
   |     |                    |        |        +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |           +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        +- St: Statements:
   |     |                    |        |  +- St: =
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Component Field: {[I}
   |     |                    |        |        +- tetris.tetris.CPeça -> py
   |     |                    |        |        +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |           +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 0 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 1 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 2 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 3 {I}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {[I}
   |     |                    |        |  |  +- tetris.tetris.CPeça -> py
   |     |                    |        |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        |  +- Op: Local variable access: py {[I}
   |     |                    |        +- St: Statements:
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 0 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 1 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 2 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 3 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: for
   |     |                    |           +- Local Variables:
   |     |                    |           |  +- Symbol Var [ i ] Type [ I ]
   |     |                    |           +- St: Statements:
   |     |                    |           |  +- St: =
   |     |                    |           |     +- Op: Local variable access: i {I}
   |     |                    |           |     +- Op: Literal: 0 {I}
   |     |                    |           +- Op: < {Z}
   |     |                    |           |  +- Op: Local variable access: i {I}
   |     |                    |           |  +- Op: Literal: 4 {I}
   |     |                    |           +- St: Statements:
   |     |                    |           |  +- St: Statement From Expression : ++X
   |     |                    |           |     +- Op: Local variable access: i {I}
   |     |                    |           +- St: Block
   |     |                    |              +- Code:
   |     |                    |                 +- St: If Statement:
   |     |                    |                    +- Condition:
   |     |                    |                    |  +- Op: || {Z}
   |     |                    |                    |     +- Op: < {Z}
   |     |                    |                    |     |  +- Op: Array Access {I}
   |     |                    |                    |     |  |  +- Op: Local variable access: py {[I}
   |     |                    |                    |     |  |  +- Op: Local variable access: i {I}
   |     |                    |                    |     |  +- Op: Literal: 0 {I}
   |     |                    |                    |     +- Op: != {Z}
   |     |                    |                    |        +- Op: Array Access {I}
   |     |                    |                    |        |  +- Op: Array Access {[I}
   |     |                    |                    |        |  |  +- Op: Component Field: {[[I}
   |     |                    |                    |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |     |                    |                    |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |     |                    |                    |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                    |                    |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |     |                    |                    |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                    |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                    |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                    |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |     |                    |                    |        |  |  +- Op: Array Access {I}
   |     |                    |                    |        |  |     +- Op: Local variable access: px {[I}
   |     |                    |                    |        |  |     +- Op: Local variable access: i {I}
   |     |                    |                    |        |  +- Op: Array Access {I}
   |     |                    |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |                    |        |     +- Op: Local variable access: i {I}
   |     |                    |                    |        +- Op: Literal: 0 {I}
   |     |                    |                    +- If Code:
   |     |                    |                       +- St: Block
   |     |                    |                          +- Local Variables:
   |     |                    |                          |  +- Symbol Var [ tipus ] Type [ I ]
   |     |                    |                          +- Code:
   |     |                    |                             +- St: Statements:
   |     |                    |                             |  +- St: =
   |     |                    |                             |     +- Op: Local variable access: tipus {I}
   |     |                    |                             |     +- Op: + {I}
   |     |                    |                             |        +- Op: Call {I}
   |     |                    |                             |        |  +- Op: Method:
   |     |                    |                             |        |  |  +- java.util.Random -> nextInt
   |     |                    |                             |        |  |  +- Op: RND {Ljava/util/Random;}
   |     |                    |                             |        |  +- St: Arguments
   |     |                    |                             |        |     +- Op: Literal: 7 {I}
   |     |                    |                             |        +- Op: Literal: 1 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 0 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 1 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 2 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 3 {I}
   |     |                    |                             +- St: Call to Event tetris.tetris.InsertarPeça
   |     |                    |                             |  +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  |  +- tetris.tetris.CPeça -> taulell
   |     |                    |                             |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                             |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                             |  +- St: Named Arguments
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |     |  +- px
   |     |                    |                             |     |  +- Op: Local variable access: px {[I}
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |     |  +- color
   |     |                    |                             |     |  +- Op: Component Field: {I}
   |     |                    |                             |     |     +- tetris.tetris.CPeça -> tipus
   |     |                    |                             |     |     +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                             |     |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |     |        +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |        +- py
   |     |                    |                             |        +- Op: Local variable access: py {[I}
   |     |                    |                             +- St: Call to Event tetris.tetris.NovaPeça
   |     |                    |                             |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  +- St: Named Arguments
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |        +- tipus
   |     |                    |                             |        +- Op: Local variable access: tipus {I}
   |     |                    |                             +- St: break
   |     |                    +- Else Code:
   |     |                       +- St: Block
   |     |                          +- Code:
   |     |                             +- St: =
   |     |                                +- Op: Component Field: {F}
   |     |                                |  +- tetris.tetris.CPeça -> t
   |     |                                |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                                |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                                |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                                +- Op: Local variable access: t {F}
   |     +- EventHandlers
   |        +- tetris.tetris.NovaPeça
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |  |  +- tetris.tetris.NovaPeça
   |        |     |  |  +- event
   |        |     |  |  +- Semantic: EVENT
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ color ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {I}
   |        |                 |  |  +- tetris.tetris.CPeça -> tipus
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Event Field: {I}
   |        |                 |     +- tetris.tetris.NovaPeça -> tipus
   |        |                 |     +- Op: Local variable access: event {tetris.tetris.NovaPeça}
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 +- St: switch
   |        |                 |  +- Op: Event Field: {I}
   |        |                 |  |  +- tetris.tetris.NovaPeça -> tipus
   |        |                 |  |  +- Op: Local variable access: event {tetris.tetris.NovaPeça}
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: = {I}
   |        |                 |  |  |           +- Op: Array Access {I}
   |        |                 |  |  |           |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |           |  +- Op: Literal: 3 {I}
   |        |                 |  |  |           +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |     +- Op: Literal: 7 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 0 {I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 1 {I}
   |        |                 |     |  +- Op: Literal: 4 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 2 {I}
   |        |                 |     |  +- Op: Literal: 5 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 3 {I}
   |        |                 |     |  +- Op: Literal: 4 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: py {[I}
   |        |                 |     |  |  +- Op: Literal: 0 {I}
   |        |                 |     |  +- Op: = {I}
   |        |                 |     |     +- Op: Array Access {I}
   |        |                 |     |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |     |  +- Op: Literal: 1 {I}
   |        |                 |     |     +- Op: = {I}
   |        |                 |     |        +- Op: Array Access {I}
   |        |                 |     |        |  +- Op: Local variable access: py {[I}
   |        |                 |     |        |  +- Op: Literal: 2 {I}
   |        |                 |     |        +- Op: Literal: 17 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: py {[I}
   |        |                 |     |  |  +- Op: Literal: 3 {I}
   |        |                 |     |  +- Op: Literal: 16 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |     |     +- Ljavax/vecmath/Vector3f;
   |        |                 |     |     +- St: Arguments
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                    |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                    +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ETurnR
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ stop ] Type [ Z ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Local Variables:
   |        |                 |     |  +- Symbol Var [ x ] Type [ I ]
   |        |                 |     |  +- Symbol Var [ y ] Type [ I ]
   |        |                 |     +- Code:
   |        |                 |        +- St: Statements:
   |        |                 |        |  +- St: =
   |        |                 |        |     +- Op: Local variable access: x {I}
   |        |                 |        |     +- Op: - {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |        |  +- Op: Local variable access: px {[I}
   |        |                 |        |        |  +- Op: Literal: 1 {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |           +- Op: Local variable access: px {[I}
   |        |                 |        |           +- Op: Local variable access: i {I}
   |        |                 |        +- St: Statements:
   |        |                 |        |  +- St: =
   |        |                 |        |     +- Op: Local variable access: y {I}
   |        |                 |        |     +- Op: - {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |        |  +- Op: Local variable access: py {[I}
   |        |                 |        |        |  +- Op: Literal: 1 {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |           +- Op: Local variable access: py {[I}
   |        |                 |        |           +- Op: Local variable access: i {I}
   |        |                 |        +- St: =
   |        |                 |        |  +- Op: Array Access {I}
   |        |                 |        |  |  +- Op: Local variable access: px {[I}
   |        |                 |        |  |  +- Op: Local variable access: i {I}
   |        |                 |        |  +- Op: - {I}
   |        |                 |        |     +- Op: Array Access {I}
   |        |                 |        |     |  +- Op: Local variable access: px {[I}
   |        |                 |        |     |  +- Op: Literal: 1 {I}
   |        |                 |        |     +- Op: Local variable access: y {I}
   |        |                 |        +- St: =
   |        |                 |           +- Op: Array Access {I}
   |        |                 |           |  +- Op: Local variable access: py {[I}
   |        |                 |           |  +- Op: Local variable access: i {I}
   |        |                 |           +- Op: + {I}
   |        |                 |              +- Op: Array Access {I}
   |        |                 |              |  +- Op: Local variable access: py {[I}
   |        |                 |              |  +- Op: Literal: 1 {I}
   |        |                 |              +- Op: Local variable access: x {I}
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: stop {Z}
   |        |                 |     +- Op: Literal: false {Z}
   |        |                 +- St: while
   |        |                 |  +- Op: ! {Z}
   |        |                 |  |  +- Op: Local variable access: stop {Z}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: =
   |        |                 |        |  +- Op: Local variable access: stop {Z}
   |        |                 |        |  +- Op: Literal: true {Z}
   |        |                 |        +- St: for
   |        |                 |           +- Local Variables:
   |        |                 |           |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |           +- St: Statements:
   |        |                 |           |  +- St: =
   |        |                 |           |     +- Op: Local variable access: i {I}
   |        |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |           +- Op: < {Z}
   |        |                 |           |  +- Op: Local variable access: i {I}
   |        |                 |           |  +- Op: Literal: 4 {I}
   |        |                 |           +- St: Statements:
   |        |                 |           |  +- St: Statement From Expression : ++X
   |        |                 |           |     +- Op: Local variable access: i {I}
   |        |                 |           +- St: Block
   |        |                 |              +- Code:
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: < {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: px {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: >= {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: px {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 10 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: < {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: >= {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 18 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                    +- Condition:
   |        |                 |                    |  +- Op: != {Z}
   |        |                 |                    |     +- Op: Array Access {I}
   |        |                 |                    |     |  +- Op: Array Access {[I}
   |        |                 |                    |     |  |  +- Op: Component Field: {[[I}
   |        |                 |                    |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |                    |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |                    |     |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |                    |     |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |                    |     |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |                    |     |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |                    |     |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |                    |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |                    |     |  |  +- Op: Array Access {I}
   |        |                 |                    |     |  |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     |  |     +- Op: Local variable access: i {I}
   |        |                 |                    |     |  +- Op: Array Access {I}
   |        |                 |                    |     |     +- Op: Local variable access: py {[I}
   |        |                 |                    |     |     +- Op: Local variable access: i {I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- If Code:
   |        |                 |                       +- St: Block
   |        |                 |                          +- Code:
   |        |                 |                             +- St: for
   |        |                 |                             |  +- Local Variables:
   |        |                 |                             |  |  +- Symbol Var [ j ] Type [ I ]
   |        |                 |                             |  +- St: Statements:
   |        |                 |                             |  |  +- St: =
   |        |                 |                             |  |     +- Op: Local variable access: j {I}
   |        |                 |                             |  |     +- Op: Literal: 0 {I}
   |        |                 |                             |  +- Op: < {Z}
   |        |                 |                             |  |  +- Op: Local variable access: j {I}
   |        |                 |                             |  |  +- Op: Literal: 4 {I}
   |        |                 |                             |  +- St: Statements:
   |        |                 |                             |  |  +- St: Statement From Expression : ++X
   |        |                 |                             |  |     +- Op: Local variable access: j {I}
   |        |                 |                             |  +- St: Block
   |        |                 |                             |     +- Code:
   |        |                 |                             |        +- St: If Statement:
   |        |                 |                             |           +- Condition:
   |        |                 |                             |           |  +- Op: == {Z}
   |        |                 |                             |           |     +- Op: Array Access {I}
   |        |                 |                             |           |     |  +- Op: Local variable access: py {[I}
   |        |                 |                             |           |     |  +- Op: Local variable access: j {I}
   |        |                 |                             |           |     +- Op: Literal: 17 {I}
   |        |                 |                             |           +- If Code:
   |        |                 |                             |              +- St: Block
   |        |                 |                             |                 +- Local Variables:
   |        |                 |                             |                 |  +- Symbol Var [ gotoLeft ] Type [ Z ]
   |        |                 |                             |                 +- Code:
   |        |                 |                             |                    +- St: Statements:
   |        |                 |                             |                    |  +- St: =
   |        |                 |                             |                    |     +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |     +- Op: Literal: true {Z}
   |        |                 |                             |                    +- St: for
   |        |                 |                             |                    |  +- Local Variables:
   |        |                 |                             |                    |  |  +- Symbol Var [ k ] Type [ I ]
   |        |                 |                             |                    |  +- St: Statements:
   |        |                 |                             |                    |  |  +- St: =
   |        |                 |                             |                    |  |     +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |  +- Op: < {Z}
   |        |                 |                             |                    |  |  +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  |  +- Op: Literal: 4 {I}
   |        |                 |                             |                    |  +- St: Statements:
   |        |                 |                             |                    |  |  +- St: Statement From Expression : ++X
   |        |                 |                             |                    |  |     +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  +- St: Block
   |        |                 |                             |                    |     +- Code:
   |        |                 |                             |                    |        +- St: If Statement:
   |        |                 |                             |                    |           +- Condition:
   |        |                 |                             |                    |           |  +- Op: == {Z}
   |        |                 |                             |                    |           |     +- Op: Array Access {I}
   |        |                 |                             |                    |           |     |  +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     |  +- Op: Local variable access: k {I}
   |        |                 |                             |                    |           |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |           +- If Code:
   |        |                 |                             |                    |              +- St: Block
   |        |                 |                             |                    |                 +- Code:
   |        |                 |                             |                    |                    +- St: =
   |        |                 |                             |                    |                    |  +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |                    |  +- Op: Literal: false {Z}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 3 {I}
   |        |                 |                             |                    |                    +- St: break
   |        |                 |                             |                    +- St: If Statement:
   |        |                 |                             |                    |  +- Condition:
   |        |                 |                             |                    |  |  +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |  +- If Code:
   |        |                 |                             |                    |     +- St: Block
   |        |                 |                             |                    |        +- Code:
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |              +- Op: Array Access {I}
   |        |                 |                             |                    |                 +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                 +- Op: Literal: 3 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                       +- Op: Array Access {I}
   |        |                 |                             |                          +- Op: Local variable access: py {[I}
   |        |                 |                             |                          +- Op: Literal: 3 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 0 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 1 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 2 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 3 {I}
   |        |                 |                             +- St: =
   |        |                 |                             |  +- Op: Local variable access: stop {Z}
   |        |                 |                             |  +- Op: Literal: false {Z}
   |        |                 |                             +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ERight
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: If Statement:
   |        |                 |           +- Condition:
   |        |                 |           |  +- Op: || {Z}
   |        |                 |           |     +- Op: < {Z}
   |        |                 |           |     |  +- Op: Array Access {I}
   |        |                 |           |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |           |     |  |  +- Op: Local variable access: i {I}
   |        |                 |           |     |  +- Op: Literal: 0 {I}
   |        |                 |           |     +- Op: != {Z}
   |        |                 |           |        +- Op: Array Access {I}
   |        |                 |           |        |  +- Op: Array Access {[I}
   |        |                 |           |        |  |  +- Op: Component Field: {[[I}
   |        |                 |           |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |           |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |           |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |           |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |           |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |           |        |  |  +- Op: Array Access {I}
   |        |                 |           |        |  |     +- Op: Local variable access: px {[I}
   |        |                 |           |        |  |     +- Op: Local variable access: i {I}
   |        |                 |           |        |  +- Op: Array Access {I}
   |        |                 |           |        |     +- Op: Local variable access: py {[I}
   |        |                 |           |        |     +- Op: Local variable access: i {I}
   |        |                 |           |        +- Op: Literal: 0 {I}
   |        |                 |           +- If Code:
   |        |                 |              +- St: Block
   |        |                 |                 +- Code:
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 1 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 2 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 3 {I}
   |        |                 |                    +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ELeft
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: If Statement:
   |        |                 |           +- Condition:
   |        |                 |           |  +- Op: || {Z}
   |        |                 |           |     +- Op: > {Z}
   |        |                 |           |     |  +- Op: Array Access {I}
   |        |                 |           |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |           |     |  |  +- Op: Local variable access: i {I}
   |        |                 |           |     |  +- Op: Literal: 9 {I}
   |        |                 |           |     +- Op: != {Z}
   |        |                 |           |        +- Op: Array Access {I}
   |        |                 |           |        |  +- Op: Array Access {[I}
   |        |                 |           |        |  |  +- Op: Component Field: {[[I}
   |        |                 |           |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |           |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |           |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |           |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |           |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |           |        |  |  +- Op: Array Access {I}
   |        |                 |           |        |  |     +- Op: Local variable access: px {[I}
   |        |                 |           |        |  |     +- Op: Local variable access: i {I}
   |        |                 |           |        |  +- Op: Array Access {I}
   |        |                 |           |        |     +- Op: Local variable access: py {[I}
   |        |                 |           |        |     +- Op: Local variable access: i {I}
   |        |                 |           |        +- Op: Literal: 0 {I}
   |        |                 |           +- If Code:
   |        |                 |              +- St: Block
   |        |                 |                 +- Code:
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 1 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 2 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 3 {I}
   |        |                 |                    +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.EDown
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: for
   |        |                    +- Local Variables:
   |        |                    |  +- Symbol Var [ i ] Type [ I ]
   |        |                    +- St: Statements:
   |        |                    |  +- St: =
   |        |                    |     +- Op: Local variable access: i {I}
   |        |                    |     +- Op: Literal: 0 {I}
   |        |                    +- Op: < {Z}
   |        |                    |  +- Op: Local variable access: i {I}
   |        |                    |  +- Op: Literal: 4 {I}
   |        |                    +- St: Statements:
   |        |                    |  +- St: Statement From Expression : ++X
   |        |                    |     +- Op: Local variable access: i {I}
   |        |                    +- St: Block
   |        |                       +- Code:
   |        |                          +- St: If Statement:
   |        |                             +- Condition:
   |        |                             |  +- Op: || {Z}
   |        |                             |     +- Op: < {Z}
   |        |                             |     |  +- Op: Array Access {I}
   |        |                             |     |  |  +- Op: Local variable access: py {[I}
   |        |                             |     |  |  +- Op: Local variable access: i {I}
   |        |                             |     |  +- Op: Literal: 0 {I}
   |        |                             |     +- Op: != {Z}
   |        |                             |        +- Op: Array Access {I}
   |        |                             |        |  +- Op: Array Access {[I}
   |        |                             |        |  |  +- Op: Component Field: {[[I}
   |        |                             |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                             |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                             |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                             |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                             |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                             |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                             |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                             |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                             |        |  |  +- Op: Array Access {I}
   |        |                             |        |  |     +- Op: Local variable access: px {[I}
   |        |                             |        |  |     +- Op: Local variable access: i {I}
   |        |                             |        |  +- Op: Array Access {I}
   |        |                             |        |     +- Op: Local variable access: py {[I}
   |        |                             |        |     +- Op: Local variable access: i {I}
   |        |                             |        +- Op: Literal: 0 {I}
   |        |                             +- If Code:
   |        |                                +- St: Block
   |        |                                   +- Local Variables:
   |        |                                   |  +- Symbol Var [ tipus ] Type [ I ]
   |        |                                   +- Code:
   |        |                                      +- St: Statements:
   |        |                                      |  +- St: =
   |        |                                      |     +- Op: Local variable access: tipus {I}
   |        |                                      |     +- Op: + {I}
   |        |                                      |        +- Op: Call {I}
   |        |                                      |        |  +- Op: Method:
   |        |                                      |        |  |  +- java.util.Random -> nextInt
   |        |                                      |        |  |  +- Op: RND {Ljava/util/Random;}
   |        |                                      |        |  +- St: Arguments
   |        |                                      |        |     +- Op: Literal: 7 {I}
   |        |                                      |        +- Op: Literal: 1 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 0 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 1 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 2 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 3 {I}
   |        |                                      +- St: Call to Event tetris.tetris.InsertarPeça
   |        |                                      |  +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  |  +- tetris.tetris.CPeça -> taulell
   |        |                                      |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                                      |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                                      |  +- St: Named Arguments
   |        |                                      |     +- quadriga argument
   |        |                                      |     |  +- px
   |        |                                      |     |  +- Op: Local variable access: px {[I}
   |        |                                      |     +- quadriga argument
   |        |                                      |     |  +- color
   |        |                                      |     |  +- Op: Component Field: {I}
   |        |                                      |     |     +- tetris.tetris.CPeça -> tipus
   |        |                                      |     |     +- Op: Component Access {tetris.tetris.CPeça}
   |        |                                      |     |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |     |        +- Op: Type Access: tetris.tetris.CPeça
   |        |                                      |     +- quadriga argument
   |        |                                      |        +- py
   |        |                                      |        +- Op: Local variable access: py {[I}
   |        |                                      +- St: Call to Event tetris.tetris.NovaPeça
   |        |                                      |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  +- St: Named Arguments
   |        |                                      |     +- quadriga argument
   |        |                                      |        +- tipus
   |        |                                      |        +- Op: Local variable access: tipus {I}
   |        |                                      +- St: break
   |        +- tetris.input.ETurnL
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Local Variables:
   |                       |  +- Symbol Var [ px ] Type [ [I ]
   |                       |  +- Symbol Var [ py ] Type [ [I ]
   |                       |  +- Symbol Var [ stop ] Type [ Z ]
   |                       |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |                       +- Code:
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: px {[I}
   |                          |     +- Op: Component Field: {[I}
   |                          |        +- tetris.tetris.CPeça -> px
   |                          |        +- Op: Component Access {tetris.tetris.CPeça}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.CPeça
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: py {[I}
   |                          |     +- Op: Component Field: {[I}
   |                          |        +- tetris.tetris.CPeça -> py
   |                          |        +- Op: Component Access {tetris.tetris.CPeça}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.CPeça
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: i {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ x ] Type [ I ]
   |                          |     |  +- Symbol Var [ y ] Type [ I ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: x {I}
   |                          |        |     +- Op: - {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |        |  +- Op: Local variable access: px {[I}
   |                          |        |        |  +- Op: Literal: 1 {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |           +- Op: Local variable access: px {[I}
   |                          |        |           +- Op: Local variable access: i {I}
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: y {I}
   |                          |        |     +- Op: - {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |        |  +- Op: Local variable access: py {[I}
   |                          |        |        |  +- Op: Literal: 1 {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |           +- Op: Local variable access: py {[I}
   |                          |        |           +- Op: Local variable access: i {I}
   |                          |        +- St: =
   |                          |        |  +- Op: Array Access {I}
   |                          |        |  |  +- Op: Local variable access: px {[I}
   |                          |        |  |  +- Op: Local variable access: i {I}
   |                          |        |  +- Op: + {I}
   |                          |        |     +- Op: Array Access {I}
   |                          |        |     |  +- Op: Local variable access: px {[I}
   |                          |        |     |  +- Op: Literal: 1 {I}
   |                          |        |     +- Op: Local variable access: y {I}
   |                          |        +- St: =
   |                          |           +- Op: Array Access {I}
   |                          |           |  +- Op: Local variable access: py {[I}
   |                          |           |  +- Op: Local variable access: i {I}
   |                          |           +- Op: - {I}
   |                          |              +- Op: Array Access {I}
   |                          |              |  +- Op: Local variable access: py {[I}
   |                          |              |  +- Op: Literal: 1 {I}
   |                          |              +- Op: Local variable access: x {I}
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: stop {Z}
   |                          |     +- Op: Literal: false {Z}
   |                          +- St: while
   |                          |  +- Op: ! {Z}
   |                          |  |  +- Op: Local variable access: stop {Z}
   |                          |  +- St: Block
   |                          |     +- Code:
   |                          |        +- St: =
   |                          |        |  +- Op: Local variable access: stop {Z}
   |                          |        |  +- Op: Literal: true {Z}
   |                          |        +- St: for
   |                          |           +- Local Variables:
   |                          |           |  +- Symbol Var [ i ] Type [ I ]
   |                          |           +- St: Statements:
   |                          |           |  +- St: =
   |                          |           |     +- Op: Local variable access: i {I}
   |                          |           |     +- Op: Literal: 0 {I}
   |                          |           +- Op: < {Z}
   |                          |           |  +- Op: Local variable access: i {I}
   |                          |           |  +- Op: Literal: 4 {I}
   |                          |           +- St: Statements:
   |                          |           |  +- St: Statement From Expression : ++X
   |                          |           |     +- Op: Local variable access: i {I}
   |                          |           +- St: Block
   |                          |              +- Code:
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: < {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: px {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 0 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: >= {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: px {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 10 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: < {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: py {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 0 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: >= {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: py {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 18 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                    +- Condition:
   |                          |                    |  +- Op: != {Z}
   |                          |                    |     +- Op: Array Access {I}
   |                          |                    |     |  +- Op: Array Access {[I}
   |                          |                    |     |  |  +- Op: Component Field: {[[I}
   |                          |                    |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |                          |                    |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |                    |     |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |                          |                    |     |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |                          |                    |     |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |                    |     |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                    |     |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |                    |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |                    |     |  |  +- Op: Array Access {I}
   |                          |                    |     |  |     +- Op: Local variable access: px {[I}
   |                          |                    |     |  |     +- Op: Local variable access: i {I}
   |                          |                    |     |  +- Op: Array Access {I}
   |                          |                    |     |     +- Op: Local variable access: py {[I}
   |                          |                    |     |     +- Op: Local variable access: i {I}
   |                          |                    |     +- Op: Literal: 0 {I}
   |                          |                    +- If Code:
   |                          |                       +- St: Block
   |                          |                          +- Code:
   |                          |                             +- St: for
   |                          |                             |  +- Local Variables:
   |                          |                             |  |  +- Symbol Var [ j ] Type [ I ]
   |                          |                             |  +- St: Statements:
   |                          |                             |  |  +- St: =
   |                          |                             |  |     +- Op: Local variable access: j {I}
   |                          |                             |  |     +- Op: Literal: 0 {I}
   |                          |                             |  +- Op: < {Z}
   |                          |                             |  |  +- Op: Local variable access: j {I}
   |                          |                             |  |  +- Op: Literal: 4 {I}
   |                          |                             |  +- St: Statements:
   |                          |                             |  |  +- St: Statement From Expression : ++X
   |                          |                             |  |     +- Op: Local variable access: j {I}
   |                          |                             |  +- St: Block
   |                          |                             |     +- Code:
   |                          |                             |        +- St: If Statement:
   |                          |                             |           +- Condition:
   |                          |                             |           |  +- Op: == {Z}
   |                          |                             |           |     +- Op: Array Access {I}
   |                          |                             |           |     |  +- Op: Local variable access: py {[I}
   |                          |                             |           |     |  +- Op: Local variable access: j {I}
   |                          |                             |           |     +- Op: Literal: 17 {I}
   |                          |                             |           +- If Code:
   |                          |                             |              +- St: Block
   |                          |                             |                 +- Local Variables:
   |                          |                             |                 |  +- Symbol Var [ gotoLeft ] Type [ Z ]
   |                          |                             |                 +- Code:
   |                          |                             |                    +- St: Statements:
   |                          |                             |                    |  +- St: =
   |                          |                             |                    |     +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |     +- Op: Literal: true {Z}
   |                          |                             |                    +- St: for
   |                          |                             |                    |  +- Local Variables:
   |                          |                             |                    |  |  +- Symbol Var [ k ] Type [ I ]
   |                          |                             |                    |  +- St: Statements:
   |                          |                             |                    |  |  +- St: =
   |                          |                             |                    |  |     +- Op: Local variable access: k {I}
   |                          |                             |                    |  |     +- Op: Literal: 0 {I}
   |                          |                             |                    |  +- Op: < {Z}
   |                          |                             |                    |  |  +- Op: Local variable access: k {I}
   |                          |                             |                    |  |  +- Op: Literal: 4 {I}
   |                          |                             |                    |  +- St: Statements:
   |                          |                             |                    |  |  +- St: Statement From Expression : ++X
   |                          |                             |                    |  |     +- Op: Local variable access: k {I}
   |                          |                             |                    |  +- St: Block
   |                          |                             |                    |     +- Code:
   |                          |                             |                    |        +- St: If Statement:
   |                          |                             |                    |           +- Condition:
   |                          |                             |                    |           |  +- Op: == {Z}
   |                          |                             |                    |           |     +- Op: Array Access {I}
   |                          |                             |                    |           |     |  +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     |  +- Op: Local variable access: k {I}
   |                          |                             |                    |           |     +- Op: Literal: 0 {I}
   |                          |                             |                    |           +- If Code:
   |                          |                             |                    |              +- St: Block
   |                          |                             |                    |                 +- Code:
   |                          |                             |                    |                    +- St: =
   |                          |                             |                    |                    |  +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |                    |  +- Op: Literal: false {Z}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 0 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 1 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 2 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 3 {I}
   |                          |                             |                    |                    +- St: break
   |                          |                             |                    +- St: If Statement:
   |                          |                             |                    |  +- Condition:
   |                          |                             |                    |  |  +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |  +- If Code:
   |                          |                             |                    |     +- St: Block
   |                          |                             |                    |        +- Code:
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 0 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 1 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 2 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |              +- Op: Array Access {I}
   |                          |                             |                    |                 +- Op: Local variable access: px {[I}
   |                          |                             |                    |                 +- Op: Literal: 3 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 0 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 1 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 2 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                       +- Op: Array Access {I}
   |                          |                             |                          +- Op: Local variable access: py {[I}
   |                          |                             |                          +- Op: Literal: 3 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 0 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 1 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 2 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 3 {I}
   |                          |                             +- St: =
   |                          |                             |  +- Op: Local variable access: stop {Z}
   |                          |                             |  +- Op: Literal: false {Z}
   |                          |                             +- St: break
   |                          +- St: =
   |                          |  +- Op: Component Field: {[I}
   |                          |  |  +- tetris.tetris.CPeça -> px
   |                          |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |  +- Op: Local variable access: px {[I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[I}
   |                          |  |  +- tetris.tetris.CPeça -> py
   |                          |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |  +- Op: Local variable access: py {[I}
   |                          +- St: Statements:
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 0 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 0 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 1 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 1 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 2 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 2 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 3 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 3 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.Transform -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                             |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                             |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |                             |     +- Op: Type Access: cat.quadriga.base.Transform
   |                             +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   +- "cat.quadriga.base.TextRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljava/lang/String;
   |        |  +- "text"
   |        |  +- Op: Literal: "" {Ljava/lang/String;}
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "font"
   +- "LlogicaTetris" : Symbol Type
   |  +- thread <+>
   |     +- tetris.tetris.SGameOverScreen
   |     +- tetris.input.InputManager
   |     +- tetris.tetris.LlògicaTaulell
   |     +- tetris.tetris.LlògicaPeça
   +- "LlògicaPeça" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.CPeça
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |  |  +- Lcat/quadriga/runtime/Entity;
   |     |     |  |  +- entitat
   |     |     |  |  +- Semantic: ENTITY
   |     |     |  +- parameter
   |     |     |     +- F
   |     |     |     +- dt
   |     |     |     +- Semantic: DELTA_TIME
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ t ] Type [ F ]
   |     |              |  +- Symbol Var [ llindar ] Type [ F ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: t {F}
   |     |                 |     +- Op: + {F}
   |     |                 |        +- Op: Component Field: {F}
   |     |                 |        |  +- tetris.tetris.CPeça -> t
   |     |                 |        |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                 |        |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                 |        |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                 |        +- Op: Local variable access: dt {F}
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: llindar {F}
   |     |                 |     +- Op: / {F}
   |     |                 |        +- Op: Literal: 10.0 {F}
   |     |                 |        +- Op: + {F}
   |     |                 |           +- Op: Literal: 10.0 {F}
   |     |                 |           +- Op: Component Field: {I}
   |     |                 |              +- tetris.tetris.Puntuació -> nivell
   |     |                 |              +- Op: Component Access {tetris.tetris.Puntuació}
   |     |                 |                 +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                 |                 |  +- tetris.tetris.CPeça -> taulell
   |     |                 |                 |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                 |                 |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                 |                 |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                 |                 +- Op: Type Access: tetris.tetris.Puntuació
   |     |                 +- St: If Statement:
   |     |                    +- Condition:
   |     |                    |  +- Op: > {Z}
   |     |                    |     +- Op: Local variable access: t {F}
   |     |                    |     +- Op: Local variable access: llindar {F}
   |     |                    +- If Code:
   |     |                    |  +- St: Block
   |     |                    |     +- Local Variables:
   |     |                    |     |  +- Symbol Var [ px ] Type [ [I ]
   |     |                    |     |  +- Symbol Var [ py ] Type [ [I ]
   |     |                    |     |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |     |                    |     +- Code:
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {F}
   |     |                    |        |  |  +- tetris.tetris.CPeça -> t
   |     |                    |        |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        |  +- Op: % {F}
   |     |                    |        |     +- Op: Local variable access: t {F}
   |     |                    |        |     +- Op: Local variable access: llindar {F}
   |     |                    |        +- St: Statements:
   |     |                    |        |  +- St: =
   |     |                    |        |     +- Op: Local variable access: px {[I}
   |     |                    |        |     +- Op: Component Field: {[I}
   |     |                    |        |        +- tetris.tetris.CPeça -> px
   |     |                    |        |        +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |           +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        +- St: Statements:
   |     |                    |        |  +- St: =
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Component Field: {[I}
   |     |                    |        |        +- tetris.tetris.CPeça -> py
   |     |                    |        |        +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |           +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 0 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 1 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 2 {I}
   |     |                    |        +- St: Statement From Expression : --X
   |     |                    |        |  +- Op: Array Access {I}
   |     |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |        |     +- Op: Literal: 3 {I}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {[I}
   |     |                    |        |  |  +- tetris.tetris.CPeça -> py
   |     |                    |        |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |        |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |        |  +- Op: Local variable access: py {[I}
   |     |                    |        +- St: Statements:
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 0 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 1 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 2 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |     +- cat.quadriga.base.Transform -> position
   |     |                    |        |     +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |     |                    |        |        +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Field: {F}
   |     |                    |        |  |  +- javax.vecmath.Tuple3f -> z
   |     |                    |        |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  +- Op: * {F}
   |     |                    |        |     +- Op: Array Access {I}
   |     |                    |        |     |  +- Op: Local variable access: py {[I}
   |     |                    |        |     |  +- Op: Literal: 3 {I}
   |     |                    |        |     +- Op: Literal: 2.0 {F}
   |     |                    |        +- St: =
   |     |                    |        |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                    |        |  |  +- cat.quadriga.base.Transform -> position
   |     |                    |        |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                    |        |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |        |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |     |                    |        |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |     |                    |        |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |     |                    |        +- St: for
   |     |                    |           +- Local Variables:
   |     |                    |           |  +- Symbol Var [ i ] Type [ I ]
   |     |                    |           +- St: Statements:
   |     |                    |           |  +- St: =
   |     |                    |           |     +- Op: Local variable access: i {I}
   |     |                    |           |     +- Op: Literal: 0 {I}
   |     |                    |           +- Op: < {Z}
   |     |                    |           |  +- Op: Local variable access: i {I}
   |     |                    |           |  +- Op: Literal: 4 {I}
   |     |                    |           +- St: Statements:
   |     |                    |           |  +- St: Statement From Expression : ++X
   |     |                    |           |     +- Op: Local variable access: i {I}
   |     |                    |           +- St: Block
   |     |                    |              +- Code:
   |     |                    |                 +- St: If Statement:
   |     |                    |                    +- Condition:
   |     |                    |                    |  +- Op: || {Z}
   |     |                    |                    |     +- Op: < {Z}
   |     |                    |                    |     |  +- Op: Array Access {I}
   |     |                    |                    |     |  |  +- Op: Local variable access: py {[I}
   |     |                    |                    |     |  |  +- Op: Local variable access: i {I}
   |     |                    |                    |     |  +- Op: Literal: 0 {I}
   |     |                    |                    |     +- Op: != {Z}
   |     |                    |                    |        +- Op: Array Access {I}
   |     |                    |                    |        |  +- Op: Array Access {[I}
   |     |                    |                    |        |  |  +- Op: Component Field: {[[I}
   |     |                    |                    |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |     |                    |                    |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |     |                    |                    |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                    |                    |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |     |                    |                    |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                    |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                    |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                    |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |     |                    |                    |        |  |  +- Op: Array Access {I}
   |     |                    |                    |        |  |     +- Op: Local variable access: px {[I}
   |     |                    |                    |        |  |     +- Op: Local variable access: i {I}
   |     |                    |                    |        |  +- Op: Array Access {I}
   |     |                    |                    |        |     +- Op: Local variable access: py {[I}
   |     |                    |                    |        |     +- Op: Local variable access: i {I}
   |     |                    |                    |        +- Op: Literal: 0 {I}
   |     |                    |                    +- If Code:
   |     |                    |                       +- St: Block
   |     |                    |                          +- Local Variables:
   |     |                    |                          |  +- Symbol Var [ tipus ] Type [ I ]
   |     |                    |                          +- Code:
   |     |                    |                             +- St: Statements:
   |     |                    |                             |  +- St: =
   |     |                    |                             |     +- Op: Local variable access: tipus {I}
   |     |                    |                             |     +- Op: + {I}
   |     |                    |                             |        +- Op: Call {I}
   |     |                    |                             |        |  +- Op: Method:
   |     |                    |                             |        |  |  +- java.util.Random -> nextInt
   |     |                    |                             |        |  |  +- Op: RND {Ljava/util/Random;}
   |     |                    |                             |        |  +- St: Arguments
   |     |                    |                             |        |     +- Op: Literal: 7 {I}
   |     |                    |                             |        +- Op: Literal: 1 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 0 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 1 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 2 {I}
   |     |                    |                             +- St: Statement From Expression : ++X
   |     |                    |                             |  +- Op: Array Access {I}
   |     |                    |                             |     +- Op: Local variable access: py {[I}
   |     |                    |                             |     +- Op: Literal: 3 {I}
   |     |                    |                             +- St: Call to Event tetris.tetris.InsertarPeça
   |     |                    |                             |  +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  |  +- tetris.tetris.CPeça -> taulell
   |     |                    |                             |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                             |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                             |  +- St: Named Arguments
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |     |  +- px
   |     |                    |                             |     |  +- Op: Local variable access: px {[I}
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |     |  +- color
   |     |                    |                             |     |  +- Op: Component Field: {I}
   |     |                    |                             |     |     +- tetris.tetris.CPeça -> tipus
   |     |                    |                             |     |     +- Op: Component Access {tetris.tetris.CPeça}
   |     |                    |                             |     |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |     |        +- Op: Type Access: tetris.tetris.CPeça
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |        +- py
   |     |                    |                             |        +- Op: Local variable access: py {[I}
   |     |                    |                             +- St: Call to Event tetris.tetris.NovaPeça
   |     |                    |                             |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |                             |  +- St: Named Arguments
   |     |                    |                             |     +- quadriga argument
   |     |                    |                             |        +- tipus
   |     |                    |                             |        +- Op: Local variable access: tipus {I}
   |     |                    |                             +- St: break
   |     |                    +- Else Code:
   |     |                       +- St: Block
   |     |                          +- Code:
   |     |                             +- St: =
   |     |                                +- Op: Component Field: {F}
   |     |                                |  +- tetris.tetris.CPeça -> t
   |     |                                |  +- Op: Component Access {tetris.tetris.CPeça}
   |     |                                |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                                |     +- Op: Type Access: tetris.tetris.CPeça
   |     |                                +- Op: Local variable access: t {F}
   |     +- EventHandlers
   |        +- tetris.tetris.NovaPeça
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |  |  +- tetris.tetris.NovaPeça
   |        |     |  |  +- event
   |        |     |  |  +- Semantic: EVENT
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ color ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {I}
   |        |                 |  |  +- tetris.tetris.CPeça -> tipus
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Event Field: {I}
   |        |                 |     +- tetris.tetris.NovaPeça -> tipus
   |        |                 |     +- Op: Local variable access: event {tetris.tetris.NovaPeça}
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 +- St: switch
   |        |                 |  +- Op: Event Field: {I}
   |        |                 |  |  +- tetris.tetris.NovaPeça -> tipus
   |        |                 |  |  +- Op: Local variable access: event {tetris.tetris.NovaPeça}
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: = {I}
   |        |                 |  |  |           +- Op: Array Access {I}
   |        |                 |  |  |           |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |           |  +- Op: Literal: 3 {I}
   |        |                 |  |  |           +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 3 {I}
   |        |                 |  |  |     +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 1 {I}
   |        |                 |  |  |  +- Op: Literal: 5 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 2 {I}
   |        |                 |  |  |  +- Op: Literal: 6 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: px {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 4 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 0 {I}
   |        |                 |  |  |  +- Op: = {I}
   |        |                 |  |  |     +- Op: Array Access {I}
   |        |                 |  |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |     |  +- Op: Literal: 1 {I}
   |        |                 |  |  |     +- Op: = {I}
   |        |                 |  |  |        +- Op: Array Access {I}
   |        |                 |  |  |        |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |        |  +- Op: Literal: 2 {I}
   |        |                 |  |  |        +- Op: Literal: 17 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Array Access {I}
   |        |                 |  |  |  |  +- Op: Local variable access: py {[I}
   |        |                 |  |  |  |  +- Op: Literal: 3 {I}
   |        |                 |  |  |  +- Op: Literal: 16 {I}
   |        |                 |  |  +- St: =
   |        |                 |  |  |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  |     +- Ljavax/vecmath/Vector3f;
   |        |                 |  |  |     +- St: Arguments
   |        |                 |  |  |        +- Op: Literal: 0.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  |        +- Op: Literal: 1.0 {F}
   |        |                 |  |  +- St: break
   |        |                 |  +- case
   |        |                 |     +- Op: Literal: 7 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 0 {I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 1 {I}
   |        |                 |     |  +- Op: Literal: 4 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 2 {I}
   |        |                 |     |  +- Op: Literal: 5 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |     |  |  +- Op: Literal: 3 {I}
   |        |                 |     |  +- Op: Literal: 4 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: py {[I}
   |        |                 |     |  |  +- Op: Literal: 0 {I}
   |        |                 |     |  +- Op: = {I}
   |        |                 |     |     +- Op: Array Access {I}
   |        |                 |     |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |     |  +- Op: Literal: 1 {I}
   |        |                 |     |     +- Op: = {I}
   |        |                 |     |        +- Op: Array Access {I}
   |        |                 |     |        |  +- Op: Local variable access: py {[I}
   |        |                 |     |        |  +- Op: Literal: 2 {I}
   |        |                 |     |        +- Op: Literal: 17 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Array Access {I}
   |        |                 |     |  |  +- Op: Local variable access: py {[I}
   |        |                 |     |  |  +- Op: Literal: 3 {I}
   |        |                 |     |  +- Op: Literal: 16 {I}
   |        |                 |     +- St: =
   |        |                 |     |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |     |     +- Ljavax/vecmath/Vector3f;
   |        |                 |     |     +- St: Arguments
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     |        +- Op: Literal: 1.0 {F}
   |        |                 |     +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                 |  +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.ColoredMaterial -> color
   |        |                    |  +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |        |                    +- Op: Local variable access: color {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ETurnR
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ stop ] Type [ Z ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Local Variables:
   |        |                 |     |  +- Symbol Var [ x ] Type [ I ]
   |        |                 |     |  +- Symbol Var [ y ] Type [ I ]
   |        |                 |     +- Code:
   |        |                 |        +- St: Statements:
   |        |                 |        |  +- St: =
   |        |                 |        |     +- Op: Local variable access: x {I}
   |        |                 |        |     +- Op: - {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |        |  +- Op: Local variable access: px {[I}
   |        |                 |        |        |  +- Op: Literal: 1 {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |           +- Op: Local variable access: px {[I}
   |        |                 |        |           +- Op: Local variable access: i {I}
   |        |                 |        +- St: Statements:
   |        |                 |        |  +- St: =
   |        |                 |        |     +- Op: Local variable access: y {I}
   |        |                 |        |     +- Op: - {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |        |  +- Op: Local variable access: py {[I}
   |        |                 |        |        |  +- Op: Literal: 1 {I}
   |        |                 |        |        +- Op: Array Access {I}
   |        |                 |        |           +- Op: Local variable access: py {[I}
   |        |                 |        |           +- Op: Local variable access: i {I}
   |        |                 |        +- St: =
   |        |                 |        |  +- Op: Array Access {I}
   |        |                 |        |  |  +- Op: Local variable access: px {[I}
   |        |                 |        |  |  +- Op: Local variable access: i {I}
   |        |                 |        |  +- Op: - {I}
   |        |                 |        |     +- Op: Array Access {I}
   |        |                 |        |     |  +- Op: Local variable access: px {[I}
   |        |                 |        |     |  +- Op: Literal: 1 {I}
   |        |                 |        |     +- Op: Local variable access: y {I}
   |        |                 |        +- St: =
   |        |                 |           +- Op: Array Access {I}
   |        |                 |           |  +- Op: Local variable access: py {[I}
   |        |                 |           |  +- Op: Local variable access: i {I}
   |        |                 |           +- Op: + {I}
   |        |                 |              +- Op: Array Access {I}
   |        |                 |              |  +- Op: Local variable access: py {[I}
   |        |                 |              |  +- Op: Literal: 1 {I}
   |        |                 |              +- Op: Local variable access: x {I}
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: stop {Z}
   |        |                 |     +- Op: Literal: false {Z}
   |        |                 +- St: while
   |        |                 |  +- Op: ! {Z}
   |        |                 |  |  +- Op: Local variable access: stop {Z}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: =
   |        |                 |        |  +- Op: Local variable access: stop {Z}
   |        |                 |        |  +- Op: Literal: true {Z}
   |        |                 |        +- St: for
   |        |                 |           +- Local Variables:
   |        |                 |           |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |           +- St: Statements:
   |        |                 |           |  +- St: =
   |        |                 |           |     +- Op: Local variable access: i {I}
   |        |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |           +- Op: < {Z}
   |        |                 |           |  +- Op: Local variable access: i {I}
   |        |                 |           |  +- Op: Literal: 4 {I}
   |        |                 |           +- St: Statements:
   |        |                 |           |  +- St: Statement From Expression : ++X
   |        |                 |           |     +- Op: Local variable access: i {I}
   |        |                 |           +- St: Block
   |        |                 |              +- Code:
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: < {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: px {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: >= {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: px {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 10 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: px {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: < {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : ++X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                 |  +- Condition:
   |        |                 |                 |  |  +- Op: >= {Z}
   |        |                 |                 |  |     +- Op: Array Access {I}
   |        |                 |                 |  |     |  +- Op: Local variable access: py {[I}
   |        |                 |                 |  |     |  +- Op: Local variable access: i {I}
   |        |                 |                 |  |     +- Op: Literal: 18 {I}
   |        |                 |                 |  +- If Code:
   |        |                 |                 |     +- St: Block
   |        |                 |                 |        +- Code:
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 0 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 1 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 2 {I}
   |        |                 |                 |           +- St: Statement From Expression : --X
   |        |                 |                 |           |  +- Op: Array Access {I}
   |        |                 |                 |           |     +- Op: Local variable access: py {[I}
   |        |                 |                 |           |     +- Op: Literal: 3 {I}
   |        |                 |                 |           +- St: =
   |        |                 |                 |           |  +- Op: Local variable access: stop {Z}
   |        |                 |                 |           |  +- Op: Literal: false {Z}
   |        |                 |                 |           +- St: break
   |        |                 |                 +- St: If Statement:
   |        |                 |                    +- Condition:
   |        |                 |                    |  +- Op: != {Z}
   |        |                 |                    |     +- Op: Array Access {I}
   |        |                 |                    |     |  +- Op: Array Access {[I}
   |        |                 |                    |     |  |  +- Op: Component Field: {[[I}
   |        |                 |                    |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |                    |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |                    |     |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |                    |     |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |                    |     |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |                    |     |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |                    |     |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |                    |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |                    |     |  |  +- Op: Array Access {I}
   |        |                 |                    |     |  |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     |  |     +- Op: Local variable access: i {I}
   |        |                 |                    |     |  +- Op: Array Access {I}
   |        |                 |                    |     |     +- Op: Local variable access: py {[I}
   |        |                 |                    |     |     +- Op: Local variable access: i {I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- If Code:
   |        |                 |                       +- St: Block
   |        |                 |                          +- Code:
   |        |                 |                             +- St: for
   |        |                 |                             |  +- Local Variables:
   |        |                 |                             |  |  +- Symbol Var [ j ] Type [ I ]
   |        |                 |                             |  +- St: Statements:
   |        |                 |                             |  |  +- St: =
   |        |                 |                             |  |     +- Op: Local variable access: j {I}
   |        |                 |                             |  |     +- Op: Literal: 0 {I}
   |        |                 |                             |  +- Op: < {Z}
   |        |                 |                             |  |  +- Op: Local variable access: j {I}
   |        |                 |                             |  |  +- Op: Literal: 4 {I}
   |        |                 |                             |  +- St: Statements:
   |        |                 |                             |  |  +- St: Statement From Expression : ++X
   |        |                 |                             |  |     +- Op: Local variable access: j {I}
   |        |                 |                             |  +- St: Block
   |        |                 |                             |     +- Code:
   |        |                 |                             |        +- St: If Statement:
   |        |                 |                             |           +- Condition:
   |        |                 |                             |           |  +- Op: == {Z}
   |        |                 |                             |           |     +- Op: Array Access {I}
   |        |                 |                             |           |     |  +- Op: Local variable access: py {[I}
   |        |                 |                             |           |     |  +- Op: Local variable access: j {I}
   |        |                 |                             |           |     +- Op: Literal: 17 {I}
   |        |                 |                             |           +- If Code:
   |        |                 |                             |              +- St: Block
   |        |                 |                             |                 +- Local Variables:
   |        |                 |                             |                 |  +- Symbol Var [ gotoLeft ] Type [ Z ]
   |        |                 |                             |                 +- Code:
   |        |                 |                             |                    +- St: Statements:
   |        |                 |                             |                    |  +- St: =
   |        |                 |                             |                    |     +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |     +- Op: Literal: true {Z}
   |        |                 |                             |                    +- St: for
   |        |                 |                             |                    |  +- Local Variables:
   |        |                 |                             |                    |  |  +- Symbol Var [ k ] Type [ I ]
   |        |                 |                             |                    |  +- St: Statements:
   |        |                 |                             |                    |  |  +- St: =
   |        |                 |                             |                    |  |     +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |  +- Op: < {Z}
   |        |                 |                             |                    |  |  +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  |  +- Op: Literal: 4 {I}
   |        |                 |                             |                    |  +- St: Statements:
   |        |                 |                             |                    |  |  +- St: Statement From Expression : ++X
   |        |                 |                             |                    |  |     +- Op: Local variable access: k {I}
   |        |                 |                             |                    |  +- St: Block
   |        |                 |                             |                    |     +- Code:
   |        |                 |                             |                    |        +- St: If Statement:
   |        |                 |                             |                    |           +- Condition:
   |        |                 |                             |                    |           |  +- Op: == {Z}
   |        |                 |                             |                    |           |     +- Op: Array Access {I}
   |        |                 |                             |                    |           |     |  +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     |  +- Op: Local variable access: k {I}
   |        |                 |                             |                    |           |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |           +- If Code:
   |        |                 |                             |                    |              +- St: Block
   |        |                 |                             |                    |                 +- Code:
   |        |                 |                             |                    |                    +- St: =
   |        |                 |                             |                    |                    |  +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |                    |  +- Op: Literal: false {Z}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    |                    +- St: Statement From Expression : ++X
   |        |                 |                             |                    |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                    |     +- Op: Literal: 3 {I}
   |        |                 |                             |                    |                    +- St: break
   |        |                 |                             |                    +- St: If Statement:
   |        |                 |                             |                    |  +- Condition:
   |        |                 |                             |                    |  |  +- Op: Local variable access: gotoLeft {Z}
   |        |                 |                             |                    |  +- If Code:
   |        |                 |                             |                    |     +- St: Block
   |        |                 |                             |                    |        +- Code:
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |           |  +- Op: Array Access {I}
   |        |                 |                             |                    |           |     +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |           |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    |           +- St: Statement From Expression : --X
   |        |                 |                             |                    |              +- Op: Array Access {I}
   |        |                 |                             |                    |                 +- Op: Local variable access: px {[I}
   |        |                 |                             |                    |                 +- Op: Literal: 3 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 0 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 1 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                    |  +- Op: Array Access {I}
   |        |                 |                             |                    |     +- Op: Local variable access: py {[I}
   |        |                 |                             |                    |     +- Op: Literal: 2 {I}
   |        |                 |                             |                    +- St: Statement From Expression : --X
   |        |                 |                             |                       +- Op: Array Access {I}
   |        |                 |                             |                          +- Op: Local variable access: py {[I}
   |        |                 |                             |                          +- Op: Literal: 3 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 0 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 1 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 2 {I}
   |        |                 |                             +- St: Statement From Expression : ++X
   |        |                 |                             |  +- Op: Array Access {I}
   |        |                 |                             |     +- Op: Local variable access: py {[I}
   |        |                 |                             |     +- Op: Literal: 3 {I}
   |        |                 |                             +- St: =
   |        |                 |                             |  +- Op: Local variable access: stop {Z}
   |        |                 |                             |  +- Op: Literal: false {Z}
   |        |                 |                             +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ERight
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: If Statement:
   |        |                 |           +- Condition:
   |        |                 |           |  +- Op: || {Z}
   |        |                 |           |     +- Op: < {Z}
   |        |                 |           |     |  +- Op: Array Access {I}
   |        |                 |           |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |           |     |  |  +- Op: Local variable access: i {I}
   |        |                 |           |     |  +- Op: Literal: 0 {I}
   |        |                 |           |     +- Op: != {Z}
   |        |                 |           |        +- Op: Array Access {I}
   |        |                 |           |        |  +- Op: Array Access {[I}
   |        |                 |           |        |  |  +- Op: Component Field: {[[I}
   |        |                 |           |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |           |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |           |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |           |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |           |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |           |        |  |  +- Op: Array Access {I}
   |        |                 |           |        |  |     +- Op: Local variable access: px {[I}
   |        |                 |           |        |  |     +- Op: Local variable access: i {I}
   |        |                 |           |        |  +- Op: Array Access {I}
   |        |                 |           |        |     +- Op: Local variable access: py {[I}
   |        |                 |           |        |     +- Op: Local variable access: i {I}
   |        |                 |           |        +- Op: Literal: 0 {I}
   |        |                 |           +- If Code:
   |        |                 |              +- St: Block
   |        |                 |                 +- Code:
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 1 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 2 {I}
   |        |                 |                    +- St: Statement From Expression : ++X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 3 {I}
   |        |                 |                    +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.ELeft
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : ++X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: for
   |        |                 |  +- Local Variables:
   |        |                 |  |  +- Symbol Var [ i ] Type [ I ]
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: =
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  |     +- Op: Literal: 0 {I}
   |        |                 |  +- Op: < {Z}
   |        |                 |  |  +- Op: Local variable access: i {I}
   |        |                 |  |  +- Op: Literal: 4 {I}
   |        |                 |  +- St: Statements:
   |        |                 |  |  +- St: Statement From Expression : ++X
   |        |                 |  |     +- Op: Local variable access: i {I}
   |        |                 |  +- St: Block
   |        |                 |     +- Code:
   |        |                 |        +- St: If Statement:
   |        |                 |           +- Condition:
   |        |                 |           |  +- Op: || {Z}
   |        |                 |           |     +- Op: > {Z}
   |        |                 |           |     |  +- Op: Array Access {I}
   |        |                 |           |     |  |  +- Op: Local variable access: px {[I}
   |        |                 |           |     |  |  +- Op: Local variable access: i {I}
   |        |                 |           |     |  +- Op: Literal: 9 {I}
   |        |                 |           |     +- Op: != {Z}
   |        |                 |           |        +- Op: Array Access {I}
   |        |                 |           |        |  +- Op: Array Access {[I}
   |        |                 |           |        |  |  +- Op: Component Field: {[[I}
   |        |                 |           |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                 |           |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                 |           |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                 |           |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |           |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                 |           |        |  |  +- Op: Array Access {I}
   |        |                 |           |        |  |     +- Op: Local variable access: px {[I}
   |        |                 |           |        |  |     +- Op: Local variable access: i {I}
   |        |                 |           |        |  +- Op: Array Access {I}
   |        |                 |           |        |     +- Op: Local variable access: py {[I}
   |        |                 |           |        |     +- Op: Local variable access: i {I}
   |        |                 |           |        +- Op: Literal: 0 {I}
   |        |                 |           +- If Code:
   |        |                 |              +- St: Block
   |        |                 |                 +- Code:
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 0 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 1 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 2 {I}
   |        |                 |                    +- St: Statement From Expression : --X
   |        |                 |                    |  +- Op: Array Access {I}
   |        |                 |                    |     +- Op: Local variable access: px {[I}
   |        |                 |                    |     +- Op: Literal: 3 {I}
   |        |                 |                    +- St: break
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> px
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: px {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> x
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: px {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                    +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                    |  +- cat.quadriga.base.Transform -> position
   |        |                    |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                    |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                    |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                    |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                    +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        +- tetris.input.EDown
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ px ] Type [ [I ]
   |        |              |  +- Symbol Var [ py ] Type [ [I ]
   |        |              |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: px {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> px
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Component Field: {[I}
   |        |                 |        +- tetris.tetris.CPeça -> py
   |        |                 |        +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |           +- Op: Type Access: tetris.tetris.CPeça
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 0 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 1 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 2 {I}
   |        |                 +- St: Statement From Expression : --X
   |        |                 |  +- Op: Array Access {I}
   |        |                 |     +- Op: Local variable access: py {[I}
   |        |                 |     +- Op: Literal: 3 {I}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {[I}
   |        |                 |  |  +- tetris.tetris.CPeça -> py
   |        |                 |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                 |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                 |  +- Op: Local variable access: py {[I}
   |        |                 +- St: Statements:
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 0 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 1 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 2 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: =
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |     +- cat.quadriga.base.Transform -> position
   |        |                 |     +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |        +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 +- St: =
   |        |                 |  +- Op: Field: {F}
   |        |                 |  |  +- javax.vecmath.Tuple3f -> z
   |        |                 |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 |  +- Op: * {F}
   |        |                 |     +- Op: Array Access {I}
   |        |                 |     |  +- Op: Local variable access: py {[I}
   |        |                 |     |  +- Op: Literal: 3 {I}
   |        |                 |     +- Op: Literal: 2.0 {F}
   |        |                 +- St: =
   |        |                 |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |        |                 |  |  +- cat.quadriga.base.Transform -> position
   |        |                 |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |        |                 |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |        |                 |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |        |                 |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |        |                 +- St: for
   |        |                    +- Local Variables:
   |        |                    |  +- Symbol Var [ i ] Type [ I ]
   |        |                    +- St: Statements:
   |        |                    |  +- St: =
   |        |                    |     +- Op: Local variable access: i {I}
   |        |                    |     +- Op: Literal: 0 {I}
   |        |                    +- Op: < {Z}
   |        |                    |  +- Op: Local variable access: i {I}
   |        |                    |  +- Op: Literal: 4 {I}
   |        |                    +- St: Statements:
   |        |                    |  +- St: Statement From Expression : ++X
   |        |                    |     +- Op: Local variable access: i {I}
   |        |                    +- St: Block
   |        |                       +- Code:
   |        |                          +- St: If Statement:
   |        |                             +- Condition:
   |        |                             |  +- Op: || {Z}
   |        |                             |     +- Op: < {Z}
   |        |                             |     |  +- Op: Array Access {I}
   |        |                             |     |  |  +- Op: Local variable access: py {[I}
   |        |                             |     |  |  +- Op: Local variable access: i {I}
   |        |                             |     |  +- Op: Literal: 0 {I}
   |        |                             |     +- Op: != {Z}
   |        |                             |        +- Op: Array Access {I}
   |        |                             |        |  +- Op: Array Access {[I}
   |        |                             |        |  |  +- Op: Component Field: {[[I}
   |        |                             |        |  |  |  +- tetris.tetris.Taulell -> taulell
   |        |                             |        |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |        |                             |        |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                             |        |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |        |                             |        |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                             |        |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                             |        |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                             |        |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |        |                             |        |  |  +- Op: Array Access {I}
   |        |                             |        |  |     +- Op: Local variable access: px {[I}
   |        |                             |        |  |     +- Op: Local variable access: i {I}
   |        |                             |        |  +- Op: Array Access {I}
   |        |                             |        |     +- Op: Local variable access: py {[I}
   |        |                             |        |     +- Op: Local variable access: i {I}
   |        |                             |        +- Op: Literal: 0 {I}
   |        |                             +- If Code:
   |        |                                +- St: Block
   |        |                                   +- Local Variables:
   |        |                                   |  +- Symbol Var [ tipus ] Type [ I ]
   |        |                                   +- Code:
   |        |                                      +- St: Statements:
   |        |                                      |  +- St: =
   |        |                                      |     +- Op: Local variable access: tipus {I}
   |        |                                      |     +- Op: + {I}
   |        |                                      |        +- Op: Call {I}
   |        |                                      |        |  +- Op: Method:
   |        |                                      |        |  |  +- java.util.Random -> nextInt
   |        |                                      |        |  |  +- Op: RND {Ljava/util/Random;}
   |        |                                      |        |  +- St: Arguments
   |        |                                      |        |     +- Op: Literal: 7 {I}
   |        |                                      |        +- Op: Literal: 1 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 0 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 1 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 2 {I}
   |        |                                      +- St: Statement From Expression : ++X
   |        |                                      |  +- Op: Array Access {I}
   |        |                                      |     +- Op: Local variable access: py {[I}
   |        |                                      |     +- Op: Literal: 3 {I}
   |        |                                      +- St: Call to Event tetris.tetris.InsertarPeça
   |        |                                      |  +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  |  +- tetris.tetris.CPeça -> taulell
   |        |                                      |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |        |                                      |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  |     +- Op: Type Access: tetris.tetris.CPeça
   |        |                                      |  +- St: Named Arguments
   |        |                                      |     +- quadriga argument
   |        |                                      |     |  +- px
   |        |                                      |     |  +- Op: Local variable access: px {[I}
   |        |                                      |     +- quadriga argument
   |        |                                      |     |  +- color
   |        |                                      |     |  +- Op: Component Field: {I}
   |        |                                      |     |     +- tetris.tetris.CPeça -> tipus
   |        |                                      |     |     +- Op: Component Access {tetris.tetris.CPeça}
   |        |                                      |     |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |     |        +- Op: Type Access: tetris.tetris.CPeça
   |        |                                      |     +- quadriga argument
   |        |                                      |        +- py
   |        |                                      |        +- Op: Local variable access: py {[I}
   |        |                                      +- St: Call to Event tetris.tetris.NovaPeça
   |        |                                      |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                                      |  +- St: Named Arguments
   |        |                                      |     +- quadriga argument
   |        |                                      |        +- tipus
   |        |                                      |        +- Op: Local variable access: tipus {I}
   |        |                                      +- St: break
   |        +- tetris.input.ETurnL
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Local Variables:
   |                       |  +- Symbol Var [ px ] Type [ [I ]
   |                       |  +- Symbol Var [ py ] Type [ [I ]
   |                       |  +- Symbol Var [ stop ] Type [ Z ]
   |                       |  +- Symbol Var [ pos ] Type [ Ljavax/vecmath/Vector3f; ]
   |                       +- Code:
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: px {[I}
   |                          |     +- Op: Component Field: {[I}
   |                          |        +- tetris.tetris.CPeça -> px
   |                          |        +- Op: Component Access {tetris.tetris.CPeça}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.CPeça
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: py {[I}
   |                          |     +- Op: Component Field: {[I}
   |                          |        +- tetris.tetris.CPeça -> py
   |                          |        +- Op: Component Access {tetris.tetris.CPeça}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.CPeça
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: i {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ x ] Type [ I ]
   |                          |     |  +- Symbol Var [ y ] Type [ I ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: x {I}
   |                          |        |     +- Op: - {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |        |  +- Op: Local variable access: px {[I}
   |                          |        |        |  +- Op: Literal: 1 {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |           +- Op: Local variable access: px {[I}
   |                          |        |           +- Op: Local variable access: i {I}
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: y {I}
   |                          |        |     +- Op: - {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |        |  +- Op: Local variable access: py {[I}
   |                          |        |        |  +- Op: Literal: 1 {I}
   |                          |        |        +- Op: Array Access {I}
   |                          |        |           +- Op: Local variable access: py {[I}
   |                          |        |           +- Op: Local variable access: i {I}
   |                          |        +- St: =
   |                          |        |  +- Op: Array Access {I}
   |                          |        |  |  +- Op: Local variable access: px {[I}
   |                          |        |  |  +- Op: Local variable access: i {I}
   |                          |        |  +- Op: + {I}
   |                          |        |     +- Op: Array Access {I}
   |                          |        |     |  +- Op: Local variable access: px {[I}
   |                          |        |     |  +- Op: Literal: 1 {I}
   |                          |        |     +- Op: Local variable access: y {I}
   |                          |        +- St: =
   |                          |           +- Op: Array Access {I}
   |                          |           |  +- Op: Local variable access: py {[I}
   |                          |           |  +- Op: Local variable access: i {I}
   |                          |           +- Op: - {I}
   |                          |              +- Op: Array Access {I}
   |                          |              |  +- Op: Local variable access: py {[I}
   |                          |              |  +- Op: Literal: 1 {I}
   |                          |              +- Op: Local variable access: x {I}
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: stop {Z}
   |                          |     +- Op: Literal: false {Z}
   |                          +- St: while
   |                          |  +- Op: ! {Z}
   |                          |  |  +- Op: Local variable access: stop {Z}
   |                          |  +- St: Block
   |                          |     +- Code:
   |                          |        +- St: =
   |                          |        |  +- Op: Local variable access: stop {Z}
   |                          |        |  +- Op: Literal: true {Z}
   |                          |        +- St: for
   |                          |           +- Local Variables:
   |                          |           |  +- Symbol Var [ i ] Type [ I ]
   |                          |           +- St: Statements:
   |                          |           |  +- St: =
   |                          |           |     +- Op: Local variable access: i {I}
   |                          |           |     +- Op: Literal: 0 {I}
   |                          |           +- Op: < {Z}
   |                          |           |  +- Op: Local variable access: i {I}
   |                          |           |  +- Op: Literal: 4 {I}
   |                          |           +- St: Statements:
   |                          |           |  +- St: Statement From Expression : ++X
   |                          |           |     +- Op: Local variable access: i {I}
   |                          |           +- St: Block
   |                          |              +- Code:
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: < {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: px {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 0 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: >= {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: px {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 10 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: px {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: < {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: py {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 0 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : ++X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                 |  +- Condition:
   |                          |                 |  |  +- Op: >= {Z}
   |                          |                 |  |     +- Op: Array Access {I}
   |                          |                 |  |     |  +- Op: Local variable access: py {[I}
   |                          |                 |  |     |  +- Op: Local variable access: i {I}
   |                          |                 |  |     +- Op: Literal: 18 {I}
   |                          |                 |  +- If Code:
   |                          |                 |     +- St: Block
   |                          |                 |        +- Code:
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 0 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 1 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 2 {I}
   |                          |                 |           +- St: Statement From Expression : --X
   |                          |                 |           |  +- Op: Array Access {I}
   |                          |                 |           |     +- Op: Local variable access: py {[I}
   |                          |                 |           |     +- Op: Literal: 3 {I}
   |                          |                 |           +- St: =
   |                          |                 |           |  +- Op: Local variable access: stop {Z}
   |                          |                 |           |  +- Op: Literal: false {Z}
   |                          |                 |           +- St: break
   |                          |                 +- St: If Statement:
   |                          |                    +- Condition:
   |                          |                    |  +- Op: != {Z}
   |                          |                    |     +- Op: Array Access {I}
   |                          |                    |     |  +- Op: Array Access {[I}
   |                          |                    |     |  |  +- Op: Component Field: {[[I}
   |                          |                    |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |                          |                    |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |                    |     |  |  |     +- Op: Component Field: {Lcat/quadriga/runtime/Entity;}
   |                          |                    |     |  |  |     |  +- tetris.tetris.CPeça -> taulell
   |                          |                    |     |  |  |     |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |                    |     |  |  |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                    |     |  |  |     |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |                    |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |                    |     |  |  +- Op: Array Access {I}
   |                          |                    |     |  |     +- Op: Local variable access: px {[I}
   |                          |                    |     |  |     +- Op: Local variable access: i {I}
   |                          |                    |     |  +- Op: Array Access {I}
   |                          |                    |     |     +- Op: Local variable access: py {[I}
   |                          |                    |     |     +- Op: Local variable access: i {I}
   |                          |                    |     +- Op: Literal: 0 {I}
   |                          |                    +- If Code:
   |                          |                       +- St: Block
   |                          |                          +- Code:
   |                          |                             +- St: for
   |                          |                             |  +- Local Variables:
   |                          |                             |  |  +- Symbol Var [ j ] Type [ I ]
   |                          |                             |  +- St: Statements:
   |                          |                             |  |  +- St: =
   |                          |                             |  |     +- Op: Local variable access: j {I}
   |                          |                             |  |     +- Op: Literal: 0 {I}
   |                          |                             |  +- Op: < {Z}
   |                          |                             |  |  +- Op: Local variable access: j {I}
   |                          |                             |  |  +- Op: Literal: 4 {I}
   |                          |                             |  +- St: Statements:
   |                          |                             |  |  +- St: Statement From Expression : ++X
   |                          |                             |  |     +- Op: Local variable access: j {I}
   |                          |                             |  +- St: Block
   |                          |                             |     +- Code:
   |                          |                             |        +- St: If Statement:
   |                          |                             |           +- Condition:
   |                          |                             |           |  +- Op: == {Z}
   |                          |                             |           |     +- Op: Array Access {I}
   |                          |                             |           |     |  +- Op: Local variable access: py {[I}
   |                          |                             |           |     |  +- Op: Local variable access: j {I}
   |                          |                             |           |     +- Op: Literal: 17 {I}
   |                          |                             |           +- If Code:
   |                          |                             |              +- St: Block
   |                          |                             |                 +- Local Variables:
   |                          |                             |                 |  +- Symbol Var [ gotoLeft ] Type [ Z ]
   |                          |                             |                 +- Code:
   |                          |                             |                    +- St: Statements:
   |                          |                             |                    |  +- St: =
   |                          |                             |                    |     +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |     +- Op: Literal: true {Z}
   |                          |                             |                    +- St: for
   |                          |                             |                    |  +- Local Variables:
   |                          |                             |                    |  |  +- Symbol Var [ k ] Type [ I ]
   |                          |                             |                    |  +- St: Statements:
   |                          |                             |                    |  |  +- St: =
   |                          |                             |                    |  |     +- Op: Local variable access: k {I}
   |                          |                             |                    |  |     +- Op: Literal: 0 {I}
   |                          |                             |                    |  +- Op: < {Z}
   |                          |                             |                    |  |  +- Op: Local variable access: k {I}
   |                          |                             |                    |  |  +- Op: Literal: 4 {I}
   |                          |                             |                    |  +- St: Statements:
   |                          |                             |                    |  |  +- St: Statement From Expression : ++X
   |                          |                             |                    |  |     +- Op: Local variable access: k {I}
   |                          |                             |                    |  +- St: Block
   |                          |                             |                    |     +- Code:
   |                          |                             |                    |        +- St: If Statement:
   |                          |                             |                    |           +- Condition:
   |                          |                             |                    |           |  +- Op: == {Z}
   |                          |                             |                    |           |     +- Op: Array Access {I}
   |                          |                             |                    |           |     |  +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     |  +- Op: Local variable access: k {I}
   |                          |                             |                    |           |     +- Op: Literal: 0 {I}
   |                          |                             |                    |           +- If Code:
   |                          |                             |                    |              +- St: Block
   |                          |                             |                    |                 +- Code:
   |                          |                             |                    |                    +- St: =
   |                          |                             |                    |                    |  +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |                    |  +- Op: Literal: false {Z}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 0 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 1 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 2 {I}
   |                          |                             |                    |                    +- St: Statement From Expression : ++X
   |                          |                             |                    |                    |  +- Op: Array Access {I}
   |                          |                             |                    |                    |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |                    |     +- Op: Literal: 3 {I}
   |                          |                             |                    |                    +- St: break
   |                          |                             |                    +- St: If Statement:
   |                          |                             |                    |  +- Condition:
   |                          |                             |                    |  |  +- Op: Local variable access: gotoLeft {Z}
   |                          |                             |                    |  +- If Code:
   |                          |                             |                    |     +- St: Block
   |                          |                             |                    |        +- Code:
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 0 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 1 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |           |  +- Op: Array Access {I}
   |                          |                             |                    |           |     +- Op: Local variable access: px {[I}
   |                          |                             |                    |           |     +- Op: Literal: 2 {I}
   |                          |                             |                    |           +- St: Statement From Expression : --X
   |                          |                             |                    |              +- Op: Array Access {I}
   |                          |                             |                    |                 +- Op: Local variable access: px {[I}
   |                          |                             |                    |                 +- Op: Literal: 3 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 0 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 1 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                    |  +- Op: Array Access {I}
   |                          |                             |                    |     +- Op: Local variable access: py {[I}
   |                          |                             |                    |     +- Op: Literal: 2 {I}
   |                          |                             |                    +- St: Statement From Expression : --X
   |                          |                             |                       +- Op: Array Access {I}
   |                          |                             |                          +- Op: Local variable access: py {[I}
   |                          |                             |                          +- Op: Literal: 3 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 0 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 1 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 2 {I}
   |                          |                             +- St: Statement From Expression : ++X
   |                          |                             |  +- Op: Array Access {I}
   |                          |                             |     +- Op: Local variable access: py {[I}
   |                          |                             |     +- Op: Literal: 3 {I}
   |                          |                             +- St: =
   |                          |                             |  +- Op: Local variable access: stop {Z}
   |                          |                             |  +- Op: Literal: false {Z}
   |                          |                             +- St: break
   |                          +- St: =
   |                          |  +- Op: Component Field: {[I}
   |                          |  |  +- tetris.tetris.CPeça -> px
   |                          |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |  +- Op: Local variable access: px {[I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[I}
   |                          |  |  +- tetris.tetris.CPeça -> py
   |                          |  |  +- Op: Component Access {tetris.tetris.CPeça}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.CPeça
   |                          |  +- Op: Local variable access: py {[I}
   |                          +- St: Statements:
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 0 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 0 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 1 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 1 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 2 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 2 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |  |  +- cat.quadriga.base.Transform -> position
   |                          |  |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.Transform
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          +- St: =
   |                          |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                          |     +- cat.quadriga.base.Transform -> position
   |                          |     +- Op: Component Access {cat.quadriga.base.Transform}
   |                          |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |                          |        +- Op: Type Access: cat.quadriga.base.Transform
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> x
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: px {[I}
   |                          |     |  +- Op: Literal: 3 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                          |  +- Op: Field: {F}
   |                          |  |  +- javax.vecmath.Tuple3f -> z
   |                          |  |  +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   |                          |  +- Op: * {F}
   |                          |     +- Op: Array Access {I}
   |                          |     |  +- Op: Local variable access: py {[I}
   |                          |     |  +- Op: Literal: 3 {I}
   |                          |     +- Op: Literal: 2.0 {F}
   |                          +- St: =
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.Transform -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.Transform}
   |                             |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                             |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |     |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |                             |     +- Op: Type Access: cat.quadriga.base.Transform
   |                             +- Op: Local variable access: pos {Ljavax/vecmath/Vector3f;}
   +- "ELeft" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.RendererPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block
   |        +- Code:
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.RendererComponent}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "EUp" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "javax.vecmath.Quat4f" : Symbol Type
   |  +- Ljavax/vecmath/Quat4f;
   +- "cat.quadriga.base.SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Call {I}
   |     |                 |              +- Op: Method:
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |              +- St: Zero Arguments
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;}
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;}
   |                       |        +- Op: Method:
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- St: Arguments
   |                       |           +- Op: Call {I}
   |                       |              +- Op: Method:
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |              +- St: Zero Arguments
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;}
   |                       |        +- Op: Method:
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |        +- St: Zero Arguments
   |                       +- St: If Statement:
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z}
   |                       |  |     +- Op: isnull {Z}
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |  +- If Code:
   |                       |     +- St: Block
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call
   |                       |              +- Op: Method:
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |              +- St: Arguments
   |                       |                 +- Op: Call {I}
   |                       |                 |  +- Op: Method:
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |                 |  +- St: Zero Arguments
   |                       |                 +- Op: Call {I}
   |                       |                    +- Op: Method:
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |                    +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform}
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;}
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform}
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                          +- St: Arguments
   |                             +- Op: Component Field: {F}
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform}
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                   +- Op: Type Access: cat.quadriga.base.Transform
   +- "tetris.tetris.NovaPeça" : Symbol Type
   |  +- Event <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- I
   |           +- "tipus"
   +- "cat.quadriga.base.Exit" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.Transform" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments
   |        +- Quadriga Field
   |        |  +- F
   |        |  +- "scale"
   |        |  +- Op: Literal: 1.0 {F}
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Quat4f;
   |           +- "rotation"
   |           +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |              +- Ljavax/vecmath/Quat4f;
   |              +- St: Arguments
   |                 +- Op: Literal: 0.0 {F}
   |                 +- Op: Literal: 0.0 {F}
   |                 +- Op: Literal: 0.0 {F}
   |                 +- Op: Literal: 1.0 {F}
   +- "ERight" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "InitTetris" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "tetris.tetris.CPeça" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- F
   |        |  +- "t"
   |        |  +- Op: Literal: 0 {I}
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "px"
   |        |  +- Op: new primitive array {[I}
   |        |     +- I
   |        |     +- Op: Literal: 4 {I}
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "py"
   |        |  +- Op: new primitive array {[I}
   |        |     +- I
   |        |     +- Op: Literal: 4 {I}
   |        +- Quadriga Field
   |        |  +- I
   |        |  +- "tipus"
   |        |  +- Op: Literal: 1 {I}
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "taulell"
   +- "cat.quadriga.base.BillboardRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "CilynderRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos1"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos2"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 1.0 {F}
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F}
   +- "SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.SimpleTextRenderer
   |     +- cat.quadriga.base.ColoredMaterialRenderer
   |     +- cat.quadriga.base.EndRender
   +- "tetris.input.ETurnR" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "ETurnL" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.render.simple.Node" : Symbol Type
   |  +- Lcat/quadriga/render/simple/Node;
   +- "cat.quadriga.base.EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Code:
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Static Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Static Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments
   |                       +- St: If Statement:
   |                          +- Condition:
   |                          |  +- Op: Call {Z}
   |                          |     +- Op: Static Method:
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments
   |                          +- If Code:
   |                             +- St: Block
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit
   |                                      +- St: Zero Arguments
   +- "InputManager" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.input.CInputManager
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Code:
   |                       +- St: while
   |                          +- Op: Call {Z}
   |                          |  +- Op: Static Method:
   |                          |  |  +- org.lwjgl.input.Keyboard -> next
   |                          |  +- St: Zero Arguments
   |                          +- St: Block
   |                             +- Local Variables:
   |                             |  +- Symbol Var [ key ] Type [ I ]
   |                             +- Code:
   |                                +- St: Statements:
   |                                |  +- St: =
   |                                |     +- Op: Local variable access: key {I}
   |                                |     +- Op: Call {I}
   |                                |        +- Op: Static Method:
   |                                |        |  +- org.lwjgl.input.Keyboard -> getEventKey
   |                                |        +- St: Zero Arguments
   |                                +- St: If Statement:
   |                                   +- Condition:
   |                                   |  +- Op: == {Z}
   |                                   |     +- Op: Local variable access: key {I}
   |                                   |     +- Op: Static Field: {I}
   |                                   |        +- org.lwjgl.input.Keyboard -> KEY_LEFT
   |                                   +- If Code:
   |                                   |  +- St: Block
   |                                   |     +- Code:
   |                                   |        +- St: If Statement:
   |                                   |           +- Condition:
   |                                   |           |  +- Op: Call {Z}
   |                                   |           |     +- Op: Static Method:
   |                                   |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                   |           |     +- St: Zero Arguments
   |                                   |           +- If Code:
   |                                   |              +- St: Block
   |                                   |                 +- Code:
   |                                   |                    +- St: Call to Event tetris.input.ELeft
   |                                   |                       +- St: Zero Arguments
   |                                   +- Else Code:
   |                                      +- St: If Statement:
   |                                         +- Condition:
   |                                         |  +- Op: == {Z}
   |                                         |     +- Op: Local variable access: key {I}
   |                                         |     +- Op: Static Field: {I}
   |                                         |        +- org.lwjgl.input.Keyboard -> KEY_RIGHT
   |                                         +- If Code:
   |                                         |  +- St: Block
   |                                         |     +- Code:
   |                                         |        +- St: If Statement:
   |                                         |           +- Condition:
   |                                         |           |  +- Op: Call {Z}
   |                                         |           |     +- Op: Static Method:
   |                                         |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                         |           |     +- St: Zero Arguments
   |                                         |           +- If Code:
   |                                         |              +- St: Block
   |                                         |                 +- Code:
   |                                         |                    +- St: Call to Event tetris.input.ERight
   |                                         |                       +- St: Zero Arguments
   |                                         +- Else Code:
   |                                            +- St: If Statement:
   |                                               +- Condition:
   |                                               |  +- Op: == {Z}
   |                                               |     +- Op: Local variable access: key {I}
   |                                               |     +- Op: Static Field: {I}
   |                                               |        +- org.lwjgl.input.Keyboard -> KEY_UP
   |                                               +- If Code:
   |                                               |  +- St: Block
   |                                               |     +- Code:
   |                                               |        +- St: If Statement:
   |                                               |           +- Condition:
   |                                               |           |  +- Op: Call {Z}
   |                                               |           |     +- Op: Static Method:
   |                                               |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                               |           |     +- St: Zero Arguments
   |                                               |           +- If Code:
   |                                               |              +- St: Block
   |                                               |                 +- Code:
   |                                               |                    +- St: Call to Event tetris.input.EUp
   |                                               |                       +- St: Zero Arguments
   |                                               +- Else Code:
   |                                                  +- St: If Statement:
   |                                                     +- Condition:
   |                                                     |  +- Op: == {Z}
   |                                                     |     +- Op: Local variable access: key {I}
   |                                                     |     +- Op: Static Field: {I}
   |                                                     |        +- org.lwjgl.input.Keyboard -> KEY_DOWN
   |                                                     +- If Code:
   |                                                     |  +- St: Block
   |                                                     |     +- Code:
   |                                                     |        +- St: If Statement:
   |                                                     |           +- Condition:
   |                                                     |           |  +- Op: Call {Z}
   |                                                     |           |     +- Op: Static Method:
   |                                                     |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                     |           |     +- St: Zero Arguments
   |                                                     |           +- If Code:
   |                                                     |              +- St: Block
   |                                                     |                 +- Code:
   |                                                     |                    +- St: Call to Event tetris.input.EDown
   |                                                     |                       +- St: Zero Arguments
   |                                                     +- Else Code:
   |                                                        +- St: If Statement:
   |                                                           +- Condition:
   |                                                           |  +- Op: == {Z}
   |                                                           |     +- Op: Local variable access: key {I}
   |                                                           |     +- Op: Static Field: {I}
   |                                                           |        +- org.lwjgl.input.Keyboard -> KEY_A
   |                                                           +- If Code:
   |                                                           |  +- St: Block
   |                                                           |     +- Code:
   |                                                           |        +- St: If Statement:
   |                                                           |           +- Condition:
   |                                                           |           |  +- Op: Call {Z}
   |                                                           |           |     +- Op: Static Method:
   |                                                           |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                           |           |     +- St: Zero Arguments
   |                                                           |           +- If Code:
   |                                                           |              +- St: Block
   |                                                           |                 +- Code:
   |                                                           |                    +- St: Call to Event tetris.input.ETurnL
   |                                                           |                       +- St: Zero Arguments
   |                                                           +- Else Code:
   |                                                              +- St: If Statement:
   |                                                                 +- Condition:
   |                                                                 |  +- Op: == {Z}
   |                                                                 |     +- Op: Local variable access: key {I}
   |                                                                 |     +- Op: Static Field: {I}
   |                                                                 |        +- org.lwjgl.input.Keyboard -> KEY_D
   |                                                                 +- If Code:
   |                                                                 |  +- St: Block
   |                                                                 |     +- Code:
   |                                                                 |        +- St: If Statement:
   |                                                                 |           +- Condition:
   |                                                                 |           |  +- Op: Call {Z}
   |                                                                 |           |     +- Op: Static Method:
   |                                                                 |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                                 |           |     +- St: Zero Arguments
   |                                                                 |           +- If Code:
   |                                                                 |              +- St: Block
   |                                                                 |                 +- Code:
   |                                                                 |                    +- St: Call to Event tetris.input.ETurnR
   |                                                                 |                       +- St: Zero Arguments
   |                                                                 +- Else Code:
   |                                                                    +- St: If Statement:
   |                                                                       +- Condition:
   |                                                                       |  +- Op: == {Z}
   |                                                                       |     +- Op: Local variable access: key {I}
   |                                                                       |     +- Op: Static Field: {I}
   |                                                                       |        +- org.lwjgl.input.Keyboard -> KEY_ESCAPE
   |                                                                       +- If Code:
   |                                                                          +- St: Block
   |                                                                             +- Code:
   |                                                                                +- St: If Statement:
   |                                                                                   +- Condition:
   |                                                                                   |  +- Op: Call {Z}
   |                                                                                   |     +- Op: Static Method:
   |                                                                                   |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                                                   |     +- St: Zero Arguments
   |                                                                                   +- If Code:
   |                                                                                      +- St: Block
   |                                                                                         +- Code:
   |                                                                                            +- St: Call to Event tetris.input.EEscape
   |                                                                                               +- St: Zero Arguments
   +- "tetris.input.ETurnL" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "org.lwjgl.input.Keyboard" : Symbol Type
   |  +- Lorg/lwjgl/input/Keyboard;
   +- "TexturedQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.TexturedQuad}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "texture"
   |              |  |        +- Op: Literal: "" {Ljava/lang/String;}
   |              |  +- St: Zero Arguments
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "tetris.tetris.Tetris" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {tetris.tetris.Puntuació}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "nivell"
   |           |  |  |     |  +- Op: Literal: 0 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "punts"
   |           |  |  |     |  +- Op: Literal: 0 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- I
   |           |  |  |        +- "línies"
   |           |  |  |        +- Op: Literal: 0 {I}
   |           |  |  +- St: Named Arguments
   |           |  |     +- quadriga argument
   |           |  |        +- punts
   |           |  |        +- Op: Literal: 0 {I}
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {tetris.tetris.Taulell}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- [[Lcat/quadriga/runtime/Entity;
   |           |  |  |     |  +- "cubs"
   |           |  |  |     |  +- Op: new array {[[Lcat/quadriga/runtime/Entity;}
   |           |  |  |     |     +- Lcat/quadriga/runtime/Entity;
   |           |  |  |     |     +- Op: Literal: 10 {I}
   |           |  |  |     |     +- Op: Literal: 18 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- [[I
   |           |  |  |        +- "taulell"
   |           |  |  |        +- Op: new primitive array {[[I}
   |           |  |  |           +- I
   |           |  |  |           +- Op: Literal: 10 {I}
   |           |  |  |           +- Op: Literal: 18 {I}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "Camera" {Ljava/lang/String;}
   |           |  +- cat.quadriga.base.SimpleCamera
   |           |  +- St: Zero Arguments
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.CameraComponent
   |           |     +- St: Named Arguments
   |           |        +- quadriga argument
   |           |        |  +- position
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments
   |           |        |        +- Op: Literal: 0.0 {F}
   |           |        |        +- Op: Literal: 50.0 {F}
   |           |        |        +- Op: Literal: 18.0 {F}
   |           |        +- quadriga argument
   |           |        |  +- lookAt
   |           |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |        |     +- Ljavax/vecmath/Vector3f;
   |           |        |     +- St: Arguments
   |           |        |        +- Op: Literal: 0.0 {F}
   |           |        |        +- Op: Literal: 0.0 {F}
   |           |        |        +- Op: Literal: 18.0 {F}
   |           |        +- quadriga argument
   |           |           +- up
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments
   |           |                 +- Op: Literal: 0.0 {F}
   |           |                 +- Op: Literal: 0.0 {F}
   |           |                 +- Op: Literal: 1.0 {F}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "Nivell" {Ljava/lang/String;}
   |           |  +- cat.quadriga.base.TextRendererPrototype
   |           |  +- St: Named Arguments
   |           |  |  +- quadriga argument
   |           |  |  |  +- text
   |           |  |  |  +- Op: + {Ljava/lang/String;}
   |           |  |  |     +- Op: Literal: "Nivell\n" {Ljava/lang/String;}
   |           |  |  |     +- Op: Component Field: {I}
   |           |  |  |        +- tetris.tetris.Puntuació -> nivell
   |           |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |           |  |  |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |           |  |  +- quadriga argument
   |           |  |     +- font
   |           |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments
   |           |                 +- Op: Literal: 600.0 {F}
   |           |                 +- Op: Literal: 200.0 {F}
   |           |                 +- Op: Literal: 0.0 {F}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "Línies" {Ljava/lang/String;}
   |           |  +- cat.quadriga.base.TextRendererPrototype
   |           |  +- St: Named Arguments
   |           |  |  +- quadriga argument
   |           |  |  |  +- text
   |           |  |  |  +- Op: + {Ljava/lang/String;}
   |           |  |  |     +- Op: Literal: "Línies\n" {Ljava/lang/String;}
   |           |  |  |     +- Op: Component Field: {I}
   |           |  |  |        +- tetris.tetris.Puntuació -> línies
   |           |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |           |  |  |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |           |  |  +- quadriga argument
   |           |  |     +- font
   |           |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments
   |           |                 +- Op: Literal: 600.0 {F}
   |           |                 +- Op: Literal: 300.0 {F}
   |           |                 +- Op: Literal: 0.0 {F}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "Punts" {Ljava/lang/String;}
   |           |  +- cat.quadriga.base.TextRendererPrototype
   |           |  +- St: Named Arguments
   |           |  |  +- quadriga argument
   |           |  |  |  +- text
   |           |  |  |  +- Op: + {Ljava/lang/String;}
   |           |  |  |     +- Op: Literal: "Punts\n" {Ljava/lang/String;}
   |           |  |  |     +- Op: Component Field: {I}
   |           |  |  |        +- tetris.tetris.Puntuació -> punts
   |           |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |           |  |  |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |           |  |  +- quadriga argument
   |           |  |     +- font
   |           |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |           |  +- Component redefinition
   |           |     +- cat.quadriga.base.Transform
   |           |     +- St: Named Arguments
   |           |        +- quadriga argument
   |           |           +- position
   |           |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |              +- Ljavax/vecmath/Vector3f;
   |           |              +- St: Arguments
   |           |                 +- Op: Literal: 600.0 {F}
   |           |                 +- Op: Literal: 400.0 {F}
   |           |                 +- Op: Literal: 0.0 {F}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "Peça" {Ljava/lang/String;}
   |           |  +- tetris.tetris.PPeça
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |        +- taulell
   |           |        +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 0 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 2 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 3 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 4 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 5 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 6 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 7 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 8 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 9 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: -1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 0 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 2 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 3 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 4 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 5 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 6 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 7 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 8 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 9 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 18 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 2 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 3 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 4 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 5 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 6 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 7 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 8 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 9 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 10 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 11 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 12 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 13 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 14 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 15 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 16 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 17 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: -1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 1 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 2 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 3 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 4 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 5 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 6 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 7 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 8 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 9 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 10 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 11 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 12 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 13 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 14 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 15 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 16 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  +- tetris.tetris.CubDeMarc
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 17 {I}
   |           |     +- quadriga argument
   |           |        +- posX
   |           |        +- Op: Literal: 10 {I}
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.SceneComponent}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |        +- Lcat/quadriga/runtime/Entity;
   |              |  |        +- "camera"
   |              |  +- St: Named Arguments
   |              |     +- quadriga argument
   |              |        +- camera
   |              |        +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |              |           +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |              |           +- Op: Literal: "Camera" {Ljava/lang/String;}
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "ETurnR" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "tetris.tetris.Main" : Symbol Type
   |  +- main
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   |     +- thread: tetris.tetris.LlogicaTetris
   |     +- Quadriga function
   |        +- St: Block
   |           +- Code:
   |              +- St: Statement From Expression : Call
   |              |  +- Op: Method:
   |              |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |              |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |              |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |              |  +- St: Arguments
   |              |     +- Op: Literal: 90.0 {F}
   |              |     +- Op: / {F}
   |              |     |  +- Op: Literal: 800.0 {F}
   |              |     |  +- Op: Literal: 600.0 {F}
   |              |     +- Op: Literal: 10 {I}
   |              |     +- Op: Literal: 1000 {I}
   |              +- St: =
   |                 +- Op: Field: {Z}
   |                 |  +- cat.quadriga.render.simple.RenderManager -> renderFPS
   |                 |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                 |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                 +- Op: Literal: true {Z}
   +- "tetris.tetris.InitTetris" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.Materials" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- [Lcat/quadriga/java/base/BaseMaterial;
   |           +- "materials"
   |           +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;}
   |              +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;}
   |                 +- Lcat/quadriga/java/base/BaseMaterial;
   |                 +- Op: Literal: 0 {I}
   +- "tetris.tetris.Taulell" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- [[Lcat/quadriga/runtime/Entity;
   |        |  +- "cubs"
   |        |  +- Op: new array {[[Lcat/quadriga/runtime/Entity;}
   |        |     +- Lcat/quadriga/runtime/Entity;
   |        |     +- Op: Literal: 10 {I}
   |        |     +- Op: Literal: 18 {I}
   |        +- Quadriga Field
   |           +- [[I
   |           +- "taulell"
   |           +- Op: new primitive array {[[I}
   |              +- I
   |              +- Op: Literal: 10 {I}
   |              +- Op: Literal: 18 {I}
   +- "java.lang.String" : Symbol Type
   |  +- Ljava/lang/String;
   +- "cat.quadriga.base.SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Literal: 45.0 {F}
   |                       |     +- Op: Literal: 1.0 {F}
   |                       |     +- Op: Literal: 99.0 {F}
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent
   +- "ColoredMaterialRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.ColoredMaterial
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ material ] Type [ Lcat/quadriga/render/simple/materials/BaseMaterial; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getMaterial
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Call {I}
   |     |                 |              +- Op: Method:
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |              +- St: Zero Arguments
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.materials.BaseMaterial -> setParameter
   |     |                    |  +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Literal: "Color" {Ljava/lang/String;}
   |     |                       +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                          +- cat.quadriga.base.ColoredMaterial -> color
   |     |                          +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ material ] Type [ Lcat/quadriga/render/simple/materials/BaseMaterial; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.materials.MaterialManager -> getMaterial
   |     |                 |        |  +- Op: Call {Lcat/quadriga/render/simple/materials/MaterialManager;}
   |     |                 |        |     +- Op: Static Method:
   |     |                 |        |     |  +- cat.quadriga.render.simple.RenderManager -> getMaterialManager
   |     |                 |        |     +- St: Zero Arguments
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Literal: "resources/materials/colorUniform.xml" {Ljava/lang/String;}
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.materials.BaseMaterial -> setParameter
   |     |                 |  |  +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Literal: "Color" {Ljava/lang/String;}
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                 |        +- cat.quadriga.base.ColoredMaterial -> color
   |     |                 |        +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setMaterial
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setMaterial
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                             |  +- Op: Method:
   |                             |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                             |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |  +- St: Zero Arguments
   |                             +- Op: Literal: Null {Null type}
   +- "cat.quadriga.base.ColoredMaterial" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector3f;
   |           +- "color"
   +- "SimpleTextRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.TextRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setText
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                       |  +- cat.quadriga.base.TextRenderer -> font
   |     |                       |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                       |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                          +- cat.quadriga.base.TextRenderer -> text
   |     |                          +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setText
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                       |  +- cat.quadriga.base.TextRenderer -> font
   |     |                       |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                       |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                          +- cat.quadriga.base.TextRenderer -> text
   |     |                          +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteText
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "cat.quadriga.base.SphereRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F}
   +- "tetris.tetris.Puntuació" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- I
   |        |  +- "nivell"
   |        |  +- Op: Literal: 0 {I}
   |        +- Quadriga Field
   |        |  +- I
   |        |  +- "punts"
   |        |  +- Op: Literal: 0 {I}
   |        +- Quadriga Field
   |           +- I
   |           +- "línies"
   |           +- Op: Literal: 0 {I}
   +- "SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                          +- Op: Method:
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                          +- St: Zero Arguments
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "cat.quadriga.base.SimpleCamera" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block
   |        +- Code:
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.CameraComponent}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments
   |              |  |     |        +- Op: Literal: 0.0 {F}
   |              |  |     |        +- Op: Literal: 0.0 {F}
   |              |  |     |        +- Op: Literal: 0.0 {F}
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "lookAt"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Arguments
   |              |  |     |        +- Op: Literal: 0.0 {F}
   |              |  |     |        +- Op: Literal: 0.0 {F}
   |              |  |     |        +- Op: Literal: 1.0 {F}
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljavax/vecmath/Vector3f;
   |              |  |        +- "up"
   |              |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              |  |           +- Ljavax/vecmath/Vector3f;
   |              |  |           +- St: Arguments
   |              |  |              +- Op: Literal: 0.0 {F}
   |              |  |              +- Op: Literal: 1.0 {F}
   |              |  |              +- Op: Literal: 0.0 {F}
   |              |  +- St: Zero Arguments
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "cat.quadriga.base.TexturedQuad" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Zero Arguments
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "texture"
   |           +- Op: Literal: "" {Ljava/lang/String;}
   +- "Exit" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "EEscape" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "tetris.input.CInputManager" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "tetris.input.InputManager" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.input.CInputManager
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Code:
   |                       +- St: while
   |                          +- Op: Call {Z}
   |                          |  +- Op: Static Method:
   |                          |  |  +- org.lwjgl.input.Keyboard -> next
   |                          |  +- St: Zero Arguments
   |                          +- St: Block
   |                             +- Local Variables:
   |                             |  +- Symbol Var [ key ] Type [ I ]
   |                             +- Code:
   |                                +- St: Statements:
   |                                |  +- St: =
   |                                |     +- Op: Local variable access: key {I}
   |                                |     +- Op: Call {I}
   |                                |        +- Op: Static Method:
   |                                |        |  +- org.lwjgl.input.Keyboard -> getEventKey
   |                                |        +- St: Zero Arguments
   |                                +- St: If Statement:
   |                                   +- Condition:
   |                                   |  +- Op: == {Z}
   |                                   |     +- Op: Local variable access: key {I}
   |                                   |     +- Op: Static Field: {I}
   |                                   |        +- org.lwjgl.input.Keyboard -> KEY_LEFT
   |                                   +- If Code:
   |                                   |  +- St: Block
   |                                   |     +- Code:
   |                                   |        +- St: If Statement:
   |                                   |           +- Condition:
   |                                   |           |  +- Op: Call {Z}
   |                                   |           |     +- Op: Static Method:
   |                                   |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                   |           |     +- St: Zero Arguments
   |                                   |           +- If Code:
   |                                   |              +- St: Block
   |                                   |                 +- Code:
   |                                   |                    +- St: Call to Event tetris.input.ELeft
   |                                   |                       +- St: Zero Arguments
   |                                   +- Else Code:
   |                                      +- St: If Statement:
   |                                         +- Condition:
   |                                         |  +- Op: == {Z}
   |                                         |     +- Op: Local variable access: key {I}
   |                                         |     +- Op: Static Field: {I}
   |                                         |        +- org.lwjgl.input.Keyboard -> KEY_RIGHT
   |                                         +- If Code:
   |                                         |  +- St: Block
   |                                         |     +- Code:
   |                                         |        +- St: If Statement:
   |                                         |           +- Condition:
   |                                         |           |  +- Op: Call {Z}
   |                                         |           |     +- Op: Static Method:
   |                                         |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                         |           |     +- St: Zero Arguments
   |                                         |           +- If Code:
   |                                         |              +- St: Block
   |                                         |                 +- Code:
   |                                         |                    +- St: Call to Event tetris.input.ERight
   |                                         |                       +- St: Zero Arguments
   |                                         +- Else Code:
   |                                            +- St: If Statement:
   |                                               +- Condition:
   |                                               |  +- Op: == {Z}
   |                                               |     +- Op: Local variable access: key {I}
   |                                               |     +- Op: Static Field: {I}
   |                                               |        +- org.lwjgl.input.Keyboard -> KEY_UP
   |                                               +- If Code:
   |                                               |  +- St: Block
   |                                               |     +- Code:
   |                                               |        +- St: If Statement:
   |                                               |           +- Condition:
   |                                               |           |  +- Op: Call {Z}
   |                                               |           |     +- Op: Static Method:
   |                                               |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                               |           |     +- St: Zero Arguments
   |                                               |           +- If Code:
   |                                               |              +- St: Block
   |                                               |                 +- Code:
   |                                               |                    +- St: Call to Event tetris.input.EUp
   |                                               |                       +- St: Zero Arguments
   |                                               +- Else Code:
   |                                                  +- St: If Statement:
   |                                                     +- Condition:
   |                                                     |  +- Op: == {Z}
   |                                                     |     +- Op: Local variable access: key {I}
   |                                                     |     +- Op: Static Field: {I}
   |                                                     |        +- org.lwjgl.input.Keyboard -> KEY_DOWN
   |                                                     +- If Code:
   |                                                     |  +- St: Block
   |                                                     |     +- Code:
   |                                                     |        +- St: If Statement:
   |                                                     |           +- Condition:
   |                                                     |           |  +- Op: Call {Z}
   |                                                     |           |     +- Op: Static Method:
   |                                                     |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                     |           |     +- St: Zero Arguments
   |                                                     |           +- If Code:
   |                                                     |              +- St: Block
   |                                                     |                 +- Code:
   |                                                     |                    +- St: Call to Event tetris.input.EDown
   |                                                     |                       +- St: Zero Arguments
   |                                                     +- Else Code:
   |                                                        +- St: If Statement:
   |                                                           +- Condition:
   |                                                           |  +- Op: == {Z}
   |                                                           |     +- Op: Local variable access: key {I}
   |                                                           |     +- Op: Static Field: {I}
   |                                                           |        +- org.lwjgl.input.Keyboard -> KEY_A
   |                                                           +- If Code:
   |                                                           |  +- St: Block
   |                                                           |     +- Code:
   |                                                           |        +- St: If Statement:
   |                                                           |           +- Condition:
   |                                                           |           |  +- Op: Call {Z}
   |                                                           |           |     +- Op: Static Method:
   |                                                           |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                           |           |     +- St: Zero Arguments
   |                                                           |           +- If Code:
   |                                                           |              +- St: Block
   |                                                           |                 +- Code:
   |                                                           |                    +- St: Call to Event tetris.input.ETurnL
   |                                                           |                       +- St: Zero Arguments
   |                                                           +- Else Code:
   |                                                              +- St: If Statement:
   |                                                                 +- Condition:
   |                                                                 |  +- Op: == {Z}
   |                                                                 |     +- Op: Local variable access: key {I}
   |                                                                 |     +- Op: Static Field: {I}
   |                                                                 |        +- org.lwjgl.input.Keyboard -> KEY_D
   |                                                                 +- If Code:
   |                                                                 |  +- St: Block
   |                                                                 |     +- Code:
   |                                                                 |        +- St: If Statement:
   |                                                                 |           +- Condition:
   |                                                                 |           |  +- Op: Call {Z}
   |                                                                 |           |     +- Op: Static Method:
   |                                                                 |           |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                                 |           |     +- St: Zero Arguments
   |                                                                 |           +- If Code:
   |                                                                 |              +- St: Block
   |                                                                 |                 +- Code:
   |                                                                 |                    +- St: Call to Event tetris.input.ETurnR
   |                                                                 |                       +- St: Zero Arguments
   |                                                                 +- Else Code:
   |                                                                    +- St: If Statement:
   |                                                                       +- Condition:
   |                                                                       |  +- Op: == {Z}
   |                                                                       |     +- Op: Local variable access: key {I}
   |                                                                       |     +- Op: Static Field: {I}
   |                                                                       |        +- org.lwjgl.input.Keyboard -> KEY_ESCAPE
   |                                                                       +- If Code:
   |                                                                          +- St: Block
   |                                                                             +- Code:
   |                                                                                +- St: If Statement:
   |                                                                                   +- Condition:
   |                                                                                   |  +- Op: Call {Z}
   |                                                                                   |     +- Op: Static Method:
   |                                                                                   |     |  +- org.lwjgl.input.Keyboard -> getEventKeyState
   |                                                                                   |     +- St: Zero Arguments
   |                                                                                   +- If Code:
   |                                                                                      +- St: Block
   |                                                                                         +- Code:
   |                                                                                            +- St: Call to Event tetris.input.EEscape
   |                                                                                               +- St: Zero Arguments
   +- "cat.quadriga.base.RendererComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "tetris.input.EDown" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.BoxRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "SimpleNodeSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.Transform
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/Node;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Call {I}
   |     |                 |              +- Op: Method:
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |              +- St: Zero Arguments
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                 |        +- cat.quadriga.base.Transform -> position
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |     |                 |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;}
   |     |                 |        +- cat.quadriga.base.Transform -> rotation
   |     |                 |        +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.Transform
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.Node -> setScale
   |     |                    |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.Transform -> scale
   |     |                          +- Op: Component Access {cat.quadriga.base.Transform}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.Transform
   |     +- New Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    |  +- Symbol Var [ node ] Type [ Lcat/quadriga/render/simple/Node; ]
   |                    |  +- Symbol Var [ parent ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |     +- Op: Call {Lcat/quadriga/render/simple/Node;}
   |                       |        +- Op: Method:
   |                       |        |  +- cat.quadriga.render.simple.RenderManager -> getNode
   |                       |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- St: Arguments
   |                       |           +- Op: Call {I}
   |                       |              +- Op: Method:
   |                       |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |              +- St: Zero Arguments
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |     +- Op: Call {Lcat/quadriga/runtime/Entity;}
   |                       |        +- Op: Method:
   |                       |        |  +- cat.quadriga.runtime.Entity -> getParent
   |                       |        |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |        +- St: Zero Arguments
   |                       +- St: If Statement:
   |                       |  +- Condition:
   |                       |  |  +- Op: ! {Z}
   |                       |  |     +- Op: isnull {Z}
   |                       |  |        +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |  +- If Code:
   |                       |     +- St: Block
   |                       |        +- Code:
   |                       |           +- St: Statement From Expression : Call
   |                       |              +- Op: Method:
   |                       |              |  +- cat.quadriga.render.simple.RenderManager -> setParent
   |                       |              |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |              +- St: Arguments
   |                       |                 +- Op: Call {I}
   |                       |                 |  +- Op: Method:
   |                       |                 |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                 |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |                 |  +- St: Zero Arguments
   |                       |                 +- Op: Call {I}
   |                       |                    +- Op: Method:
   |                       |                    |  +- cat.quadriga.runtime.Entity -> getGUID
   |                       |                    |  +- Op: Local variable access: parent {Lcat/quadriga/runtime/Entity;}
   |                       |                    +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.Node -> setTranslation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                       |        +- cat.quadriga.base.Transform -> position
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform}
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.Node -> setRotation
   |                       |  |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Component Field: {Ljavax/vecmath/Quat4f;}
   |                       |        +- cat.quadriga.base.Transform -> rotation
   |                       |        +- Op: Component Access {cat.quadriga.base.Transform}
   |                       |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                       |           +- Op: Type Access: cat.quadriga.base.Transform
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.Node -> setScale
   |                          |  +- Op: Local variable access: node {Lcat/quadriga/render/simple/Node;}
   |                          +- St: Arguments
   |                             +- Op: Component Field: {F}
   |                                +- cat.quadriga.base.Transform -> scale
   |                                +- Op: Component Access {cat.quadriga.base.Transform}
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                   +- Op: Type Access: cat.quadriga.base.Transform
   +- "cat.quadriga.base.SceneComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Lcat/quadriga/runtime/Entity;
   |           +- "camera"
   +- "SGameOverScreen" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.CGameOverScreen
   |     +- EventHandlers
   |        +- tetris.input.EEscape
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Code:
   |                          +- St: If Statement:
   |                             +- Condition:
   |                             |  +- Op: Component Field: {Z}
   |                             |     +- tetris.tetris.CGameOverScreen -> delay
   |                             |     +- Op: Component Access {tetris.tetris.CGameOverScreen}
   |                             |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |        +- Op: Type Access: tetris.tetris.CGameOverScreen
   |                             +- If Code:
   |                             |  +- St: Block
   |                             |     +- Code:
   |                             |        +- St: =
   |                             |           +- Op: Component Field: {Z}
   |                             |           |  +- tetris.tetris.CGameOverScreen -> delay
   |                             |           |  +- Op: Component Access {tetris.tetris.CGameOverScreen}
   |                             |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |           |     +- Op: Type Access: tetris.tetris.CGameOverScreen
   |                             |           +- Op: Literal: false {Z}
   |                             +- Else Code:
   |                                +- St: Block
   |                                   +- Code:
   |                                      +- St: Call to Event cat.quadriga.base.Exit
   |                                         +- St: Zero Arguments
   +- "tetris.input.ERight" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.SimpleBoxRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.BoxRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setBox
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                          +- Op: Method:
   |     |                          |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                          |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                          +- St: Zero Arguments
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteBox
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "BillboardRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   +- "cat.quadriga.base.SimpleRenderThread" : Symbol Type
   |  +- thread <+>
   |     +- cat.quadriga.base.SimpleCameraSystem
   |     +- cat.quadriga.base.SimpleNodeSystem
   |     +- cat.quadriga.base.SimpleSphereRenderer
   |     +- cat.quadriga.base.SimpleBoxRenderer
   |     +- cat.quadriga.base.SimpleTextRenderer
   |     +- cat.quadriga.base.ColoredMaterialRenderer
   |     +- cat.quadriga.base.EndRender
   +- "cat.quadriga.base.TexturedQuadPrototype" : Symbol Type
   |  +- Prototype <+>
   |     +- St: Block
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.TexturedQuad}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  |     +- Quadriga Field
   |              |  |     |  +- Ljavax/vecmath/Vector3f;
   |              |  |     |  +- "position"
   |              |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              |  |     |     +- Ljavax/vecmath/Vector3f;
   |              |  |     |     +- St: Zero Arguments
   |              |  |     +- Quadriga Field
   |              |  |        +- Ljava/lang/String;
   |              |  |        +- "texture"
   |              |  |        +- Op: Literal: "" {Ljava/lang/String;}
   |              |  +- St: Zero Arguments
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "tetris.input.EEscape" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "EndRender" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.RendererComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Code:
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Static Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> initRender
   |                       |  +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> renderGraph
   |                       |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                       |  +- St: Zero Arguments
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Static Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> switchBuffers
   |                       |  +- St: Zero Arguments
   |                       +- St: If Statement:
   |                          +- Condition:
   |                          |  +- Op: Call {Z}
   |                          |     +- Op: Static Method:
   |                          |     |  +- cat.quadriga.render.simple.RenderManager -> isCloseRequested
   |                          |     +- St: Zero Arguments
   |                          +- If Code:
   |                             +- St: Block
   |                                +- Code:
   |                                   +- St: Call to Event cat.quadriga.base.Exit
   |                                      +- St: Zero Arguments
   +- "tetris.tetris.SGameOverScreen" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.CGameOverScreen
   |     +- EventHandlers
   |        +- tetris.input.EEscape
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Code:
   |                          +- St: If Statement:
   |                             +- Condition:
   |                             |  +- Op: Component Field: {Z}
   |                             |     +- tetris.tetris.CGameOverScreen -> delay
   |                             |     +- Op: Component Access {tetris.tetris.CGameOverScreen}
   |                             |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |        +- Op: Type Access: tetris.tetris.CGameOverScreen
   |                             +- If Code:
   |                             |  +- St: Block
   |                             |     +- Code:
   |                             |        +- St: =
   |                             |           +- Op: Component Field: {Z}
   |                             |           |  +- tetris.tetris.CGameOverScreen -> delay
   |                             |           |  +- Op: Component Access {tetris.tetris.CGameOverScreen}
   |                             |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                             |           |     +- Op: Type Access: tetris.tetris.CGameOverScreen
   |                             |           +- Op: Literal: false {Z}
   |                             +- Else Code:
   |                                +- St: Block
   |                                   +- Code:
   |                                      +- St: Call to Event cat.quadriga.base.Exit
   |                                         +- St: Zero Arguments
   +- "Materials" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- [Lcat/quadriga/java/base/BaseMaterial;
   |           +- "materials"
   |           +- Op: Array initialization {[Lcat/quadriga/java/base/BaseMaterial;}
   |              +- Op: new array {[Lcat/quadriga/java/base/BaseMaterial;}
   |                 +- Lcat/quadriga/java/base/BaseMaterial;
   |                 +- Op: Literal: 0 {I}
   +- "tetris.tetris.ColorCub" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- I
   |           +- "color"
   +- "tetris.tetris.CubDeTaulell" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- I
   |     |  |  +- posX
   |     |  +- parameter
   |     |  |  +- I
   |     |  |  +- posY
   |     |  +- parameter
   |     |     +- I
   |     |     +- color
   |     +- St: Block
   |        +- Local Variables:
   |        |  +- Symbol Var [ posX ] Type [ I ]
   |        |  +- Symbol Var [ posY ] Type [ I ]
   |        |  +- Symbol Var [ color ] Type [ I ]
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Named Arguments
   |           |  |     +- quadriga argument
   |           |  |        +- position
   |           |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |           +- Ljavax/vecmath/Vector3f;
   |           |  |           +- St: Arguments
   |           |  |              +- Op: * {I}
   |           |  |              |  +- Op: Local variable access: posX {I}
   |           |  |              |  +- Op: Literal: 2 {I}
   |           |  |              +- Op: Literal: 0 {I}
   |           |  |              +- Op: * {I}
   |           |  |                 +- Op: Local variable access: posY {I}
   |           |  |                 +- Op: Literal: 2 {I}
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.BoxRenderer}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {tetris.tetris.ColorCub}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- I
   |           |  |  |        +- "color"
   |           |  |  +- St: Named Arguments
   |           |  |     +- quadriga argument
   |           |  |        +- color
   |           |  |        +- Op: Local variable access: color {I}
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Block
   |              +- Code:
   |                 +- St: switch
   |                    +- Op: Local variable access: color {I}
   |                    +- case
   |                    |  +- Op: Literal: 1 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                    |  +- Op: Literal: 2 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                    |  +- Op: Literal: 3 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                    |  +- Op: Literal: 4 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                    |  +- Op: Literal: 5 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                    |  +- Op: Literal: 6 {I}
   |                    |  +- St: Add Component
   |                    |  |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                    |  |  |  +- Component <+>
   |                    |  |  |  |  +- fields
   |                    |  |  |  |     +- Quadriga Field
   |                    |  |  |  |        +- Ljavax/vecmath/Vector3f;
   |                    |  |  |  |        +- "color"
   |                    |  |  |  +- St: Named Arguments
   |                    |  |  |     +- quadriga argument
   |                    |  |  |        +- color
   |                    |  |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                    |  |  |           +- Ljavax/vecmath/Vector3f;
   |                    |  |  |           +- St: Arguments
   |                    |  |  |              +- Op: Literal: 0.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  |              +- Op: Literal: 1.0 {F}
   |                    |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                    |  +- St: break
   |                    +- case
   |                       +- Op: Literal: 7 {I}
   |                       +- St: Add Component
   |                       |  +- Op: Component Allocation {cat.quadriga.base.ColoredMaterial}
   |                       |  |  +- Component <+>
   |                       |  |  |  +- fields
   |                       |  |  |     +- Quadriga Field
   |                       |  |  |        +- Ljavax/vecmath/Vector3f;
   |                       |  |  |        +- "color"
   |                       |  |  +- St: Named Arguments
   |                       |  |     +- quadriga argument
   |                       |  |        +- color
   |                       |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                       |  |           +- Ljavax/vecmath/Vector3f;
   |                       |  |           +- St: Arguments
   |                       |  |              +- Op: Literal: 1.0 {F}
   |                       |  |              +- Op: Literal: 1.0 {F}
   |                       |  |              +- Op: Literal: 1.0 {F}
   |                       |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |                       +- St: break
   +- "tetris.tetris.InsertarPeça" : Symbol Type
   |  +- Event <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "px"
   |        |  +- Op: new primitive array {[I}
   |        |     +- I
   |        |     +- Op: Literal: 4 {I}
   |        +- Quadriga Field
   |        |  +- [I
   |        |  +- "py"
   |        |  +- Op: new primitive array {[I}
   |        |     +- I
   |        |     +- Op: Literal: 4 {I}
   |        +- Quadriga Field
   |           +- I
   |           +- "color"
   +- "cat.quadriga.base.ColoredMaterialRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.ColoredMaterial
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ material ] Type [ Lcat/quadriga/render/simple/materials/BaseMaterial; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.RenderManager -> getMaterial
   |     |                 |        |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Call {I}
   |     |                 |              +- Op: Method:
   |     |                 |              |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                 |              |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |              +- St: Zero Arguments
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.materials.BaseMaterial -> setParameter
   |     |                    |  +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Literal: "Color" {Ljava/lang/String;}
   |     |                       +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                          +- cat.quadriga.base.ColoredMaterial -> color
   |     |                          +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              |  +- Symbol Var [ material ] Type [ Lcat/quadriga/render/simple/materials/BaseMaterial; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |     +- Op: Call {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |        +- Op: Method:
   |     |                 |        |  +- cat.quadriga.render.simple.materials.MaterialManager -> getMaterial
   |     |                 |        |  +- Op: Call {Lcat/quadriga/render/simple/materials/MaterialManager;}
   |     |                 |        |     +- Op: Static Method:
   |     |                 |        |     |  +- cat.quadriga.render.simple.RenderManager -> getMaterialManager
   |     |                 |        |     +- St: Zero Arguments
   |     |                 |        +- St: Arguments
   |     |                 |           +- Op: Literal: "resources/materials/colorUniform.xml" {Ljava/lang/String;}
   |     |                 +- St: Statement From Expression : Call
   |     |                 |  +- Op: Method:
   |     |                 |  |  +- cat.quadriga.render.simple.materials.BaseMaterial -> setParameter
   |     |                 |  |  +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     |                 |  +- St: Arguments
   |     |                 |     +- Op: Literal: "Color" {Ljava/lang/String;}
   |     |                 |     +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |     |                 |        +- cat.quadriga.base.ColoredMaterial -> color
   |     |                 |        +- Op: Component Access {cat.quadriga.base.ColoredMaterial}
   |     |                 |           +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                 |           +- Op: Type Access: cat.quadriga.base.ColoredMaterial
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setMaterial
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Local variable access: material {Lcat/quadriga/render/simple/materials/BaseMaterial;}
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setMaterial
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                             |  +- Op: Method:
   |                             |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |                             |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |  +- St: Zero Arguments
   |                             +- Op: Literal: Null {Null type}
   +- "EDown" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "cat.quadriga.base.CilynderRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos1"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "pos2"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 1.0 {F}
   |        +- Quadriga Field
   |           +- F
   |           +- "radi"
   |           +- Op: Literal: 1.0 {F}
   +- "Main" : Symbol Type
   |  +- main
   |     +- thread: cat.quadriga.base.SimpleRenderThread
   |     +- thread: tetris.tetris.LlogicaTetris
   |     +- Quadriga function
   |        +- St: Block
   |           +- Code:
   |              +- St: Statement From Expression : Call
   |              |  +- Op: Method:
   |              |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |              |  |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |              |  |     +- cat.quadriga.render.simple.RenderManager -> instance
   |              |  +- St: Arguments
   |              |     +- Op: Literal: 90.0 {F}
   |              |     +- Op: / {F}
   |              |     |  +- Op: Literal: 800.0 {F}
   |              |     |  +- Op: Literal: 600.0 {F}
   |              |     +- Op: Literal: 10 {I}
   |              |     +- Op: Literal: 1000 {I}
   |              +- St: =
   |                 +- Op: Field: {Z}
   |                 |  +- cat.quadriga.render.simple.RenderManager -> renderFPS
   |                 |  +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                 |     +- cat.quadriga.render.simple.RenderManager -> instance
   |                 +- Op: Literal: true {Z}
   +- "tetris.input.EUp" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "java.util.Random" : Symbol Type
   |  +- Ljava/util/Random;
   +- "SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "cat.quadriga.base.SimpleTextRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.TextRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setText
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                       |  +- cat.quadriga.base.TextRenderer -> font
   |     |                       |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                       |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                          +- cat.quadriga.base.TextRenderer -> text
   |     |                          +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setText
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                       |  +- cat.quadriga.base.TextRenderer -> font
   |     |                       |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                       |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     |                       +- Op: Component Field: {Ljava/lang/String;}
   |     |                          +- cat.quadriga.base.TextRenderer -> text
   |     |                          +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.TextRenderer
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteText
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "cat.quadriga.render.simple.materials.BaseMaterial" : Symbol Type
   |  +- Lcat/quadriga/render/simple/materials/BaseMaterial;
   +- "tetris.tetris.CGameOverScreen" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Z
   |           +- "delay"
   |           +- Op: Literal: true {Z}
   +- "LlògicaTaulell" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.Taulell
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entitat
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ tipus ] Type [ I ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: tipus {I}
   |     |                 |     +- Op: + {I}
   |     |                 |        +- Op: Call {I}
   |     |                 |        |  +- Op: Method:
   |     |                 |        |  |  +- java.util.Random -> nextInt
   |     |                 |        |  |  +- Op: RND {Ljava/util/Random;}
   |     |                 |        |  +- St: Arguments
   |     |                 |        |     +- Op: Literal: 7 {I}
   |     |                 |        +- Op: Literal: 1 {I}
   |     |                 +- St: Call to Event tetris.tetris.NovaPeça
   |     |                    +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |  +- Op: Literal: "Peça" {Ljava/lang/String;}
   |     |                    +- St: Named Arguments
   |     |                       +- quadriga argument
   |     |                          +- tipus
   |     |                          +- Op: Local variable access: tipus {I}
   |     +- EventHandlers
   |        +- tetris.input.EEscape
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ gameOverScreen ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |        |                 |        +- Op: Literal: Null {Null type}
   |        |                 |        +- Op: Literal: Null {Null type}
   |        |                 +- St: Apply Prototype to Entity
   |        |                 |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 |  +- cat.quadriga.base.TextRendererPrototype
   |        |                 |  +- St: Named Arguments
   |        |                 |  |  +- quadriga argument
   |        |                 |  |  |  +- text
   |        |                 |  |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  |  +- Op: Literal: "Game Over\n\nPunts\n" {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  |  +- Op: Component Field: {I}
   |        |                 |  |  |     |  |  |  |     +- tetris.tetris.Puntuació -> punts
   |        |                 |  |  |     |  |  |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |     |  |  |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |     |  |  |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  |     |  |  |  +- Op: Literal: "\n\nLínies\n" {Ljava/lang/String;}
   |        |                 |  |  |     |  |  +- Op: Component Field: {I}
   |        |                 |  |  |     |  |     +- tetris.tetris.Puntuació -> línies
   |        |                 |  |  |     |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |     |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |     |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  |     |  +- Op: Literal: "\n\nNivell\n" {Ljava/lang/String;}
   |        |                 |  |  |     +- Op: Component Field: {I}
   |        |                 |  |  |        +- tetris.tetris.Puntuació -> nivell
   |        |                 |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  +- quadriga argument
   |        |                 |  |     +- font
   |        |                 |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |        |                 |  +- Component redefinition
   |        |                 |     +- cat.quadriga.base.Transform
   |        |                 |     +- St: Named Arguments
   |        |                 |        +- quadriga argument
   |        |                 |           +- position
   |        |                 |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |              +- Ljavax/vecmath/Vector3f;
   |        |                 |              +- St: Arguments
   |        |                 |                 +- Op: Literal: 300.0 {F}
   |        |                 |                 +- Op: Literal: 100.0 {F}
   |        |                 |                 +- Op: Literal: 0.0 {F}
   |        |                 +- St: Add Component
   |        |                 |  +- Op: Component Allocation {tetris.tetris.CGameOverScreen}
   |        |                 |  |  +- Component <+>
   |        |                 |  |  |  +- fields
   |        |                 |  |  |     +- Quadriga Field
   |        |                 |  |  |        +- Z
   |        |                 |  |  |        +- "delay"
   |        |                 |  |  |        +- Op: Literal: true {Z}
   |        |                 |  |  +- St: Zero Arguments
   |        |                 |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 +- St: Erase Entity
   |        |                    +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        +- tetris.tetris.InsertarPeça
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |  |  +- tetris.tetris.InsertarPeça
   |              |  |  +- event
   |              |  |  +- Semantic: EVENT
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Local Variables:
   |                       |  +- Symbol Var [ línies ] Type [ I ]
   |                       |  +- Symbol Var [ taulell ] Type [ [[I ]
   |                       |  +- Symbol Var [ cubs ] Type [ [[Lcat/quadriga/runtime/Entity; ]
   |                       |  +- Symbol Var [ gameover ] Type [ Z ]
   |                       +- Code:
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: línies {I}
   |                          |     +- Op: Literal: 0 {I}
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: taulell {[[I}
   |                          |     +- Op: Component Field: {[[I}
   |                          |        +- tetris.tetris.Taulell -> taulell
   |                          |        +- Op: Component Access {tetris.tetris.Taulell}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Taulell
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |     +- Op: Component Field: {[[Lcat/quadriga/runtime/Entity;}
   |                          |        +- tetris.tetris.Taulell -> cubs
   |                          |        +- Op: Component Access {tetris.tetris.Taulell}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Taulell
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ peça ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: peça {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: peça {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: peça {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ línea ] Type [ I ]
   |                          |     |  +- Symbol Var [ nouCub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: línea {I}
   |                          |        |     +- Op: Array Access {I}
   |                          |        |        +- Op: Event Field: {[I}
   |                          |        |        |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |        |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |        +- Op: Local variable access: peça {I}
   |                          |        +- St: =
   |                          |        |  +- Op: Array Access {I}
   |                          |        |  |  +- Op: Array Access {[I}
   |                          |        |  |  |  +- Op: Local variable access: taulell {[[I}
   |                          |        |  |  |  +- Op: Array Access {I}
   |                          |        |  |  |     +- Op: Event Field: {[I}
   |                          |        |  |  |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |        |  |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |  |  |     +- Op: Local variable access: peça {I}
   |                          |        |  |  +- Op: Array Access {I}
   |                          |        |  |     +- Op: Event Field: {[I}
   |                          |        |  |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |  |     +- Op: Local variable access: peça {I}
   |                          |        |  +- Op: Event Field: {I}
   |                          |        |     +- tetris.tetris.InsertarPeça -> color
   |                          |        |     +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |        |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                          |        |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |        +- Op: Literal: Null {Null type}
   |                          |        +- St: Apply Prototype to Entity
   |                          |        |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- tetris.tetris.CubDeTaulell
   |                          |        |  +- St: Named Arguments
   |                          |        |     +- quadriga argument
   |                          |        |     |  +- posY
   |                          |        |     |  +- Op: Array Access {I}
   |                          |        |     |     +- Op: Event Field: {[I}
   |                          |        |     |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |     |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |     |     +- Op: Local variable access: peça {I}
   |                          |        |     +- quadriga argument
   |                          |        |     |  +- posX
   |                          |        |     |  +- Op: Array Access {I}
   |                          |        |     |     +- Op: Event Field: {[I}
   |                          |        |     |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |        |     |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |     |     +- Op: Local variable access: peça {I}
   |                          |        |     +- quadriga argument
   |                          |        |        +- color
   |                          |        |        +- Op: Event Field: {I}
   |                          |        |           +- tetris.tetris.InsertarPeça -> color
   |                          |        |           +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        +- St: =
   |                          |           +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |           |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |           |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |           |  |  +- Op: Array Access {I}
   |                          |           |  |     +- Op: Event Field: {[I}
   |                          |           |  |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |  |     +- Op: Local variable access: peça {I}
   |                          |           |  +- Op: Array Access {I}
   |                          |           |     +- Op: Event Field: {[I}
   |                          |           |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |           |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     +- Op: Local variable access: peça {I}
   |                          |           +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ línea ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: línea {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: línea {I}
   |                          |  |  +- Op: Literal: 18 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: línea {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ netejarLinea ] Type [ Z ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: netejarLinea {Z}
   |                          |        |     +- Op: Literal: true {Z}
   |                          |        +- St: for
   |                          |        |  +- Local Variables:
   |                          |        |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |        |  +- St: Statements:
   |                          |        |  |  +- St: =
   |                          |        |  |     +- Op: Local variable access: i {I}
   |                          |        |  |     +- Op: Literal: 0 {I}
   |                          |        |  +- Op: < {Z}
   |                          |        |  |  +- Op: Local variable access: i {I}
   |                          |        |  |  +- Op: Literal: 10 {I}
   |                          |        |  +- St: Statements:
   |                          |        |  |  +- St: Statement From Expression : ++X
   |                          |        |  |     +- Op: Local variable access: i {I}
   |                          |        |  +- St: Block
   |                          |        |     +- Code:
   |                          |        |        +- St: If Statement:
   |                          |        |           +- Condition:
   |                          |        |           |  +- Op: == {Z}
   |                          |        |           |     +- Op: Array Access {I}
   |                          |        |           |     |  +- Op: Array Access {[I}
   |                          |        |           |     |  |  +- Op: Component Field: {[[I}
   |                          |        |           |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |                          |        |           |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |        |           |     |  |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |           |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |        |           |     |  |  +- Op: Local variable access: i {I}
   |                          |        |           |     |  +- Op: Local variable access: línea {I}
   |                          |        |           |     +- Op: Literal: 0 {I}
   |                          |        |           +- If Code:
   |                          |        |              +- St: Block
   |                          |        |                 +- Code:
   |                          |        |                    +- St: =
   |                          |        |                    |  +- Op: Local variable access: netejarLinea {Z}
   |                          |        |                    |  +- Op: Literal: false {Z}
   |                          |        |                    +- St: break
   |                          |        +- St: If Statement:
   |                          |           +- Condition:
   |                          |           |  +- Op: Local variable access: netejarLinea {Z}
   |                          |           +- If Code:
   |                          |              +- St: Block
   |                          |                 +- Code:
   |                          |                    +- St: for
   |                          |                    |  +- Local Variables:
   |                          |                    |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: =
   |                          |                    |  |     +- Op: Local variable access: i {I}
   |                          |                    |  |     +- Op: Literal: 0 {I}
   |                          |                    |  +- Op: < {Z}
   |                          |                    |  |  +- Op: Local variable access: i {I}
   |                          |                    |  |  +- Op: Literal: 10 {I}
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: Statement From Expression : ++X
   |                          |                    |  |     +- Op: Local variable access: i {I}
   |                          |                    |  +- St: Block
   |                          |                    |     +- Code:
   |                          |                    |        +- St: Erase Entity
   |                          |                    |        |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     |  +- Op: Local variable access: i {I}
   |                          |                    |        |     +- Op: Local variable access: línea {I}
   |                          |                    |        +- St: =
   |                          |                    |           +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  |  +- Op: Local variable access: i {I}
   |                          |                    |           |  +- Op: Local variable access: línea {I}
   |                          |                    |           +- Op: Literal: Null {Null type}
   |                          |                    +- St: for
   |                          |                    |  +- Local Variables:
   |                          |                    |  |  +- Symbol Var [ x ] Type [ I ]
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: =
   |                          |                    |  |     +- Op: Local variable access: x {I}
   |                          |                    |  |     +- Op: Literal: 0 {I}
   |                          |                    |  +- Op: < {Z}
   |                          |                    |  |  +- Op: Local variable access: x {I}
   |                          |                    |  |  +- Op: Literal: 10 {I}
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: Statement From Expression : ++X
   |                          |                    |  |     +- Op: Local variable access: x {I}
   |                          |                    |  +- St: Block
   |                          |                    |     +- Code:
   |                          |                    |        +- St: for
   |                          |                    |        |  +- Local Variables:
   |                          |                    |        |  |  +- Symbol Var [ y ] Type [ I ]
   |                          |                    |        |  +- St: Statements:
   |                          |                    |        |  |  +- St: =
   |                          |                    |        |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |  |     +- Op: Local variable access: línea {I}
   |                          |                    |        |  +- Op: < {Z}
   |                          |                    |        |  |  +- Op: Local variable access: y {I}
   |                          |                    |        |  |  +- Op: Literal: 17 {I}
   |                          |                    |        |  +- St: Statements:
   |                          |                    |        |  |  +- St: Statement From Expression : ++X
   |                          |                    |        |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |  +- St: Block
   |                          |                    |        |     +- Local Variables:
   |                          |                    |        |     |  +- Symbol Var [ cub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |                    |        |     +- Code:
   |                          |                    |        |        +- St: Statements:
   |                          |                    |        |        |  +- St: =
   |                          |                    |        |        |     +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |     +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |        +- Op: + {I}
   |                          |                    |        |        |           +- Op: Local variable access: y {I}
   |                          |                    |        |        |           +- Op: Literal: 1 {I}
   |                          |                    |        |        +- St: If Statement:
   |                          |                    |        |        |  +- Condition:
   |                          |                    |        |        |  |  +- Op: ! {Z}
   |                          |                    |        |        |  |     +- Op: isnull {Z}
   |                          |                    |        |        |  |        +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |  +- If Code:
   |                          |                    |        |        |     +- St: Block
   |                          |                    |        |        |        +- Local Variables:
   |                          |                    |        |        |        |  +- Symbol Var [ nouCub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |                    |        |        |        +- Code:
   |                          |                    |        |        |           +- St: Statements:
   |                          |                    |        |        |           |  +- St: =
   |                          |                    |        |        |           |     +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |        +- Op: Literal: Null {Null type}
   |                          |                    |        |        |           +- St: Apply Prototype to Entity
   |                          |                    |        |        |           |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  +- tetris.tetris.CubDeTaulell
   |                          |                    |        |        |           |  +- St: Named Arguments
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |     |  +- posY
   |                          |                    |        |        |           |     |  +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |     |  +- posX
   |                          |                    |        |        |           |     |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |        +- color
   |                          |                    |        |        |           |        +- Op: Component Field: {I}
   |                          |                    |        |        |           |           +- tetris.tetris.ColorCub -> color
   |                          |                    |        |        |           |           +- Op: Component Access {tetris.tetris.ColorCub}
   |                          |                    |        |        |           |              +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |              +- Op: Type Access: tetris.tetris.ColorCub
   |                          |                    |        |        |           +- St: =
   |                          |                    |        |        |           |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |  |  +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           +- St: =
   |                          |                    |        |        |           |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |  |  +- Op: + {I}
   |                          |                    |        |        |           |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |  |     +- Op: Literal: 1 {I}
   |                          |                    |        |        |           |  +- Op: Literal: Null {Null type}
   |                          |                    |        |        |           +- St: Erase Entity
   |                          |                    |        |        |              +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        +- St: =
   |                          |                    |        |           +- Op: Array Access {I}
   |                          |                    |        |           |  +- Op: Array Access {[I}
   |                          |                    |        |           |  |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |        |           |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |           |  +- Op: Local variable access: y {I}
   |                          |                    |        |           +- Op: Array Access {I}
   |                          |                    |        |              +- Op: Array Access {[I}
   |                          |                    |        |              |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |        |              |  +- Op: Local variable access: x {I}
   |                          |                    |        |              +- Op: + {I}
   |                          |                    |        |                 +- Op: Local variable access: y {I}
   |                          |                    |        |                 +- Op: Literal: 1 {I}
   |                          |                    |        +- St: =
   |                          |                    |           +- Op: Array Access {I}
   |                          |                    |           |  +- Op: Array Access {[I}
   |                          |                    |           |  |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |           |  |  +- Op: Local variable access: x {I}
   |                          |                    |           |  +- Op: Literal: 17 {I}
   |                          |                    |           +- Op: Literal: 0 {I}
   |                          |                    +- St: Statement From Expression : --X
   |                          |                    |  +- Op: Local variable access: línea {I}
   |                          |                    +- St: Statement From Expression : ++X
   |                          |                       +- Op: Local variable access: línies {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[[I}
   |                          |  |  +- tetris.tetris.Taulell -> taulell
   |                          |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |  +- Op: Local variable access: taulell {[[I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[[Lcat/quadriga/runtime/Entity;}
   |                          |  |  +- tetris.tetris.Taulell -> cubs
   |                          |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> línies
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: + {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> línies
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Local variable access: línies {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> nivell
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: / {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> línies
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Literal: 5 {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> punts
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: + {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> punts
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Literal: 11 {I}
   |                          +- St: If Statement:
   |                          |  +- Condition:
   |                          |  |  +- Op: == {Z}
   |                          |  |     +- Op: Local variable access: línies {I}
   |                          |  |     +- Op: Literal: 1 {I}
   |                          |  +- If Code:
   |                          |  |  +- St: Block
   |                          |  |     +- Code:
   |                          |  |        +- St: =
   |                          |  |           +- Op: Component Field: {I}
   |                          |  |           |  +- tetris.tetris.Puntuació -> punts
   |                          |  |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  |           +- Op: + {I}
   |                          |  |              +- Op: Component Field: {I}
   |                          |  |              |  +- tetris.tetris.Puntuació -> punts
   |                          |  |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  |              +- Op: Literal: 30 {I}
   |                          |  +- Else Code:
   |                          |     +- St: If Statement:
   |                          |        +- Condition:
   |                          |        |  +- Op: == {Z}
   |                          |        |     +- Op: Local variable access: línies {I}
   |                          |        |     +- Op: Literal: 2 {I}
   |                          |        +- If Code:
   |                          |        |  +- St: Block
   |                          |        |     +- Code:
   |                          |        |        +- St: =
   |                          |        |           +- Op: Component Field: {I}
   |                          |        |           |  +- tetris.tetris.Puntuació -> punts
   |                          |        |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |        |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |        |           +- Op: + {I}
   |                          |        |              +- Op: Component Field: {I}
   |                          |        |              |  +- tetris.tetris.Puntuació -> punts
   |                          |        |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |        |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |        |              +- Op: Literal: 71 {I}
   |                          |        +- Else Code:
   |                          |           +- St: If Statement:
   |                          |              +- Condition:
   |                          |              |  +- Op: == {Z}
   |                          |              |     +- Op: Local variable access: línies {I}
   |                          |              |     +- Op: Literal: 3 {I}
   |                          |              +- If Code:
   |                          |              |  +- St: Block
   |                          |              |     +- Code:
   |                          |              |        +- St: =
   |                          |              |           +- Op: Component Field: {I}
   |                          |              |           |  +- tetris.tetris.Puntuació -> punts
   |                          |              |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |              |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |              |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |              |           +- Op: + {I}
   |                          |              |              +- Op: Component Field: {I}
   |                          |              |              |  +- tetris.tetris.Puntuació -> punts
   |                          |              |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |              |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |              |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |              |              +- Op: Literal: 111 {I}
   |                          |              +- Else Code:
   |                          |                 +- St: If Statement:
   |                          |                    +- Condition:
   |                          |                    |  +- Op: == {Z}
   |                          |                    |     +- Op: Local variable access: línies {I}
   |                          |                    |     +- Op: Literal: 4 {I}
   |                          |                    +- If Code:
   |                          |                       +- St: Block
   |                          |                          +- Code:
   |                          |                             +- St: =
   |                          |                                +- Op: Component Field: {I}
   |                          |                                |  +- tetris.tetris.Puntuació -> punts
   |                          |                                |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |                                |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                                |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |                                +- Op: + {I}
   |                          |                                   +- Op: Component Field: {I}
   |                          |                                   |  +- tetris.tetris.Puntuació -> punts
   |                          |                                   |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |                                   |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                                   |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |                                   +- Op: Literal: 160 {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Punts" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Punts\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> punts
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Línies" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Línies\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> línies
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Nivell" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Nivell\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> nivell
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: gameover {Z}
   |                          |     +- Op: Literal: false {Z}
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: i {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  +- St: Block
   |                          |     +- Code:
   |                          |        +- St: If Statement:
   |                          |           +- Condition:
   |                          |           |  +- Op: && {Z}
   |                          |           |     +- Op: && {Z}
   |                          |           |     |  +- Op: > {Z}
   |                          |           |     |  |  +- Op: Array Access {I}
   |                          |           |     |  |  |  +- Op: Event Field: {[I}
   |                          |           |     |  |  |  |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |     |  |  |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     |  |  |  +- Op: Local variable access: i {I}
   |                          |           |     |  |  +- Op: Literal: 2 {I}
   |                          |           |     |  +- Op: < {Z}
   |                          |           |     |     +- Op: Array Access {I}
   |                          |           |     |     |  +- Op: Event Field: {[I}
   |                          |           |     |     |  |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |     |     |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     |     |  +- Op: Local variable access: i {I}
   |                          |           |     |     +- Op: Literal: 7 {I}
   |                          |           |     +- Op: > {Z}
   |                          |           |        +- Op: Array Access {I}
   |                          |           |        |  +- Op: Event Field: {[I}
   |                          |           |        |  |  +- tetris.tetris.InsertarPeça -> py
   |                          |           |        |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |        |  +- Op: Local variable access: i {I}
   |                          |           |        +- Op: Literal: 15 {I}
   |                          |           +- If Code:
   |                          |              +- St: Block
   |                          |                 +- Code:
   |                          |                    +- St: =
   |                          |                       +- Op: Local variable access: gameover {Z}
   |                          |                       +- Op: Literal: true {Z}
   |                          +- St: If Statement:
   |                             +- Condition:
   |                             |  +- Op: Local variable access: gameover {Z}
   |                             +- If Code:
   |                                +- St: Block
   |                                   +- Local Variables:
   |                                   |  +- Symbol Var [ gameOverScreen ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                                   +- Code:
   |                                      +- St: Statements:
   |                                      |  +- St: =
   |                                      |     +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                                      |        +- Op: Literal: Null {Null type}
   |                                      |        +- Op: Literal: Null {Null type}
   |                                      +- St: Apply Prototype to Entity
   |                                      |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      |  +- cat.quadriga.base.TextRendererPrototype
   |                                      |  +- St: Named Arguments
   |                                      |  |  +- quadriga argument
   |                                      |  |  |  +- text
   |                                      |  |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  |  +- Op: Literal: "Game Over\n\nPunts\n" {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  |  +- Op: Component Field: {I}
   |                                      |  |  |     |  |  |  |     +- tetris.tetris.Puntuació -> punts
   |                                      |  |  |     |  |  |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |     |  |  |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |     |  |  |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  |     |  |  |  +- Op: Literal: "\n\nLínies\n" {Ljava/lang/String;}
   |                                      |  |  |     |  |  +- Op: Component Field: {I}
   |                                      |  |  |     |  |     +- tetris.tetris.Puntuació -> línies
   |                                      |  |  |     |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |     |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |     |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  |     |  +- Op: Literal: "\n\nNivell\n" {Ljava/lang/String;}
   |                                      |  |  |     +- Op: Component Field: {I}
   |                                      |  |  |        +- tetris.tetris.Puntuació -> nivell
   |                                      |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  +- quadriga argument
   |                                      |  |     +- font
   |                                      |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |                                      |  +- Component redefinition
   |                                      |     +- cat.quadriga.base.Transform
   |                                      |     +- St: Named Arguments
   |                                      |        +- quadriga argument
   |                                      |           +- position
   |                                      |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                                      |              +- Ljavax/vecmath/Vector3f;
   |                                      |              +- St: Arguments
   |                                      |                 +- Op: Literal: 300.0 {F}
   |                                      |                 +- Op: Literal: 100.0 {F}
   |                                      |                 +- Op: Literal: 0.0 {F}
   |                                      +- St: Add Component
   |                                      |  +- Op: Component Allocation {tetris.tetris.CGameOverScreen}
   |                                      |  |  +- Component <+>
   |                                      |  |  |  +- fields
   |                                      |  |  |     +- Quadriga Field
   |                                      |  |  |        +- Z
   |                                      |  |  |        +- "delay"
   |                                      |  |  |        +- Op: Literal: true {Z}
   |                                      |  |  +- St: Named Arguments
   |                                      |  |     +- quadriga argument
   |                                      |  |        +- delay
   |                                      |  |        +- Op: Literal: false {Z}
   |                                      |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      +- St: Erase Entity
   |                                         +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   +- "cat.quadriga.base.CameraComponent" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "position"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        +- Quadriga Field
   |        |  +- Ljavax/vecmath/Vector3f;
   |        |  +- "lookAt"
   |        |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |     +- Ljavax/vecmath/Vector3f;
   |        |     +- St: Arguments
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 0.0 {F}
   |        |        +- Op: Literal: 1.0 {F}
   |        +- Quadriga Field
   |           +- Ljavax/vecmath/Vector3f;
   |           +- "up"
   |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |              +- Ljavax/vecmath/Vector3f;
   |              +- St: Arguments
   |                 +- Op: Literal: 0.0 {F}
   |                 +- Op: Literal: 1.0 {F}
   |                 +- Op: Literal: 0.0 {F}
   +- "tetris.tetris.PPeça" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     +- taulell
   |     +- St: Block
   |        +- Local Variables:
   |        |  +- Symbol Var [ taulell ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Zero Arguments
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {tetris.tetris.CPeça}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "t"
   |           |  |  |     |  +- Op: Literal: 0 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- [I
   |           |  |  |     |  +- "px"
   |           |  |  |     |  +- Op: new primitive array {[I}
   |           |  |  |     |     +- I
   |           |  |  |     |     +- Op: Literal: 4 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- [I
   |           |  |  |     |  +- "py"
   |           |  |  |     |  +- Op: new primitive array {[I}
   |           |  |  |     |     +- I
   |           |  |  |     |     +- Op: Literal: 4 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- I
   |           |  |  |     |  +- "tipus"
   |           |  |  |     |  +- Op: Literal: 1 {I}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Lcat/quadriga/runtime/Entity;
   |           |  |  |        +- "taulell"
   |           |  |  +- St: Named Arguments
   |           |  |     +- quadriga argument
   |           |  |        +- taulell
   |           |  |        +- Op: Local variable access: taulell {Lcat/quadriga/runtime/Entity;}
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "cub1" {Ljava/lang/String;}
   |           |  +- tetris.tetris.CubDeTaulell
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |     |  +- posX
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |        +- color
   |           |        +- Op: Literal: 1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "cub2" {Ljava/lang/String;}
   |           |  +- tetris.tetris.CubDeTaulell
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |     |  +- posX
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |        +- color
   |           |        +- Op: Literal: 1 {I}
   |           +- St: Apply Prototype to Entity
   |           |  +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           |  |  +- Op: Literal: "cub3" {Ljava/lang/String;}
   |           |  +- tetris.tetris.CubDeTaulell
   |           |  +- St: Named Arguments
   |           |     +- quadriga argument
   |           |     |  +- posY
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |     |  +- posX
   |           |     |  +- Op: Literal: 0 {I}
   |           |     +- quadriga argument
   |           |        +- color
   |           |        +- Op: Literal: 1 {I}
   |           +- St: Apply Prototype to Entity
   |              +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |              |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |              |  +- Op: Literal: "cub4" {Ljava/lang/String;}
   |              +- tetris.tetris.CubDeTaulell
   |              +- St: Named Arguments
   |                 +- quadriga argument
   |                 |  +- posY
   |                 |  +- Op: Literal: 0 {I}
   |                 +- quadriga argument
   |                 |  +- posX
   |                 |  +- Op: Literal: 0 {I}
   |                 +- quadriga argument
   |                    +- color
   |                    +- Op: Literal: 1 {I}
   +- "tetris.input.ELeft" : Symbol Type
   |  +- Event <+>
   |     +- fields
   +- "SimpleCameraSystem" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.CameraComponent
   |     +- Update: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                       |  +- Op: Method:
   |                       |  |  +- cat.quadriga.render.simple.RenderManager -> setPerspective
   |                       |  |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |  +- St: Arguments
   |                       |     +- Op: Literal: 45.0 {F}
   |                       |     +- Op: Literal: 1.0 {F}
   |                       |     +- Op: Literal: 99.0 {F}
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> setCamera
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.CameraComponent -> position
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                             |  +- cat.quadriga.base.CameraComponent -> lookAt
   |                             |  +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                             |     +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                             |     +- Op: Type Access: cat.quadriga.base.CameraComponent
   |                             +- Op: Component Field: {Ljavax/vecmath/Vector3f;}
   |                                +- cat.quadriga.base.CameraComponent -> up
   |                                +- Op: Component Access {cat.quadriga.base.CameraComponent}
   |                                   +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                   +- Op: Type Access: cat.quadriga.base.CameraComponent
   +- "cat.quadriga.base.StaticMeshRenderer" : Symbol Type
   |  +- Component <+>
   |     +- fields
   |        +- Quadriga Field
   |           +- Ljava/lang/String;
   |           +- "mesh"
   +- "tetris.tetris.LlogicaTetris" : Symbol Type
   |  +- thread <+>
   |     +- tetris.tetris.SGameOverScreen
   |     +- tetris.input.InputManager
   |     +- tetris.tetris.LlògicaTaulell
   |     +- tetris.tetris.LlògicaPeça
   +- "tetris.tetris.LlògicaTaulell" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- tetris.tetris.Taulell
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entitat
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ tipus ] Type [ I ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: tipus {I}
   |     |                 |     +- Op: + {I}
   |     |                 |        +- Op: Call {I}
   |     |                 |        |  +- Op: Method:
   |     |                 |        |  |  +- java.util.Random -> nextInt
   |     |                 |        |  |  +- Op: RND {Ljava/util/Random;}
   |     |                 |        |  +- St: Arguments
   |     |                 |        |     +- Op: Literal: 7 {I}
   |     |                 |        +- Op: Literal: 1 {I}
   |     |                 +- St: Call to Event tetris.tetris.NovaPeça
   |     |                    +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |     |                    |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |     |                    |  +- Op: Literal: "Peça" {Ljava/lang/String;}
   |     |                    +- St: Named Arguments
   |     |                       +- quadriga argument
   |     |                          +- tipus
   |     |                          +- Op: Local variable access: tipus {I}
   |     +- EventHandlers
   |        +- tetris.input.EEscape
   |        |  +- Quadriga function
   |        |     +- parameters
   |        |     |  +- parameter
   |        |     |     +- Lcat/quadriga/runtime/Entity;
   |        |     |     +- entitat
   |        |     |     +- Semantic: ENTITY
   |        |     +- St: Block
   |        |        +- Code:
   |        |           +- St: Block
   |        |              +- Local Variables:
   |        |              |  +- Symbol Var [ gameOverScreen ] Type [ Lcat/quadriga/runtime/Entity; ]
   |        |              +- Code:
   |        |                 +- St: Statements:
   |        |                 |  +- St: =
   |        |                 |     +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |        |                 |        +- Op: Literal: Null {Null type}
   |        |                 |        +- Op: Literal: Null {Null type}
   |        |                 +- St: Apply Prototype to Entity
   |        |                 |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 |  +- cat.quadriga.base.TextRendererPrototype
   |        |                 |  +- St: Named Arguments
   |        |                 |  |  +- quadriga argument
   |        |                 |  |  |  +- text
   |        |                 |  |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  +- Op: + {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  |  +- Op: Literal: "Game Over\n\nPunts\n" {Ljava/lang/String;}
   |        |                 |  |  |     |  |  |  |  +- Op: Component Field: {I}
   |        |                 |  |  |     |  |  |  |     +- tetris.tetris.Puntuació -> punts
   |        |                 |  |  |     |  |  |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |     |  |  |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |     |  |  |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  |     |  |  |  +- Op: Literal: "\n\nLínies\n" {Ljava/lang/String;}
   |        |                 |  |  |     |  |  +- Op: Component Field: {I}
   |        |                 |  |  |     |  |     +- tetris.tetris.Puntuació -> línies
   |        |                 |  |  |     |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |     |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |     |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  |     |  +- Op: Literal: "\n\nNivell\n" {Ljava/lang/String;}
   |        |                 |  |  |     +- Op: Component Field: {I}
   |        |                 |  |  |        +- tetris.tetris.Puntuació -> nivell
   |        |                 |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |        |                 |  |  |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        |                 |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |        |                 |  |  +- quadriga argument
   |        |                 |  |     +- font
   |        |                 |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |        |                 |  +- Component redefinition
   |        |                 |     +- cat.quadriga.base.Transform
   |        |                 |     +- St: Named Arguments
   |        |                 |        +- quadriga argument
   |        |                 |           +- position
   |        |                 |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |        |                 |              +- Ljavax/vecmath/Vector3f;
   |        |                 |              +- St: Arguments
   |        |                 |                 +- Op: Literal: 300.0 {F}
   |        |                 |                 +- Op: Literal: 100.0 {F}
   |        |                 |                 +- Op: Literal: 0.0 {F}
   |        |                 +- St: Add Component
   |        |                 |  +- Op: Component Allocation {tetris.tetris.CGameOverScreen}
   |        |                 |  |  +- Component <+>
   |        |                 |  |  |  +- fields
   |        |                 |  |  |     +- Quadriga Field
   |        |                 |  |  |        +- Z
   |        |                 |  |  |        +- "delay"
   |        |                 |  |  |        +- Op: Literal: true {Z}
   |        |                 |  |  +- St: Zero Arguments
   |        |                 |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |        |                 +- St: Erase Entity
   |        |                    +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |        +- tetris.tetris.InsertarPeça
   |           +- Quadriga function
   |              +- parameters
   |              |  +- parameter
   |              |  |  +- tetris.tetris.InsertarPeça
   |              |  |  +- event
   |              |  |  +- Semantic: EVENT
   |              |  +- parameter
   |              |     +- Lcat/quadriga/runtime/Entity;
   |              |     +- entitat
   |              |     +- Semantic: ENTITY
   |              +- St: Block
   |                 +- Code:
   |                    +- St: Block
   |                       +- Local Variables:
   |                       |  +- Symbol Var [ línies ] Type [ I ]
   |                       |  +- Symbol Var [ taulell ] Type [ [[I ]
   |                       |  +- Symbol Var [ cubs ] Type [ [[Lcat/quadriga/runtime/Entity; ]
   |                       |  +- Symbol Var [ gameover ] Type [ Z ]
   |                       +- Code:
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: línies {I}
   |                          |     +- Op: Literal: 0 {I}
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: taulell {[[I}
   |                          |     +- Op: Component Field: {[[I}
   |                          |        +- tetris.tetris.Taulell -> taulell
   |                          |        +- Op: Component Access {tetris.tetris.Taulell}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Taulell
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |     +- Op: Component Field: {[[Lcat/quadriga/runtime/Entity;}
   |                          |        +- tetris.tetris.Taulell -> cubs
   |                          |        +- Op: Component Access {tetris.tetris.Taulell}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Taulell
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ peça ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: peça {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: peça {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: peça {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ línea ] Type [ I ]
   |                          |     |  +- Symbol Var [ nouCub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: línea {I}
   |                          |        |     +- Op: Array Access {I}
   |                          |        |        +- Op: Event Field: {[I}
   |                          |        |        |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |        |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |        +- Op: Local variable access: peça {I}
   |                          |        +- St: =
   |                          |        |  +- Op: Array Access {I}
   |                          |        |  |  +- Op: Array Access {[I}
   |                          |        |  |  |  +- Op: Local variable access: taulell {[[I}
   |                          |        |  |  |  +- Op: Array Access {I}
   |                          |        |  |  |     +- Op: Event Field: {[I}
   |                          |        |  |  |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |        |  |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |  |  |     +- Op: Local variable access: peça {I}
   |                          |        |  |  +- Op: Array Access {I}
   |                          |        |  |     +- Op: Event Field: {[I}
   |                          |        |  |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |  |     +- Op: Local variable access: peça {I}
   |                          |        |  +- Op: Event Field: {I}
   |                          |        |     +- tetris.tetris.InsertarPeça -> color
   |                          |        |     +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |        |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                          |        |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |        +- Op: Literal: Null {Null type}
   |                          |        +- St: Apply Prototype to Entity
   |                          |        |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |        |  +- tetris.tetris.CubDeTaulell
   |                          |        |  +- St: Named Arguments
   |                          |        |     +- quadriga argument
   |                          |        |     |  +- posY
   |                          |        |     |  +- Op: Array Access {I}
   |                          |        |     |     +- Op: Event Field: {[I}
   |                          |        |     |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |        |     |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |     |     +- Op: Local variable access: peça {I}
   |                          |        |     +- quadriga argument
   |                          |        |     |  +- posX
   |                          |        |     |  +- Op: Array Access {I}
   |                          |        |     |     +- Op: Event Field: {[I}
   |                          |        |     |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |        |     |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        |     |     +- Op: Local variable access: peça {I}
   |                          |        |     +- quadriga argument
   |                          |        |        +- color
   |                          |        |        +- Op: Event Field: {I}
   |                          |        |           +- tetris.tetris.InsertarPeça -> color
   |                          |        |           +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |        +- St: =
   |                          |           +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |           |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |           |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |           |  |  +- Op: Array Access {I}
   |                          |           |  |     +- Op: Event Field: {[I}
   |                          |           |  |     |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |  |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |  |     +- Op: Local variable access: peça {I}
   |                          |           |  +- Op: Array Access {I}
   |                          |           |     +- Op: Event Field: {[I}
   |                          |           |     |  +- tetris.tetris.InsertarPeça -> py
   |                          |           |     |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     +- Op: Local variable access: peça {I}
   |                          |           +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ línea ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: línea {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: línea {I}
   |                          |  |  +- Op: Literal: 18 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: línea {I}
   |                          |  +- St: Block
   |                          |     +- Local Variables:
   |                          |     |  +- Symbol Var [ netejarLinea ] Type [ Z ]
   |                          |     +- Code:
   |                          |        +- St: Statements:
   |                          |        |  +- St: =
   |                          |        |     +- Op: Local variable access: netejarLinea {Z}
   |                          |        |     +- Op: Literal: true {Z}
   |                          |        +- St: for
   |                          |        |  +- Local Variables:
   |                          |        |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |        |  +- St: Statements:
   |                          |        |  |  +- St: =
   |                          |        |  |     +- Op: Local variable access: i {I}
   |                          |        |  |     +- Op: Literal: 0 {I}
   |                          |        |  +- Op: < {Z}
   |                          |        |  |  +- Op: Local variable access: i {I}
   |                          |        |  |  +- Op: Literal: 10 {I}
   |                          |        |  +- St: Statements:
   |                          |        |  |  +- St: Statement From Expression : ++X
   |                          |        |  |     +- Op: Local variable access: i {I}
   |                          |        |  +- St: Block
   |                          |        |     +- Code:
   |                          |        |        +- St: If Statement:
   |                          |        |           +- Condition:
   |                          |        |           |  +- Op: == {Z}
   |                          |        |           |     +- Op: Array Access {I}
   |                          |        |           |     |  +- Op: Array Access {[I}
   |                          |        |           |     |  |  +- Op: Component Field: {[[I}
   |                          |        |           |     |  |  |  +- tetris.tetris.Taulell -> taulell
   |                          |        |           |     |  |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |        |           |     |  |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |           |     |  |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |        |           |     |  |  +- Op: Local variable access: i {I}
   |                          |        |           |     |  +- Op: Local variable access: línea {I}
   |                          |        |           |     +- Op: Literal: 0 {I}
   |                          |        |           +- If Code:
   |                          |        |              +- St: Block
   |                          |        |                 +- Code:
   |                          |        |                    +- St: =
   |                          |        |                    |  +- Op: Local variable access: netejarLinea {Z}
   |                          |        |                    |  +- Op: Literal: false {Z}
   |                          |        |                    +- St: break
   |                          |        +- St: If Statement:
   |                          |           +- Condition:
   |                          |           |  +- Op: Local variable access: netejarLinea {Z}
   |                          |           +- If Code:
   |                          |              +- St: Block
   |                          |                 +- Code:
   |                          |                    +- St: for
   |                          |                    |  +- Local Variables:
   |                          |                    |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: =
   |                          |                    |  |     +- Op: Local variable access: i {I}
   |                          |                    |  |     +- Op: Literal: 0 {I}
   |                          |                    |  +- Op: < {Z}
   |                          |                    |  |  +- Op: Local variable access: i {I}
   |                          |                    |  |  +- Op: Literal: 10 {I}
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: Statement From Expression : ++X
   |                          |                    |  |     +- Op: Local variable access: i {I}
   |                          |                    |  +- St: Block
   |                          |                    |     +- Code:
   |                          |                    |        +- St: Erase Entity
   |                          |                    |        |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |     |  +- Op: Local variable access: i {I}
   |                          |                    |        |     +- Op: Local variable access: línea {I}
   |                          |                    |        +- St: =
   |                          |                    |           +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |           |  |  +- Op: Local variable access: i {I}
   |                          |                    |           |  +- Op: Local variable access: línea {I}
   |                          |                    |           +- Op: Literal: Null {Null type}
   |                          |                    +- St: for
   |                          |                    |  +- Local Variables:
   |                          |                    |  |  +- Symbol Var [ x ] Type [ I ]
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: =
   |                          |                    |  |     +- Op: Local variable access: x {I}
   |                          |                    |  |     +- Op: Literal: 0 {I}
   |                          |                    |  +- Op: < {Z}
   |                          |                    |  |  +- Op: Local variable access: x {I}
   |                          |                    |  |  +- Op: Literal: 10 {I}
   |                          |                    |  +- St: Statements:
   |                          |                    |  |  +- St: Statement From Expression : ++X
   |                          |                    |  |     +- Op: Local variable access: x {I}
   |                          |                    |  +- St: Block
   |                          |                    |     +- Code:
   |                          |                    |        +- St: for
   |                          |                    |        |  +- Local Variables:
   |                          |                    |        |  |  +- Symbol Var [ y ] Type [ I ]
   |                          |                    |        |  +- St: Statements:
   |                          |                    |        |  |  +- St: =
   |                          |                    |        |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |  |     +- Op: Local variable access: línea {I}
   |                          |                    |        |  +- Op: < {Z}
   |                          |                    |        |  |  +- Op: Local variable access: y {I}
   |                          |                    |        |  |  +- Op: Literal: 17 {I}
   |                          |                    |        |  +- St: Statements:
   |                          |                    |        |  |  +- St: Statement From Expression : ++X
   |                          |                    |        |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |  +- St: Block
   |                          |                    |        |     +- Local Variables:
   |                          |                    |        |     |  +- Symbol Var [ cub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |                    |        |     +- Code:
   |                          |                    |        |        +- St: Statements:
   |                          |                    |        |        |  +- St: =
   |                          |                    |        |        |     +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |     +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |        |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |        +- Op: + {I}
   |                          |                    |        |        |           +- Op: Local variable access: y {I}
   |                          |                    |        |        |           +- Op: Literal: 1 {I}
   |                          |                    |        |        +- St: If Statement:
   |                          |                    |        |        |  +- Condition:
   |                          |                    |        |        |  |  +- Op: ! {Z}
   |                          |                    |        |        |  |     +- Op: isnull {Z}
   |                          |                    |        |        |  |        +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |  +- If Code:
   |                          |                    |        |        |     +- St: Block
   |                          |                    |        |        |        +- Local Variables:
   |                          |                    |        |        |        |  +- Symbol Var [ nouCub ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                          |                    |        |        |        +- Code:
   |                          |                    |        |        |           +- St: Statements:
   |                          |                    |        |        |           |  +- St: =
   |                          |                    |        |        |           |     +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |        +- Op: Literal: Null {Null type}
   |                          |                    |        |        |           +- St: Apply Prototype to Entity
   |                          |                    |        |        |           |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  +- tetris.tetris.CubDeTaulell
   |                          |                    |        |        |           |  +- St: Named Arguments
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |     |  +- posY
   |                          |                    |        |        |           |     |  +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |     |  +- posX
   |                          |                    |        |        |           |     |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |     +- quadriga argument
   |                          |                    |        |        |           |        +- color
   |                          |                    |        |        |           |        +- Op: Component Field: {I}
   |                          |                    |        |        |           |           +- tetris.tetris.ColorCub -> color
   |                          |                    |        |        |           |           +- Op: Component Access {tetris.tetris.ColorCub}
   |                          |                    |        |        |           |              +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |              +- Op: Type Access: tetris.tetris.ColorCub
   |                          |                    |        |        |           +- St: =
   |                          |                    |        |        |           |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |  |  +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |  +- Op: Local variable access: nouCub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           +- St: =
   |                          |                    |        |        |           |  +- Op: Array Access {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  +- Op: Array Access {[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        |           |  |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |        |           |  |  +- Op: + {I}
   |                          |                    |        |        |           |  |     +- Op: Local variable access: y {I}
   |                          |                    |        |        |           |  |     +- Op: Literal: 1 {I}
   |                          |                    |        |        |           |  +- Op: Literal: Null {Null type}
   |                          |                    |        |        |           +- St: Erase Entity
   |                          |                    |        |        |              +- Op: Local variable access: cub {Lcat/quadriga/runtime/Entity;}
   |                          |                    |        |        +- St: =
   |                          |                    |        |           +- Op: Array Access {I}
   |                          |                    |        |           |  +- Op: Array Access {[I}
   |                          |                    |        |           |  |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |        |           |  |  +- Op: Local variable access: x {I}
   |                          |                    |        |           |  +- Op: Local variable access: y {I}
   |                          |                    |        |           +- Op: Array Access {I}
   |                          |                    |        |              +- Op: Array Access {[I}
   |                          |                    |        |              |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |        |              |  +- Op: Local variable access: x {I}
   |                          |                    |        |              +- Op: + {I}
   |                          |                    |        |                 +- Op: Local variable access: y {I}
   |                          |                    |        |                 +- Op: Literal: 1 {I}
   |                          |                    |        +- St: =
   |                          |                    |           +- Op: Array Access {I}
   |                          |                    |           |  +- Op: Array Access {[I}
   |                          |                    |           |  |  +- Op: Local variable access: taulell {[[I}
   |                          |                    |           |  |  +- Op: Local variable access: x {I}
   |                          |                    |           |  +- Op: Literal: 17 {I}
   |                          |                    |           +- Op: Literal: 0 {I}
   |                          |                    +- St: Statement From Expression : --X
   |                          |                    |  +- Op: Local variable access: línea {I}
   |                          |                    +- St: Statement From Expression : ++X
   |                          |                       +- Op: Local variable access: línies {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[[I}
   |                          |  |  +- tetris.tetris.Taulell -> taulell
   |                          |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |  +- Op: Local variable access: taulell {[[I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {[[Lcat/quadriga/runtime/Entity;}
   |                          |  |  +- tetris.tetris.Taulell -> cubs
   |                          |  |  +- Op: Component Access {tetris.tetris.Taulell}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Taulell
   |                          |  +- Op: Local variable access: cubs {[[Lcat/quadriga/runtime/Entity;}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> línies
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: + {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> línies
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Local variable access: línies {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> nivell
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: / {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> línies
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Literal: 5 {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {I}
   |                          |  |  +- tetris.tetris.Puntuació -> punts
   |                          |  |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  +- Op: + {I}
   |                          |     +- Op: Component Field: {I}
   |                          |     |  +- tetris.tetris.Puntuació -> punts
   |                          |     |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |     |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |     |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |     +- Op: Literal: 11 {I}
   |                          +- St: If Statement:
   |                          |  +- Condition:
   |                          |  |  +- Op: == {Z}
   |                          |  |     +- Op: Local variable access: línies {I}
   |                          |  |     +- Op: Literal: 1 {I}
   |                          |  +- If Code:
   |                          |  |  +- St: Block
   |                          |  |     +- Code:
   |                          |  |        +- St: =
   |                          |  |           +- Op: Component Field: {I}
   |                          |  |           |  +- tetris.tetris.Puntuació -> punts
   |                          |  |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  |           +- Op: + {I}
   |                          |  |              +- Op: Component Field: {I}
   |                          |  |              |  +- tetris.tetris.Puntuació -> punts
   |                          |  |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |  |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |  |              +- Op: Literal: 30 {I}
   |                          |  +- Else Code:
   |                          |     +- St: If Statement:
   |                          |        +- Condition:
   |                          |        |  +- Op: == {Z}
   |                          |        |     +- Op: Local variable access: línies {I}
   |                          |        |     +- Op: Literal: 2 {I}
   |                          |        +- If Code:
   |                          |        |  +- St: Block
   |                          |        |     +- Code:
   |                          |        |        +- St: =
   |                          |        |           +- Op: Component Field: {I}
   |                          |        |           |  +- tetris.tetris.Puntuació -> punts
   |                          |        |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |        |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |        |           +- Op: + {I}
   |                          |        |              +- Op: Component Field: {I}
   |                          |        |              |  +- tetris.tetris.Puntuació -> punts
   |                          |        |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |        |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |        |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |        |              +- Op: Literal: 71 {I}
   |                          |        +- Else Code:
   |                          |           +- St: If Statement:
   |                          |              +- Condition:
   |                          |              |  +- Op: == {Z}
   |                          |              |     +- Op: Local variable access: línies {I}
   |                          |              |     +- Op: Literal: 3 {I}
   |                          |              +- If Code:
   |                          |              |  +- St: Block
   |                          |              |     +- Code:
   |                          |              |        +- St: =
   |                          |              |           +- Op: Component Field: {I}
   |                          |              |           |  +- tetris.tetris.Puntuació -> punts
   |                          |              |           |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |              |           |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |              |           |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |              |           +- Op: + {I}
   |                          |              |              +- Op: Component Field: {I}
   |                          |              |              |  +- tetris.tetris.Puntuació -> punts
   |                          |              |              |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |              |              |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |              |              |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |              |              +- Op: Literal: 111 {I}
   |                          |              +- Else Code:
   |                          |                 +- St: If Statement:
   |                          |                    +- Condition:
   |                          |                    |  +- Op: == {Z}
   |                          |                    |     +- Op: Local variable access: línies {I}
   |                          |                    |     +- Op: Literal: 4 {I}
   |                          |                    +- If Code:
   |                          |                       +- St: Block
   |                          |                          +- Code:
   |                          |                             +- St: =
   |                          |                                +- Op: Component Field: {I}
   |                          |                                |  +- tetris.tetris.Puntuació -> punts
   |                          |                                |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |                                |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                                |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |                                +- Op: + {I}
   |                          |                                   +- Op: Component Field: {I}
   |                          |                                   |  +- tetris.tetris.Puntuació -> punts
   |                          |                                   |  +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |                                   |     +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |                                   |     +- Op: Type Access: tetris.tetris.Puntuació
   |                          |                                   +- Op: Literal: 160 {I}
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Punts" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Punts\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> punts
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Línies" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Línies\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> línies
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: =
   |                          |  +- Op: Component Field: {Ljava/lang/String;}
   |                          |  |  +- cat.quadriga.base.TextRenderer -> text
   |                          |  |  +- Op: Component Access {cat.quadriga.base.TextRenderer}
   |                          |  |     +- Op: Child Access {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |  |     |  +- Op: Literal: "Nivell" {Ljava/lang/String;}
   |                          |  |     +- Op: Type Access: cat.quadriga.base.TextRenderer
   |                          |  +- Op: + {Ljava/lang/String;}
   |                          |     +- Op: Literal: "Nivell\n" {Ljava/lang/String;}
   |                          |     +- Op: Component Field: {I}
   |                          |        +- tetris.tetris.Puntuació -> nivell
   |                          |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                          |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                          |           +- Op: Type Access: tetris.tetris.Puntuació
   |                          +- St: Statements:
   |                          |  +- St: =
   |                          |     +- Op: Local variable access: gameover {Z}
   |                          |     +- Op: Literal: false {Z}
   |                          +- St: for
   |                          |  +- Local Variables:
   |                          |  |  +- Symbol Var [ i ] Type [ I ]
   |                          |  +- St: Statements:
   |                          |  |  +- St: =
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  |     +- Op: Literal: 0 {I}
   |                          |  +- Op: < {Z}
   |                          |  |  +- Op: Local variable access: i {I}
   |                          |  |  +- Op: Literal: 4 {I}
   |                          |  +- St: Statements:
   |                          |  |  +- St: Statement From Expression : ++X
   |                          |  |     +- Op: Local variable access: i {I}
   |                          |  +- St: Block
   |                          |     +- Code:
   |                          |        +- St: If Statement:
   |                          |           +- Condition:
   |                          |           |  +- Op: && {Z}
   |                          |           |     +- Op: && {Z}
   |                          |           |     |  +- Op: > {Z}
   |                          |           |     |  |  +- Op: Array Access {I}
   |                          |           |     |  |  |  +- Op: Event Field: {[I}
   |                          |           |     |  |  |  |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |     |  |  |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     |  |  |  +- Op: Local variable access: i {I}
   |                          |           |     |  |  +- Op: Literal: 2 {I}
   |                          |           |     |  +- Op: < {Z}
   |                          |           |     |     +- Op: Array Access {I}
   |                          |           |     |     |  +- Op: Event Field: {[I}
   |                          |           |     |     |  |  +- tetris.tetris.InsertarPeça -> px
   |                          |           |     |     |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |     |     |  +- Op: Local variable access: i {I}
   |                          |           |     |     +- Op: Literal: 7 {I}
   |                          |           |     +- Op: > {Z}
   |                          |           |        +- Op: Array Access {I}
   |                          |           |        |  +- Op: Event Field: {[I}
   |                          |           |        |  |  +- tetris.tetris.InsertarPeça -> py
   |                          |           |        |  |  +- Op: Local variable access: event {tetris.tetris.InsertarPeça}
   |                          |           |        |  +- Op: Local variable access: i {I}
   |                          |           |        +- Op: Literal: 15 {I}
   |                          |           +- If Code:
   |                          |              +- St: Block
   |                          |                 +- Code:
   |                          |                    +- St: =
   |                          |                       +- Op: Local variable access: gameover {Z}
   |                          |                       +- Op: Literal: true {Z}
   |                          +- St: If Statement:
   |                             +- Condition:
   |                             |  +- Op: Local variable access: gameover {Z}
   |                             +- If Code:
   |                                +- St: Block
   |                                   +- Local Variables:
   |                                   |  +- Symbol Var [ gameOverScreen ] Type [ Lcat/quadriga/runtime/Entity; ]
   |                                   +- Code:
   |                                      +- St: Statements:
   |                                      |  +- St: =
   |                                      |     +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      |     +- Op: New Entity {Lcat/quadriga/runtime/Entity;}
   |                                      |        +- Op: Literal: Null {Null type}
   |                                      |        +- Op: Literal: Null {Null type}
   |                                      +- St: Apply Prototype to Entity
   |                                      |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      |  +- cat.quadriga.base.TextRendererPrototype
   |                                      |  +- St: Named Arguments
   |                                      |  |  +- quadriga argument
   |                                      |  |  |  +- text
   |                                      |  |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  +- Op: + {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  |  +- Op: Literal: "Game Over\n\nPunts\n" {Ljava/lang/String;}
   |                                      |  |  |     |  |  |  |  +- Op: Component Field: {I}
   |                                      |  |  |     |  |  |  |     +- tetris.tetris.Puntuació -> punts
   |                                      |  |  |     |  |  |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |     |  |  |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |     |  |  |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  |     |  |  |  +- Op: Literal: "\n\nLínies\n" {Ljava/lang/String;}
   |                                      |  |  |     |  |  +- Op: Component Field: {I}
   |                                      |  |  |     |  |     +- tetris.tetris.Puntuació -> línies
   |                                      |  |  |     |  |     +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |     |  |        +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |     |  |        +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  |     |  +- Op: Literal: "\n\nNivell\n" {Ljava/lang/String;}
   |                                      |  |  |     +- Op: Component Field: {I}
   |                                      |  |  |        +- tetris.tetris.Puntuació -> nivell
   |                                      |  |  |        +- Op: Component Access {tetris.tetris.Puntuació}
   |                                      |  |  |           +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   |                                      |  |  |           +- Op: Type Access: tetris.tetris.Puntuació
   |                                      |  |  +- quadriga argument
   |                                      |  |     +- font
   |                                      |  |     +- Op: Literal: "resources/fonts/comic32.fnt" {Ljava/lang/String;}
   |                                      |  +- Component redefinition
   |                                      |     +- cat.quadriga.base.Transform
   |                                      |     +- St: Named Arguments
   |                                      |        +- quadriga argument
   |                                      |           +- position
   |                                      |           +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |                                      |              +- Ljavax/vecmath/Vector3f;
   |                                      |              +- St: Arguments
   |                                      |                 +- Op: Literal: 300.0 {F}
   |                                      |                 +- Op: Literal: 100.0 {F}
   |                                      |                 +- Op: Literal: 0.0 {F}
   |                                      +- St: Add Component
   |                                      |  +- Op: Component Allocation {tetris.tetris.CGameOverScreen}
   |                                      |  |  +- Component <+>
   |                                      |  |  |  +- fields
   |                                      |  |  |     +- Quadriga Field
   |                                      |  |  |        +- Z
   |                                      |  |  |        +- "delay"
   |                                      |  |  |        +- Op: Literal: true {Z}
   |                                      |  |  +- St: Named Arguments
   |                                      |  |     +- quadriga argument
   |                                      |  |        +- delay
   |                                      |  |        +- Op: Literal: false {Z}
   |                                      |  +- Op: Local variable access: gameOverScreen {Lcat/quadriga/runtime/Entity;}
   |                                      +- St: Erase Entity
   |                                         +- Op: Local variable access: entitat {Lcat/quadriga/runtime/Entity;}
   +- "cat.quadriga.render.simple.RenderManager" : Symbol Type
   |  +- Lcat/quadriga/render/simple/RenderManager;
   +- "tetris.tetris.CubDeMarc" : Symbol Type
   |  +- Prototype <+>
   |     +- parameters
   |     |  +- parameter
   |     |  |  +- I
   |     |  |  +- posX
   |     |  +- parameter
   |     |     +- I
   |     |     +- posY
   |     +- St: Block
   |        +- Local Variables:
   |        |  +- Symbol Var [ posX ] Type [ I ]
   |        |  +- Symbol Var [ posY ] Type [ I ]
   |        +- Code:
   |           +- St: Add Component
   |           |  +- Op: Component Allocation {cat.quadriga.base.Transform}
   |           |  |  +- Component <+>
   |           |  |  |  +- fields
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |  +- "position"
   |           |  |  |     |  +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |  |     |     +- Ljavax/vecmath/Vector3f;
   |           |  |  |     |     +- St: Zero Arguments
   |           |  |  |     +- Quadriga Field
   |           |  |  |     |  +- F
   |           |  |  |     |  +- "scale"
   |           |  |  |     |  +- Op: Literal: 1.0 {F}
   |           |  |  |     +- Quadriga Field
   |           |  |  |        +- Ljavax/vecmath/Quat4f;
   |           |  |  |        +- "rotation"
   |           |  |  |        +- Op: Constructor {Ljavax/vecmath/Quat4f;}
   |           |  |  |           +- Ljavax/vecmath/Quat4f;
   |           |  |  |           +- St: Arguments
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 0.0 {F}
   |           |  |  |              +- Op: Literal: 1.0 {F}
   |           |  |  +- St: Named Arguments
   |           |  |     +- quadriga argument
   |           |  |        +- position
   |           |  |        +- Op: Constructor {Ljavax/vecmath/Vector3f;}
   |           |  |           +- Ljavax/vecmath/Vector3f;
   |           |  |           +- St: Arguments
   |           |  |              +- Op: * {I}
   |           |  |              |  +- Op: Local variable access: posX {I}
   |           |  |              |  +- Op: Literal: 2 {I}
   |           |  |              +- Op: Literal: 0 {I}
   |           |  |              +- Op: * {I}
   |           |  |                 +- Op: Local variable access: posY {I}
   |           |  |                 +- Op: Literal: 2 {I}
   |           |  +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   |           +- St: Add Component
   |              +- Op: Component Allocation {cat.quadriga.base.BoxRenderer}
   |              |  +- Component <+>
   |              |  |  +- fields
   |              |  +- St: Zero Arguments
   |              +- Op: Local variable access: this {Lcat/quadriga/runtime/Entity;}
   +- "cat.quadriga.base.SimpleSphereRenderer" : Symbol Type
   |  +- System <+>
   |     +- needed components
   |     |  +- cat.quadriga.base.SphereRenderer
   |     +- Update: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> changeSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer
   |     +- New Entity: 
   |     |  +- Quadriga function
   |     |     +- parameters
   |     |     |  +- parameter
   |     |     |     +- Lcat/quadriga/runtime/Entity;
   |     |     |     +- entity
   |     |     |     +- Semantic: ENTITY
   |     |     +- St: Block
   |     |        +- Code:
   |     |           +- St: Block
   |     |              +- Local Variables:
   |     |              |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |     |              +- Code:
   |     |                 +- St: Statements:
   |     |                 |  +- St: =
   |     |                 |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |     |                 |        +- cat.quadriga.render.simple.RenderManager -> instance
   |     |                 +- St: Statement From Expression : Call
   |     |                    +- Op: Method:
   |     |                    |  +- cat.quadriga.render.simple.RenderManager -> setSphere
   |     |                    |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |     |                    +- St: Arguments
   |     |                       +- Op: Call {I}
   |     |                       |  +- Op: Method:
   |     |                       |  |  +- cat.quadriga.runtime.Entity -> getGUID
   |     |                       |  |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                       |  +- St: Zero Arguments
   |     |                       +- Op: Component Field: {F}
   |     |                          +- cat.quadriga.base.SphereRenderer -> radi
   |     |                          +- Op: Component Access {cat.quadriga.base.SphereRenderer}
   |     |                             +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |     |                             +- Op: Type Access: cat.quadriga.base.SphereRenderer
   |     +- Remove Entity: 
   |        +- Quadriga function
   |           +- parameters
   |           |  +- parameter
   |           |     +- Lcat/quadriga/runtime/Entity;
   |           |     +- entity
   |           |     +- Semantic: ENTITY
   |           +- St: Block
   |              +- Code:
   |                 +- St: Block
   |                    +- Local Variables:
   |                    |  +- Symbol Var [ rm ] Type [ Lcat/quadriga/render/simple/RenderManager; ]
   |                    +- Code:
   |                       +- St: Statements:
   |                       |  +- St: =
   |                       |     +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                       |     +- Op: Static Field: {Lcat/quadriga/render/simple/RenderManager;}
   |                       |        +- cat.quadriga.render.simple.RenderManager -> instance
   |                       +- St: Statement From Expression : Call
   |                          +- Op: Method:
   |                          |  +- cat.quadriga.render.simple.RenderManager -> deleteSphere
   |                          |  +- Op: Local variable access: rm {Lcat/quadriga/render/simple/RenderManager;}
   |                          +- St: Arguments
   |                             +- Op: Call {I}
   |                                +- Op: Method:
   |                                |  +- cat.quadriga.runtime.Entity -> getGUID
   |                                |  +- Op: Local variable access: entity {Lcat/quadriga/runtime/Entity;}
   |                                +- St: Zero Arguments
   +- "javax.vecmath.Vector3f" : Symbol Type
      +- Ljavax/vecmath/Vector3f;